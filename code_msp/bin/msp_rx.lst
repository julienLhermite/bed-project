
bin/msp_rx.elf:     file format elf32-msp430

SYMBOL TABLE:
00008000 l    d  .text	00000000 .text
0000a520 l    d  .rodata	00000000 .rodata
00000200 l    d  .bss	00000000 .bss
00000240 l    d  .noinit	00000000 .noinit
0000ffe0 l    d  .vectors	00000000 .vectors
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 msp_rx.c
00000200 l     O .bss	00000006 timer
00000206 l     O .bss	00000002 led_green_flag
00008150 l     F .text	00000086 thread_led_green
000081d6 l     F .text	0000009a thread_uart
00000208 l     O .bss	00000007 radio_tx_buffer
00000210 l     O .bss	00000007 radio_rx_buffer
00000218 l     O .bss	00000002 radio_rx_flag
000082ec l     F .text	0000005e thread_rx
0000021a l     O .bss	00000006 pt
000080dc l       .text	00000000 __br_unexpected_
00000000 l    df *ABS*	00000000 adc10.c
00000220 l     O .bss	00000002 coeff_1
00000222 l     O .bss	00000002 coeff_2
00000000 l    df *ABS*	00000000 cc2500.c
00008590 l     F .text	00000016 CC2500_HW_GDO0_IRQ_ON_ASSERT
000085a6 l     F .text	00000016 CC2500_HW_GDO2_IRQ_ON_ASSERT
000085bc l     F .text	00000016 CC2500_HW_GDO0_DINT
000085d2 l     F .text	00000016 CC2500_HW_GDO2_DINT
000085e8 l     F .text	00000016 CC2500_HW_GDO0_EINT
000085fe l     F .text	00000016 CC2500_HW_GDO0_CLEAR_FLAG
00008614 l     F .text	00000016 CC2500_HW_GDO2_CLEAR_FLAG
0000862a l     F .text	00000016 CONFIG_GDO0_PIN_AS_INPUT
00008640 l     F .text	00000052 CC2500_HW_INIT
00008978 l     F .text	00000048 cc2500_check_tx_underflow
000089c0 l     F .text	0000004a cc2500_check_rx_overflow
00000000 l    df *ABS*	00000000 clock.c
00000228 l     O .bss	00000002 mclk_freq_mhz
00009232 l     F .text	000000c0 set_mcu_speed
00000000 l    df *ABS*	00000000 leds.c
00000000 l    df *ABS*	00000000 spi.c
00000000 l    df *ABS*	00000000 timer.c
0000022a l     O .bss	00000002 timerA_cb
0000022c l     O .bss	00000002 timerA_wakeup
0000022e l     O .bss	00000002 timerB_cb
00000230 l     O .bss	00000002 timerB_wakeup
00000000 l    df *ABS*	00000000 uart.c
00000232 l     O .bss	00000002 uart_cb
00000000 l    df *ABS*	00000000 watchdog.c
00000234 l     O .bss	00000002 watchdog_backup
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vuprintf.c
00009bb8 l     F .text	00000198 print_field
000099ea g     F .text	00000032 putchar
00000057 g       *ABS*	00000000 __BCSCTL1
0000939c g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_16MHz
00000236 g     O .bss	00000001 cc2500_gdo2_cfg
00000174 g       *ABS*	00000000 __TACCR1
00008fec g     F .text	00000024 cc2500_idle
00000000 g       *ABS*	00000000 __data_size
000080dc  w      .text	00000000 __isr_14
00000128 g       *ABS*	00000000 __FCTL1
00009060 g     F .text	0000001a cc2500_variables_bootstrap
00009374 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_3MHz
00000024 g       *ABS*	00000000 __P1IES
00008400 g     F .text	000000ce adc10_sample_temp
0000004b g       *ABS*	00000000 __ADC10AE1
0000918a g     F .text	0000009a port2_irq_handler
00009b9a g     F .text	00000010 printf
00000069 g       *ABS*	00000000 __UCB0CTL1
00009b3e g       .text	00000000 __ext_divmod16
000080dc  w      .text	00000000 __isr_4
00000002 g       *ABS*	00000000 __IFG1
0000975e g     F .text	00000016 spi_select_radio
00000060 g       *ABS*	00000000 __UCA0CTL0
00008d68 g     F .text	0000006a cc2500_utx
00009316 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_4MHz
000098ba g     F .text	00000018 timerB_register_cb
0000012e g       *ABS*	00000000 __TAIV
000096b4 g     F .text	00000012 spi_check_miso_high
000099e0 g     F .text	0000000a uart_stop
000086d4 g     F .text	0000002e CC2500_SPI_WREG
00000226 g     O .bss	00000001 cc2500_rx_length
00000000 g       .vectors	00000000 _efartext
0000967a g     F .text	0000003a spi_tx_rx
00009b78 g     F .text	00000000 __udivhi3
00000001 g       *ABS*	00000000 __IE2
0000002b g       *ABS*	00000000 __P2IFG
0000001a g       *ABS*	00000000 __P3DIR
0000888a g     F .text	0000001e CC2500_SPI_RX_FIFO_BYTE
0000a5a0 g       *ABS*	00000000 _etext
00000190 g       *ABS*	00000000 __TBR
00009788 g     F .text	00000038 Timer_A
0000908c g     F .text	000000dc cc2500_init
000010f8 g       *ABS*	00000000 __CALDCO_16MHZ
00008f68 g     F .text	00000018 cc2500_rx_register_cb
0000001d g       *ABS*	00000000 __P4OUT
00000040 g       *ABS*	00000000 __bss_size
000010fd g       *ABS*	00000000 __CALBC1_8MHZ
000093ec g     F .text	00000010 loop_4_cycles
00008000  w      .text	00000000 __watchdog_support
0000891c g     F .text	00000030 cc2500_gdo2_set_signal
000080d6  w      .text	00000000 __stop_progExec__
0000002d g       *ABS*	00000000 __P2IE
00009a3a g     F .text	00000014 uart_eint
00008828 g     F .text	00000062 CC2500_SPI_RX_BURST
00000192 g       *ABS*	00000000 __TBCCR0
000080dc  w      .text	00000000 __isr_11
00009774 g     F .text	00000014 spi_deselect_radio
00000186 g       *ABS*	00000000 __TBCCTL2
00009360 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_6MHz
0000a3ee g     F .text	00000000 __udivsi3
00000025 g       *ABS*	00000000 __P1IE
0000006b g       *ABS*	00000000 __UCB0BR1
0000960a g     F .text	00000062 spi_init
00009942 g     F .text	0000000e timerB_stop
00000049 g       *ABS*	00000000 __ADC10DTC1
000087d2 g     F .text	00000056 CC2500_SPI_TX_BURST
00000224 g     O .bss	00000001 cc2500_rx_offset
00000066 g       *ABS*	00000000 __UCA0RXBUF
00000061 g       *ABS*	00000000 __UCA0CTL1
000083f0 g     F .text	00000010 adc10irq
0000933a g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_1MHz
0000a4e0 g       .text	00000000 __udivmoddi4
00008d4c g     F .text	0000001c cc2500_calibrate
000093c4 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_4MHz
0000894c g     F .text	0000002c cc2500_set_fifo_threshold
00008692 g     F .text	00000020 CC2500_SPI_TX
00000182 g       *ABS*	00000000 __TBCCTL0
000088a8 g     F .text	00000044 cc2500_wait_status
00008e30 g     F .text	00000138 cc2500_rx_pkt_eop
0000006d g       *ABS*	00000000 __UCB0STAT
000083f0 g       .text	00000000 __isr_5
00008702 g     F .text	00000036 CC2500_SPI_RREG
000083a8 g     F .text	00000032 adc10_calibrate
00000063 g       *ABS*	00000000 __UCA0BR1
0000a4b2 g     F .text	00000000 __umoddi3
0000a5a0 g       *ABS*	00000000 __data_load_start
000095c2 g     F .text	00000016 leds_on
000080dc g       .text	00000000 __dtors_end
00000053 g       *ABS*	00000000 __BCSCTL3
00008f80 g     F .text	0000001e cc2500_packet_status
0000955a g     F .text	00000014 led_green_switch
000001bc g       *ABS*	00000000 __ADC10SA
00000166 g       *ABS*	00000000 __TACCTL2
0000812e g     F .text	00000022 timer_reached
0000a48c g     F .text	00000000 __udivdi3
00000065 g       *ABS*	00000000 __UCA0STAT
00009530 g     F .text	00000016 led_green_off
00009010 g     F .text	00000012 cc2500_sleep
00008f9e g     F .text	00000030 cc2500_cca
000080dc  w      .text	00000000 __isr_2
00000160 g       *ABS*	00000000 __TACTL
00009b70 g     F .text	00000000 __modhi3
0000012c g       *ABS*	00000000 __FCTL3
000097d6 g     F .text	00000018 timerA_register_cb
000080dc  w      .text	00000000 __isr_10
00000238 g     O .bss	00000002 radio_rx_cb
00009224 g     F .text	0000000e get_mclk_freq_mhz
0000002e g       *ABS*	00000000 __P2SEL
00000180 g       *ABS*	00000000 __TBCTL
0000983a g     F .text	00000024 timerA_start_milliseconds
00009328 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_2MHz
0000879c g     F .text	00000036 CC2500_SPI_RX_BYTE
000010f9 g       *ABS*	00000000 __CALBC1_16MHZ
000000c3 g       *ABS*	00000000 __OA1CTL1
00000023 g       *ABS*	00000000 __P1IFG
000096c6 g     F .text	0000004a spi_tx_burst
000010fb g       *ABS*	00000000 __CALBC1_12MHZ
0000004a g       *ABS*	00000000 __ADC10AE0
0000011a g       *ABS*	00000000 __UCB0I2CSA
00009584 g     F .text	00000014 led_red_on
00000172 g       *ABS*	00000000 __TACCR0
000095ac g     F .text	00000016 leds_off
00000056 g       *ABS*	00000000 __DCOCTL
00000003 g       *ABS*	00000000 __IFG2
00000240 g     O .noinit	00000002 __wdt_clear_value
00008270 g     F .text	0000007c radio_cb
00009a1c g     F .text	0000001e uart_getchar
0000001b g       *ABS*	00000000 __P3SEL
0000985e g     F .text	0000000e timerA_stop
0000903a g     F .text	00000026 cc2500_wakeup
00009a8c g       .text	00000000 __isr_7
0000ffe0 g     O .vectors	00000020 __ivtbl_16
0000006c g       *ABS*	00000000 __UCB0I2CIE
0000006a g       *ABS*	00000000 __UCB0BR0
0000a424 g     F .text	00000000 __umodsi3
0000907a g     F .text	00000012 CC_ASSERT
00009baa g     F .text	0000000e vprintf
00000028 g       *ABS*	00000000 __P2IN
000097ee g     F .text	00000018 timerA_set_wakeup
00000118 g       *ABS*	00000000 __UCB0I2COA
00000184 g       *ABS*	00000000 __TBCCTL1
000001b4 g       *ABS*	00000000 __ADC10MEM
0000023a g     O .bss	00000001 cc2500_gdo0_cfg
0000956e g     F .text	00000016 led_red_off
00009b92 g     F .text	00000000 __umodhi3
0000834a g     F .text	00000048 ezdisplay
000080dc  w      .text	00000000 __isr_0
00000029 g       *ABS*	00000000 __P2OUT
0000012a g       *ABS*	00000000 __FCTL2
00000064 g       *ABS*	00000000 __UCA0MCTL
00009710 g     F .text	0000004e spi_rx_burst
00009950 g     F .text	00000090 uart_init
00008028  w      .text	00000000 __do_clear_bss
00009a4e g     F .text	00000016 uart_dint
00000021 g       *ABS*	00000000 __P1OUT
0000002c g       *ABS*	00000000 __P2IES
00000026 g       *ABS*	00000000 __P1SEL
000093b0 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_8MHz
00009ae0 g     F .text	0000001c watchdog_stop
000092f2 g     F .text	00000012 set_mcu_speed_dco_mclk_1MHz_smclk_1MHz
00009388 g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_1_5MHz
000083da g     F .text	00000016 adc10_stop
0000a3ee g       .text	00000000 __ext_udivmod32
000098a4 g     F .text	00000016 timerB_init
000088ec g     F .text	00000030 cc2500_gdo0_set_signal
00000027 g       *ABS*	00000000 __P1REN
00009b12 g       .text	00000000 __mulsi3
00009a64 g     F .text	00000028 uart_register_cb
000000c0 g       *ABS*	00000000 __OA0CTL0
00008e00 g     F .text	00000030 cc2500_rx_enter
000093d8 g     F .text	00000014 set_mcu_speed_dco_mclk_16MHz_smclk_2MHz
0000a51e  w      .text	00000000 _unexpected_
000080dc  w      .text	00000000 __isr_8
0000918a g       .text	00000000 __isr_3
00009d50 g     F .text	0000069e vuprintf
00009598 g     F .text	00000014 led_red_switch
000010fc g       *ABS*	00000000 __CALDCO_8MHZ
00009b3e g     F .text	00000000 __divhi3
00009b78 g       .text	00000000 __ext_udivmod16
00008000  w      .text	00000000 _reset_vector__
000080dc g       .text	00000000 __ctors_start
0000a42e g       .text	00000000 __xabi_udivmod64
000080dc  w      .text	00000000 __isr_12
000010fa g       *ABS*	00000000 __CALDCO_12MHZ
00000018 g       *ABS*	00000000 __P3IN
00008010  w      .text	00000000 __do_copy_data
00000200 g       .bss	00000000 __bss_start
0000803e g     F .text	00000098 main
00000176 g       *ABS*	00000000 __TACCR2
000094a2 g     F .text	0000008e delay_ms
000000c2 g       *ABS*	00000000 __OA1CTL0
0000986c g       .text	00000000 __isr_13
000093fc g     F .text	000000a6 delay_usec
00000170 g       *ABS*	00000000 __TAR
0000001e g       *ABS*	00000000 __P4DIR
000097c0 g     F .text	00000016 timerA_init
00009a8c g     F .text	00000054 usart0irq
00000162 g       *ABS*	00000000 __TACCTL0
00010000 g       .vectors	00000000 _vectors_end
000098d2 g     F .text	00000018 timerB_set_wakeup
0000002a g       *ABS*	00000000 __P2DIR
00000068 g       *ABS*	00000000 __UCB0CTL0
0000002f g       *ABS*	00000000 __P2REN
000084ce g     F .text	000000c2 adc10_sample_avcc
0000986c g     F .text	00000038 Timer_B
00008fce g     F .text	0000001e cc2500_get_rssi
00009022 g     F .text	00000018 cc2500_reset
0000006e g       *ABS*	00000000 __UCB0RXBUF
000001b0 g       *ABS*	00000000 __ADC10CTL0
00008738 g     F .text	00000036 CC2500_SPI_ROREG
0000a574 g     O .rodata	00000024 rfSettings_default_config
00009788 g       .text	00000000 __isr_9
0000005e g       *ABS*	00000000 __UCA0IRTCTL
000010fe g       *ABS*	00000000 __CALDCO_1MHZ
00000067 g       *ABS*	00000000 __UCA0TXBUF
0000800c  w      .text	00000000 __init_stack
0000005d g       *ABS*	00000000 __UCA0ABCTL
00009806 g     F .text	00000034 timerA_start_ticks
00000019 g       *ABS*	00000000 __P3OUT
000000c1 g       *ABS*	00000000 __OA0CTL1
0000934c g     F .text	00000014 set_mcu_speed_dco_mclk_12MHz_smclk_12MHz
000086b2 g     F .text	00000022 CC2500_SPI_STROBE
000080dc g       .text	00000000 __dtors_start
000080dc  w      .text	00000000 __isr_6
000080dc g       .text	00000000 __ctors_end
00000062 g       *ABS*	00000000 __UCA0BR0
00000600 g       *ABS*	00000000 __stack
00009304 g     F .text	00000012 set_mcu_speed_dco_mclk_8MHz_smclk_8MHz
000080dc  w      .text	00000000 __isr_1
00000200 g       .rodata	00000000 _edata
00000242 g       *ABS*	00000000 _end
00000194 g       *ABS*	00000000 __TBCCR1
0000023c g     O .bss	00000002 cc2500_rx_packet
00000048 g       *ABS*	00000000 __ADC10DTC0
0000011e g       *ABS*	00000000 __TBIV
000001b2 g       *ABS*	00000000 __ADC10CTL1
0000023e g     O .bss	00000001 cc2500_status_register
00009546 g     F .text	00000014 led_green_on
00008a34 g     F .text	000002f8 cc2500_configure
000080e0 g     F .text	0000004e timer_tick_cb
00009afc g     F .text	00000016 watchdog_restore
00000058 g       *ABS*	00000000 __BCSCTL2
000080d6  w      .text	00000000 _endless_loop__
0000001f g       *ABS*	00000000 __P4SEL
00000196 g       *ABS*	00000000 __TBCCR2
00000022 g       *ABS*	00000000 __P1DIR
00008d2c g     F .text	00000020 cc2500_set_channel
00008dd2 g     F .text	0000002e cc2500_rx_register_buffer
0000005f g       *ABS*	00000000 __UCA0IRRCTL
00000010 g       *ABS*	00000000 __P3REN
00000164 g       *ABS*	00000000 __TACCTL1
0000006f g       *ABS*	00000000 __UCB0TXBUF
000098ea g     F .text	00000034 timerB_start_ticks
000010ff g       *ABS*	00000000 __CALBC1_1MHZ
00008010  w      .text	00000000 __low_level_init
00000011 g       *ABS*	00000000 __P4REN
00008392 g     F .text	00000016 adc10_start
00000200 g       .rodata	00000000 __data_start
0000991e g     F .text	00000024 timerB_start_milliseconds
00009168 g     F .text	00000022 cc2500_gdox_signal_handler
00000120 g       *ABS*	00000000 __WDTCTL
00000000 g       *ABS*	00000000 __IE1
0000876e g     F .text	0000002e CC2500_SPI_TX_BYTE
00008a0a g     F .text	0000002a cc2500_check_fifo_xflow_flush
00000020 g       *ABS*	00000000 __P1IN
0000001c g       *ABS*	00000000 __P4IN
0000966c g     F .text	0000000e spi_clear_rx_IFG
000095d8 g     F .text	00000032 leds_init



Disassembly of section .text:

00008000 <__watchdog_support>:
    8000:	55 42 20 01 	mov.b	&0x0120,r5	
    8004:	35 d0 08 5a 	bis	#23048,	r5	;#0x5a08
    8008:	82 45 40 02 	mov	r5,	&0x0240	

0000800c <__init_stack>:
    800c:	31 40 00 06 	mov	#1536,	r1	;#0x0600

00008010 <__do_copy_data>:
    8010:	3f 40 00 00 	mov	#0,	r15	;#0x0000
    8014:	0f 93       	tst	r15		
    8016:	08 24       	jz	$+18     	;abs 0x8028
    8018:	92 42 40 02 	mov	&0x0240,&0x0120	
    801c:	20 01 
    801e:	2f 83       	decd	r15		
    8020:	9f 4f a0 a5 	mov	-23136(r15),512(r15);0xa5a0(r15), 0x0200(r15)
    8024:	00 02 
    8026:	f8 23       	jnz	$-14     	;abs 0x8018

00008028 <__do_clear_bss>:
    8028:	3f 40 40 00 	mov	#64,	r15	;#0x0040
    802c:	0f 93       	tst	r15		
    802e:	07 24       	jz	$+16     	;abs 0x803e
    8030:	92 42 40 02 	mov	&0x0240,&0x0120	
    8034:	20 01 
    8036:	1f 83       	dec	r15		
    8038:	cf 43 00 02 	mov.b	#0,	512(r15);r3 As==00, 0x0200(r15)
    803c:	f9 23       	jnz	$-12     	;abs 0x8030

0000803e <main>:

#define NUM_PT 3
static struct pt pt[NUM_PT];

int main(void)
{
    803e:	04 41       	mov	r1,	r4	
    8040:	24 53       	incd	r4		
    8042:	21 83       	decd	r1		
    watchdog_stop();
    8044:	b0 12 e0 9a 	call	#0x9ae0	

    /* protothreads init */
    int i;
    for(i = 0; i < NUM_PT; i++)
    8048:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc(r4)
    804c:	09 3c       	jmp	$+20     	;abs 0x8060
    {
        PT_INIT(&pt[i]);
    804e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8052:	0f 5f       	rla	r15		
    8054:	3f 50 1a 02 	add	#538,	r15	;#0x021a
    8058:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
{
    watchdog_stop();

    /* protothreads init */
    int i;
    for(i = 0; i < NUM_PT; i++)
    805c:	94 53 fc ff 	inc	-4(r4)		;0xfffc(r4)
    8060:	b4 90 03 00 	cmp	#3,	-4(r4)	;#0x0003, 0xfffc(r4)
    8064:	fc ff 
    8066:	f3 3b       	jl	$-24     	;abs 0x804e
    {
        PT_INIT(&pt[i]);
    }

    /* clock init */
    set_mcu_speed_dco_mclk_16MHz_smclk_8MHz();
    8068:	b0 12 b0 93 	call	#0x93b0	

    /* LEDs init */
    leds_init();
    806c:	b0 12 d8 95 	call	#0x95d8	
    led_red_off();
    8070:	b0 12 6e 95 	call	#0x956e	
    led_green_off();
    8074:	b0 12 30 95 	call	#0x9530	

    /* timer init */
    timerA_init();
    8078:	b0 12 c0 97 	call	#0x97c0	
    timerA_register_cb(&timer_tick_cb);
    807c:	3f 40 e0 80 	mov	#-32544,r15	;#0x80e0
    8080:	b0 12 d6 97 	call	#0x97d6	
    timerA_start_milliseconds(TIMER_PERIOD_MS);
    8084:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    8088:	b0 12 3a 98 	call	#0x983a	

    /* UART init (serial link) */
    uart_init(UART_9600_SMCLK_8MHZ);
    808c:	3f 42       	mov	#8,	r15	;r2 As==11
    808e:	b0 12 50 99 	call	#0x9950	

    /* ADC10 init (temperature) */
    adc10_start();
    8092:	b0 12 92 83 	call	#0x8392	

    /* radio init */
    
    spi_init();
    8096:	b0 12 0a 96 	call	#0x960a	
    cc2500_init();
    809a:	b0 12 8c 90 	call	#0x908c	
    cc2500_rx_register_buffer(radio_tx_buffer, PKTLEN);
    809e:	7e 40 07 00 	mov.b	#7,	r14	;#0x0007
    80a2:	3f 40 08 02 	mov	#520,	r15	;#0x0208
    80a6:	b0 12 d2 8d 	call	#0x8dd2	
    cc2500_rx_register_cb(radio_cb);
    80aa:	3f 40 70 82 	mov	#-32144,r15	;#0x8270
    80ae:	b0 12 68 8f 	call	#0x8f68	
    cc2500_rx_enter();
    80b2:	b0 12 00 8e 	call	#0x8e00	
    radio_rx_flag = 0;
    80b6:	82 43 18 02 	mov	#0,	&0x0218	;r3 As==00
    
    __enable_interrupt();
    80ba:	32 d2       	eint			


    /* simple cycle scheduling */
    while(1) {
      thread_led_green(&pt[0]);
    80bc:	3f 40 1a 02 	mov	#538,	r15	;#0x021a
    80c0:	b0 12 50 81 	call	#0x8150	
      thread_uart(&pt[1]);
    80c4:	3f 40 1c 02 	mov	#540,	r15	;#0x021c
    80c8:	b0 12 d6 81 	call	#0x81d6	
      thread_rx(&pt[2]);
    80cc:	3f 40 1e 02 	mov	#542,	r15	;#0x021e
    80d0:	b0 12 ec 82 	call	#0x82ec	
    }
    80d4:	f3 3f       	jmp	$-24     	;abs 0x80bc

000080d6 <__stop_progExec__>:
    80d6:	32 d0 f0 00 	bis	#240,	r2	;#0x00f0
    80da:	fd 3f       	jmp	$-4      	;abs 0x80d6

000080dc <__ctors_end>:
    80dc:	30 40 1e a5 	br	#0xa51e	

000080e0 <timer_tick_cb>:
 * Timer
 */

/* timer interrupt handler: increases timer's counter */
/* approximately every 10ms                           */ 
void timer_tick_cb() {
    80e0:	04 12       	push	r4		
    80e2:	04 41       	mov	r1,	r4	
    80e4:	24 53       	incd	r4		
    80e6:	21 83       	decd	r1		
    int i;
    for(i = 0; i < NUM_TIMERS; i++)
    80e8:	84 43 fc ff 	mov	#0,	-4(r4)	;r3 As==00, 0xfffc(r4)
    80ec:	19 3c       	jmp	$+52     	;abs 0x8120
    {
        if(timer[i] != UINT_MAX) {
    80ee:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    80f2:	0f 5f       	rla	r15		
    80f4:	3f 50 00 02 	add	#512,	r15	;#0x0200
    80f8:	2f 4f       	mov	@r15,	r15	
    80fa:	3f 93       	cmp	#-1,	r15	;r3 As==11
    80fc:	0f 24       	jz	$+32     	;abs 0x811c
            timer[i]++;
    80fe:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8102:	0f 5f       	rla	r15		
    8104:	3f 50 00 02 	add	#512,	r15	;#0x0200
    8108:	2f 4f       	mov	@r15,	r15	
    810a:	0e 4f       	mov	r15,	r14	
    810c:	1e 53       	inc	r14		
    810e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8112:	0f 5f       	rla	r15		
    8114:	3f 50 00 02 	add	#512,	r15	;#0x0200
    8118:	8f 4e 00 00 	mov	r14,	0(r15)	;0x0000(r15)

/* timer interrupt handler: increases timer's counter */
/* approximately every 10ms                           */ 
void timer_tick_cb() {
    int i;
    for(i = 0; i < NUM_TIMERS; i++)
    811c:	94 53 fc ff 	inc	-4(r4)		;0xfffc(r4)
    8120:	b4 90 03 00 	cmp	#3,	-4(r4)	;#0x0003, 0xfffc(r4)
    8124:	fc ff 
    8126:	e3 3b       	jl	$-56     	;abs 0x80ee
    {
        if(timer[i] != UINT_MAX) {
            timer[i]++;
        }
    }
}
    8128:	21 53       	incd	r1		
    812a:	34 41       	pop	r4		
    812c:	30 41       	ret			

0000812e <timer_reached>:

int timer_reached(uint16_t timer, uint16_t count) {
    812e:	04 12       	push	r4		
    8130:	04 41       	mov	r1,	r4	
    8132:	24 53       	incd	r4		
    8134:	21 82       	sub	#4,	r1	;r2 As==10
    8136:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    813a:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    return (timer >= count);
    813e:	1f 43       	mov	#1,	r15	;r3 As==01
    8140:	94 94 fc ff 	cmp	-4(r4),	-6(r4)	;0xfffc(r4), 0xfffa(r4)
    8144:	fa ff 
    8146:	01 2c       	jc	$+4      	;abs 0x814a
    8148:	0f 43       	clr	r15		
}
    814a:	21 52       	add	#4,	r1	;r2 As==10
    814c:	34 41       	pop	r4		
    814e:	30 41       	ret			

00008150 <thread_led_green>:
 */

static int led_green_flag;

static PT_THREAD(thread_led_green(struct pt *pt))
{
    8150:	04 12       	push	r4		
    8152:	04 41       	mov	r1,	r4	
    8154:	24 53       	incd	r4		
    8156:	21 82       	sub	#4,	r1	;r2 As==10
    8158:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    PT_BEGIN(pt);
    815c:	d4 43 fa ff 	mov.b	#1,	-6(r4)	;r3 As==01, 0xfffa(r4)
    8160:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8164:	2f 4f       	mov	@r15,	r15	
    8166:	3f 90 59 00 	cmp	#89,	r15	;#0x0059
    816a:	0c 24       	jz	$+26     	;abs 0x8184
    816c:	3f 90 5c 00 	cmp	#92,	r15	;#0x005c
    8170:	18 24       	jz	$+50     	;abs 0x81a2
    8172:	0f 93       	tst	r15		
    8174:	25 20       	jnz	$+76     	;abs 0x81c0

    led_green_flag=0;
    8176:	82 43 06 02 	mov	#0,	&0x0206	;r3 As==00
    
    while(1)
      {
        PT_WAIT_UNTIL(pt, led_green_flag);
    817a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    817e:	bf 40 59 00 	mov	#89,	0(r15)	;#0x0059, 0x0000(r15)
    8182:	00 00 
    8184:	1f 42 06 02 	mov	&0x0206,r15	
    8188:	0f 93       	tst	r15		
    818a:	02 20       	jnz	$+6      	;abs 0x8190
    818c:	4f 43       	clr.b	r15		
    818e:	20 3c       	jmp	$+66     	;abs 0x81d0
        led_green_on();
    8190:	b0 12 46 95 	call	#0x9546	
        TIMER_LED_GREEN_ON = 0;
    8194:	82 43 00 02 	mov	#0,	&0x0200	;r3 As==00
        PT_WAIT_UNTIL(pt, timer_reached(TIMER_LED_GREEN_ON, DELAY_LED_GREEN));
    8198:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    819c:	bf 40 5c 00 	mov	#92,	0(r15)	;#0x005c, 0x0000(r15)
    81a0:	00 00 
    81a2:	1f 42 00 02 	mov	&0x0200,r15	
    81a6:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    81aa:	b0 12 2e 81 	call	#0x812e	
    81ae:	0f 93       	tst	r15		
    81b0:	02 20       	jnz	$+6      	;abs 0x81b6
    81b2:	4f 43       	clr.b	r15		
    81b4:	0d 3c       	jmp	$+28     	;abs 0x81d0
        led_green_off();
    81b6:	b0 12 30 95 	call	#0x9530	
	    led_green_flag=0;	
    81ba:	82 43 06 02 	mov	#0,	&0x0206	;r3 As==00
    }
    81be:	dd 3f       	jmp	$-68     	;abs 0x817a

    PT_END(pt);
    81c0:	c4 43 fa ff 	mov.b	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    81c4:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    81c8:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    81cc:	7f 40 03 00 	mov.b	#3,	r15	;#0x0003
}
    81d0:	21 52       	add	#4,	r1	;r2 As==10
    81d2:	34 41       	pop	r4		
    81d4:	30 41       	ret			

000081d6 <thread_uart>:
 * UART
 */


static PT_THREAD(thread_uart(struct pt *pt))
{
    81d6:	0b 12       	push	r11		
    81d8:	04 12       	push	r4		
    81da:	04 41       	mov	r1,	r4	
    81dc:	24 52       	add	#4,	r4	;r2 As==10
    81de:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    81e2:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    PT_BEGIN(pt);
    81e6:	d4 43 f6 ff 	mov.b	#1,	-10(r4)	;r3 As==01, 0xfff6(r4)
    81ea:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    81ee:	2f 4f       	mov	@r15,	r15	
    81f0:	0f 93       	tst	r15		
    81f2:	04 24       	jz	$+10     	;abs 0x81fc
    81f4:	3f 90 72 00 	cmp	#114,	r15	;#0x0072
    81f8:	08 24       	jz	$+18     	;abs 0x820a
    81fa:	2d 3c       	jmp	$+92     	;abs 0x8256

    while(1)
    {

	TIMER_UART=0;
    81fc:	82 43 02 02 	mov	#0,	&0x0202	;r3 As==00
	PT_WAIT_UNTIL(pt, timer_reached(TIMER_UART, DELAY_UART));
    8200:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    8204:	bf 40 72 00 	mov	#114,	0(r15)	;#0x0072, 0x0000(r15)
    8208:	00 00 
    820a:	1f 42 02 02 	mov	&0x0202,r15	
    820e:	3e 40 64 00 	mov	#100,	r14	;#0x0064
    8212:	b0 12 2e 81 	call	#0x812e	
    8216:	0f 93       	tst	r15		
    8218:	02 20       	jnz	$+6      	;abs 0x821e
    821a:	4f 43       	clr.b	r15		
    821c:	24 3c       	jmp	$+74     	;abs 0x8266
	led_green_flag=1;
    821e:	92 43 06 02 	mov	#1,	&0x0206	;r3 As==01
	int temperature = adc10_sample_temp();
    8222:	b0 12 00 84 	call	#0x8400	
    8226:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    printf("{\"id\" : \"0\", \"temperature\" : \"%d,%d\"}\n",temperature/10,temperature%10);
    822a:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    822e:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    8232:	b0 12 70 9b 	call	#0x9b70	
    8236:	0b 4f       	mov	r15,	r11	
    8238:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    823c:	3e 40 0a 00 	mov	#10,	r14	;#0x000a
    8240:	b0 12 3e 9b 	call	#0x9b3e	
    8244:	0b 12       	push	r11		
    8246:	0f 12       	push	r15		
    8248:	30 12 20 a5 	push	#-23264	;#0xa520
    824c:	b0 12 9a 9b 	call	#0x9b9a	
    8250:	31 50 06 00 	add	#6,	r1	;#0x0006
    }
    8254:	d3 3f       	jmp	$-88     	;abs 0x81fc
    
    PT_END(pt);
    8256:	c4 43 f6 ff 	mov.b	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    825a:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    825e:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    8262:	7f 40 03 00 	mov.b	#3,	r15	;#0x0003
}
    8266:	31 50 06 00 	add	#6,	r1	;#0x0006
    826a:	34 41       	pop	r4		
    826c:	3b 41       	pop	r11		
    826e:	30 41       	ret			

00008270 <radio_cb>:
static char radio_tx_buffer[PKTLEN];
static char radio_rx_buffer[PKTLEN];
static int radio_rx_flag;

void radio_cb(uint8_t *buffer, int size, int8_t rssi)
{
    8270:	04 12       	push	r4		
    8272:	04 41       	mov	r1,	r4	
    8274:	24 53       	incd	r4		
    8276:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    827a:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    827e:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    8282:	c4 4d fc ff 	mov.b	r13,	-4(r4)	;0xfffc(r4)
        if (size > 0)
    8286:	94 93 fa ff 	cmp	#1,	-6(r4)	;r3 As==01, 0xfffa(r4)
    828a:	23 38       	jl	$+72     	;abs 0x82d2
        {
            memcpy(radio_rx_buffer, buffer, PKTLEN);
    828c:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    8290:	3e 40 10 02 	mov	#528,	r14	;#0x0210
    8294:	ee 4f 00 00 	mov.b	@r15,	0(r14)	;0x0000(r14)
    8298:	1e 53       	inc	r14		
    829a:	1f 53       	inc	r15		
    829c:	ee 4f 00 00 	mov.b	@r15,	0(r14)	;0x0000(r14)
    82a0:	1e 53       	inc	r14		
    82a2:	1f 53       	inc	r15		
    82a4:	ee 4f 00 00 	mov.b	@r15,	0(r14)	;0x0000(r14)
    82a8:	1e 53       	inc	r14		
    82aa:	1f 53       	inc	r15		
    82ac:	ee 4f 00 00 	mov.b	@r15,	0(r14)	;0x0000(r14)
    82b0:	1e 53       	inc	r14		
    82b2:	1f 53       	inc	r15		
    82b4:	ee 4f 00 00 	mov.b	@r15,	0(r14)	;0x0000(r14)
    82b8:	1e 53       	inc	r14		
    82ba:	1f 53       	inc	r15		
    82bc:	ee 4f 00 00 	mov.b	@r15,	0(r14)	;0x0000(r14)
    82c0:	1e 53       	inc	r14		
    82c2:	1f 53       	inc	r15		
    82c4:	ee 4f 00 00 	mov.b	@r15,	0(r14)	;0x0000(r14)
    82c8:	1e 53       	inc	r14		
    82ca:	1f 53       	inc	r15		
            radio_rx_flag = 1;
    82cc:	92 43 18 02 	mov	#1,	&0x0218	;r3 As==01
    82d0:	07 3c       	jmp	$+16     	;abs 0x82e0
        }
        else
        {
            DBG_PRINTF("msg packet error size=%d\r\n",size);
    82d2:	14 12 fa ff 	push	-6(r4)		;0xfffa(r4)
    82d6:	30 12 47 a5 	push	#-23225	;#0xa547
    82da:	b0 12 9a 9b 	call	#0x9b9a	
    82de:	21 52       	add	#4,	r1	;r2 As==10
        }

    cc2500_rx_enter();
    82e0:	b0 12 00 8e 	call	#0x8e00	
}
    82e4:	31 50 06 00 	add	#6,	r1	;#0x0006
    82e8:	34 41       	pop	r4		
    82ea:	30 41       	ret			

000082ec <thread_rx>:


static PT_THREAD(thread_rx(struct pt *pt))
{
    82ec:	04 12       	push	r4		
    82ee:	04 41       	mov	r1,	r4	
    82f0:	24 53       	incd	r4		
    82f2:	21 82       	sub	#4,	r1	;r2 As==10
    82f4:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    PT_BEGIN(pt);
    82f8:	d4 43 fa ff 	mov.b	#1,	-6(r4)	;r3 As==01, 0xfffa(r4)
    82fc:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8300:	2f 4f       	mov	@r15,	r15	
    8302:	0f 93       	tst	r15		
    8304:	04 24       	jz	$+10     	;abs 0x830e
    8306:	3f 90 97 00 	cmp	#151,	r15	;#0x0097
    830a:	06 24       	jz	$+14     	;abs 0x8318
    830c:	13 3c       	jmp	$+40     	;abs 0x8334

    while(1)
    {
        PT_WAIT_UNTIL(pt, radio_rx_flag == 1);
    830e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8312:	bf 40 97 00 	mov	#151,	0(r15)	;#0x0097, 0x0000(r15)
    8316:	00 00 
    8318:	1f 42 18 02 	mov	&0x0218,r15	
    831c:	1f 93       	cmp	#1,	r15	;r3 As==01
    831e:	02 24       	jz	$+6      	;abs 0x8324
    8320:	4f 43       	clr.b	r15		
    8322:	10 3c       	jmp	$+34     	;abs 0x8344
        ezdisplay(radio_rx_buffer);
    8324:	3e 40 4a 83 	mov	#-31926,r14	;#0x834a
    8328:	3f 40 10 02 	mov	#528,	r15	;#0x0210
    832c:	8e 12       	call	r14		
        radio_rx_flag = 0;
    832e:	82 43 18 02 	mov	#0,	&0x0218	;r3 As==00
    }
    8332:	ed 3f       	jmp	$-36     	;abs 0x830e

    PT_END(pt);
    8334:	c4 43 fa ff 	mov.b	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    8338:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    833c:	8f 43 00 00 	mov	#0,	0(r15)	;r3 As==00, 0x0000(r15)
    8340:	7f 40 03 00 	mov.b	#3,	r15	;#0x0003
}
    8344:	21 52       	add	#4,	r1	;r2 As==10
    8346:	34 41       	pop	r4		
    8348:	30 41       	ret			

0000834a <ezdisplay>:

void ezdisplay(char message[])
{
    834a:	04 12       	push	r4		
    834c:	04 41       	mov	r1,	r4	
    834e:	24 53       	incd	r4		
    8350:	31 82       	sub	#8,	r1	;r2 As==11
    8352:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    char mspid=message[0];
    8356:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    835a:	e4 4f f6 ff 	mov.b	@r15,	-10(r4)	;0xfff6(r4)
    int msptemperature=message[1];
    835e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8362:	1f 53       	inc	r15		
    8364:	6f 4f       	mov.b	@r15,	r15	
    8366:	c4 4f f8 ff 	mov.b	r15,	-8(r4)	;0xfff8(r4)
    836a:	94 11 f8 ff 	sxt	-8(r4)		;0xfff8(r4)
    int msptemperaturefill=message[2];
    836e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8372:	2f 53       	incd	r15		
    8374:	6f 4f       	mov.b	@r15,	r15	
    8376:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    837a:	94 11 fa ff 	sxt	-6(r4)		;0xfffa(r4)
   // printf("{'id' : %c, 'temperature' : %d,%d}\n", mspid, msptemperature,msptemperaturefill);
    printf("fullmessage : %s\n", message);
    837e:	14 12 fc ff 	push	-4(r4)		;0xfffc(r4)
    8382:	30 12 62 a5 	push	#-23198	;#0xa562
    8386:	b0 12 9a 9b 	call	#0x9b9a	
    838a:	21 52       	add	#4,	r1	;r2 As==10
}
    838c:	31 52       	add	#8,	r1	;r2 As==11
    838e:	34 41       	pop	r4		
    8390:	30 41       	ret			

00008392 <adc10_start>:
    8392:	04 12       	push	r4		
    8394:	04 41       	mov	r1,	r4	
    8396:	24 53       	incd	r4		
    8398:	b2 40 86 10 	mov	#4230,	&0x0220	;#0x1086
    839c:	20 02 
    839e:	b2 40 dc 0a 	mov	#2780,	&0x0222	;#0x0adc
    83a2:	22 02 
    83a4:	34 41       	pop	r4		
    83a6:	30 41       	ret			

000083a8 <adc10_calibrate>:
    83a8:	04 12       	push	r4		
    83aa:	04 41       	mov	r1,	r4	
    83ac:	24 53       	incd	r4		
    83ae:	21 82       	sub	#4,	r1	;r2 As==10
    83b0:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    83b4:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    83b8:	84 93 fa ff 	tst	-6(r4)		;0xfffa(r4)
    83bc:	04 24       	jz	$+10     	;abs 0x83c6
    83be:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    83c2:	82 4f 20 02 	mov	r15,	&0x0220	
    83c6:	84 93 fc ff 	tst	-4(r4)		;0xfffc(r4)
    83ca:	04 24       	jz	$+10     	;abs 0x83d4
    83cc:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    83d0:	82 4f 22 02 	mov	r15,	&0x0222	
    83d4:	21 52       	add	#4,	r1	;r2 As==10
    83d6:	34 41       	pop	r4		
    83d8:	30 41       	ret			

000083da <adc10_stop>:
    83da:	04 12       	push	r4		
    83dc:	04 41       	mov	r1,	r4	
    83de:	24 53       	incd	r4		
    83e0:	1f 42 b0 01 	mov	&0x01b0,r15	
    83e4:	3f f0 cf ff 	and	#-49,	r15	;#0xffcf
    83e8:	82 4f b0 01 	mov	r15,	&0x01b0	
    83ec:	34 41       	pop	r4		
    83ee:	30 41       	ret			

000083f0 <adc10irq>:
    83f0:	04 12       	push	r4		
    83f2:	04 41       	mov	r1,	r4	
    83f4:	24 53       	incd	r4		
    83f6:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    83fa:	00 00 
    83fc:	34 41       	pop	r4		
    83fe:	00 13       	reti			

00008400 <adc10_sample_temp>:
    8400:	0b 12       	push	r11		
    8402:	0a 12       	push	r10		
    8404:	09 12       	push	r9		
    8406:	08 12       	push	r8		
    8408:	04 12       	push	r4		
    840a:	04 41       	mov	r1,	r4	
    840c:	34 50 0a 00 	add	#10,	r4	;#0x000a
    8410:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    8414:	b2 40 80 a0 	mov	#-24448,&0x01b2	;#0xa080
    8418:	b2 01 
    841a:	b2 40 38 3c 	mov	#15416,	&0x01b0	;#0x3c38
    841e:	b0 01 
    8420:	3e 40 3c 00 	mov	#60,	r14	;#0x003c
    8424:	0f 43       	clr	r15		
    8426:	b0 12 ec 93 	call	#0x93ec	
    842a:	1f 42 b0 01 	mov	&0x01b0,r15	
    842e:	3f d0 03 00 	bis	#3,	r15	;#0x0003
    8432:	82 4f b0 01 	mov	r15,	&0x01b0	
    8436:	32 d0 10 00 	bis	#16,	r2	;#0x0010
    843a:	1f 42 b4 01 	mov	&0x01b4,r15	
    843e:	08 4f       	mov	r15,	r8	
    8440:	09 43       	clr	r9		
    8442:	84 48 f2 ff 	mov	r8,	-14(r4)	;0xfff2(r4)
    8446:	84 49 f4 ff 	mov	r9,	-12(r4)	;0xfff4(r4)
    844a:	1f 42 b0 01 	mov	&0x01b0,r15	
    844e:	3f f0 fd ff 	and	#-3,	r15	;#0xfffd
    8452:	82 4f b0 01 	mov	r15,	&0x01b0	
    8456:	1f 42 b0 01 	mov	&0x01b0,r15	
    845a:	3f f0 cf ff 	and	#-49,	r15	;#0xffcf
    845e:	82 4f b0 01 	mov	r15,	&0x01b0	
    8462:	1f 42 20 02 	mov	&0x0220,r15	
    8466:	0a 4f       	mov	r15,	r10	
    8468:	0f 4a       	mov	r10,	r15	
    846a:	8f 10       	swpb	r15		
    846c:	8f 11       	sxt	r15		
    846e:	8f 10       	swpb	r15		
    8470:	8f 11       	sxt	r15		
    8472:	0b 4f       	mov	r15,	r11	
    8474:	1e 44 f2 ff 	mov	-14(r4),r14	;0xfff2(r4)
    8478:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    847c:	0c 4e       	mov	r14,	r12	
    847e:	0d 4f       	mov	r15,	r13	
    8480:	0e 4a       	mov	r10,	r14	
    8482:	0f 4b       	mov	r11,	r15	
    8484:	b0 12 12 9b 	call	#0x9b12	
    8488:	0f 93       	tst	r15		
    848a:	04 38       	jl	$+10     	;abs 0x8494
    848c:	1f 93       	cmp	#1,	r15	;r3 As==01
    848e:	05 34       	jge	$+12     	;abs 0x849a
    8490:	0e 93       	tst	r14		
    8492:	03 2c       	jc	$+8      	;abs 0x849a
    8494:	3e 50 ff 03 	add	#1023,	r14	;#0x03ff
    8498:	0f 63       	adc	r15		
    849a:	8e 10       	swpb	r14		
    849c:	8f 10       	swpb	r15		
    849e:	4e ef       	xor.b	r15,	r14	
    84a0:	0e ef       	xor	r15,	r14	
    84a2:	8f 11       	sxt	r15		
    84a4:	0f 11       	rra	r15		
    84a6:	0e 10       	rrc	r14		
    84a8:	0f 11       	rra	r15		
    84aa:	0e 10       	rrc	r14		
    84ac:	1f 42 22 02 	mov	&0x0222,r15	
    84b0:	0d 4e       	mov	r14,	r13	
    84b2:	0d 8f       	sub	r15,	r13	
    84b4:	0f 4d       	mov	r13,	r15	
    84b6:	84 4f f0 ff 	mov	r15,	-16(r4)	;0xfff0(r4)
    84ba:	1f 44 f0 ff 	mov	-16(r4),r15	;0xfff0(r4)
    84be:	31 50 06 00 	add	#6,	r1	;#0x0006
    84c2:	34 41       	pop	r4		
    84c4:	38 41       	pop	r8		
    84c6:	39 41       	pop	r9		
    84c8:	3a 41       	pop	r10		
    84ca:	3b 41       	pop	r11		
    84cc:	30 41       	ret			

000084ce <adc10_sample_avcc>:
    84ce:	0b 12       	push	r11		
    84d0:	0a 12       	push	r10		
    84d2:	04 12       	push	r4		
    84d4:	04 41       	mov	r1,	r4	
    84d6:	34 50 06 00 	add	#6,	r4	;#0x0006
    84da:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    84de:	b2 40 00 b0 	mov	#-20480,&0x01b2	;#0xb000
    84e2:	b2 01 
    84e4:	b2 40 78 30 	mov	#12408,	&0x01b0	;#0x3078
    84e8:	b0 01 
    84ea:	3e 40 3c 00 	mov	#60,	r14	;#0x003c
    84ee:	0f 43       	clr	r15		
    84f0:	b0 12 ec 93 	call	#0x93ec	
    84f4:	1f 42 b0 01 	mov	&0x01b0,r15	
    84f8:	3f d0 03 00 	bis	#3,	r15	;#0x0003
    84fc:	82 4f b0 01 	mov	r15,	&0x01b0	
    8500:	32 d0 10 00 	bis	#16,	r2	;#0x0010
    8504:	1f 42 b4 01 	mov	&0x01b4,r15	
    8508:	0a 4f       	mov	r15,	r10	
    850a:	0b 43       	clr	r11		
    850c:	84 4a f6 ff 	mov	r10,	-10(r4)	;0xfff6(r4)
    8510:	84 4b f8 ff 	mov	r11,	-8(r4)	;0xfff8(r4)
    8514:	1f 42 b0 01 	mov	&0x01b0,r15	
    8518:	3f f0 fd ff 	and	#-3,	r15	;#0xfffd
    851c:	82 4f b0 01 	mov	r15,	&0x01b0	
    8520:	1f 42 b0 01 	mov	&0x01b0,r15	
    8524:	3f f0 cf ff 	and	#-49,	r15	;#0xffcf
    8528:	82 4f b0 01 	mov	r15,	&0x01b0	
    852c:	1a 44 f6 ff 	mov	-10(r4),r10	;0xfff6(r4)
    8530:	1b 44 f8 ff 	mov	-8(r4),	r11	;0xfff8(r4)
    8534:	0c 4a       	mov	r10,	r12	
    8536:	0d 4b       	mov	r11,	r13	
    8538:	0e 4c       	mov	r12,	r14	
    853a:	0f 4d       	mov	r13,	r15	
    853c:	0e 5e       	rla	r14		
    853e:	0f 6f       	rlc	r15		
    8540:	0e 5e       	rla	r14		
    8542:	0f 6f       	rlc	r15		
    8544:	0c 4e       	mov	r14,	r12	
    8546:	0d 4f       	mov	r15,	r13	
    8548:	0c 5a       	add	r10,	r12	
    854a:	0d 6b       	addc	r11,	r13	
    854c:	0e 4c       	mov	r12,	r14	
    854e:	0f 4d       	mov	r13,	r15	
    8550:	0e 5e       	rla	r14		
    8552:	0f 6f       	rlc	r15		
    8554:	0e 5e       	rla	r14		
    8556:	0f 6f       	rlc	r15		
    8558:	0e 5c       	add	r12,	r14	
    855a:	0f 6d       	addc	r13,	r15	
    855c:	0f 93       	tst	r15		
    855e:	04 38       	jl	$+10     	;abs 0x8568
    8560:	1f 93       	cmp	#1,	r15	;r3 As==01
    8562:	05 34       	jge	$+12     	;abs 0x856e
    8564:	0e 93       	tst	r14		
    8566:	03 2c       	jc	$+8      	;abs 0x856e
    8568:	3e 50 ff 01 	add	#511,	r14	;#0x01ff
    856c:	0f 63       	adc	r15		
    856e:	8e 10       	swpb	r14		
    8570:	8f 10       	swpb	r15		
    8572:	4e ef       	xor.b	r15,	r14	
    8574:	0e ef       	xor	r15,	r14	
    8576:	8f 11       	sxt	r15		
    8578:	0f 11       	rra	r15		
    857a:	0e 10       	rrc	r14		
    857c:	84 4e f4 ff 	mov	r14,	-12(r4)	;0xfff4(r4)
    8580:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    8584:	31 50 06 00 	add	#6,	r1	;#0x0006
    8588:	34 41       	pop	r4		
    858a:	3a 41       	pop	r10		
    858c:	3b 41       	pop	r11		
    858e:	30 41       	ret			

00008590 <CC2500_HW_GDO0_IRQ_ON_ASSERT>:
    8590:	04 12       	push	r4		
    8592:	04 41       	mov	r1,	r4	
    8594:	24 53       	incd	r4		
    8596:	5f 42 2c 00 	mov.b	&0x002c,r15	
    859a:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    859e:	c2 4f 2c 00 	mov.b	r15,	&0x002c	
    85a2:	34 41       	pop	r4		
    85a4:	30 41       	ret			

000085a6 <CC2500_HW_GDO2_IRQ_ON_ASSERT>:
    85a6:	04 12       	push	r4		
    85a8:	04 41       	mov	r1,	r4	
    85aa:	24 53       	incd	r4		
    85ac:	5f 42 2c 00 	mov.b	&0x002c,r15	
    85b0:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    85b4:	c2 4f 2c 00 	mov.b	r15,	&0x002c	
    85b8:	34 41       	pop	r4		
    85ba:	30 41       	ret			

000085bc <CC2500_HW_GDO0_DINT>:
    85bc:	04 12       	push	r4		
    85be:	04 41       	mov	r1,	r4	
    85c0:	24 53       	incd	r4		
    85c2:	5f 42 2d 00 	mov.b	&0x002d,r15	
    85c6:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    85ca:	c2 4f 2d 00 	mov.b	r15,	&0x002d	
    85ce:	34 41       	pop	r4		
    85d0:	30 41       	ret			

000085d2 <CC2500_HW_GDO2_DINT>:
    85d2:	04 12       	push	r4		
    85d4:	04 41       	mov	r1,	r4	
    85d6:	24 53       	incd	r4		
    85d8:	5f 42 2d 00 	mov.b	&0x002d,r15	
    85dc:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    85e0:	c2 4f 2d 00 	mov.b	r15,	&0x002d	
    85e4:	34 41       	pop	r4		
    85e6:	30 41       	ret			

000085e8 <CC2500_HW_GDO0_EINT>:
    85e8:	04 12       	push	r4		
    85ea:	04 41       	mov	r1,	r4	
    85ec:	24 53       	incd	r4		
    85ee:	5f 42 2d 00 	mov.b	&0x002d,r15	
    85f2:	7f d0 40 00 	bis.b	#64,	r15	;#0x0040
    85f6:	c2 4f 2d 00 	mov.b	r15,	&0x002d	
    85fa:	34 41       	pop	r4		
    85fc:	30 41       	ret			

000085fe <CC2500_HW_GDO0_CLEAR_FLAG>:
    85fe:	04 12       	push	r4		
    8600:	04 41       	mov	r1,	r4	
    8602:	24 53       	incd	r4		
    8604:	5f 42 2b 00 	mov.b	&0x002b,r15	
    8608:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    860c:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    8610:	34 41       	pop	r4		
    8612:	30 41       	ret			

00008614 <CC2500_HW_GDO2_CLEAR_FLAG>:
    8614:	04 12       	push	r4		
    8616:	04 41       	mov	r1,	r4	
    8618:	24 53       	incd	r4		
    861a:	5f 42 2b 00 	mov.b	&0x002b,r15	
    861e:	7f f0 7f 00 	and.b	#127,	r15	;#0x007f
    8622:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    8626:	34 41       	pop	r4		
    8628:	30 41       	ret			

0000862a <CONFIG_GDO0_PIN_AS_INPUT>:
    862a:	04 12       	push	r4		
    862c:	04 41       	mov	r1,	r4	
    862e:	24 53       	incd	r4		
    8630:	5f 42 2e 00 	mov.b	&0x002e,r15	
    8634:	7f f0 bf ff 	and.b	#-65,	r15	;#0xffbf
    8638:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    863c:	34 41       	pop	r4		
    863e:	30 41       	ret			

00008640 <CC2500_HW_INIT>:
    8640:	04 12       	push	r4		
    8642:	04 41       	mov	r1,	r4	
    8644:	24 53       	incd	r4		
    8646:	5f 42 2e 00 	mov.b	&0x002e,r15	
    864a:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    864e:	c2 4f 2e 00 	mov.b	r15,	&0x002e	
    8652:	5f 42 2a 00 	mov.b	&0x002a,r15	
    8656:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    865a:	c2 4f 2a 00 	mov.b	r15,	&0x002a	
    865e:	5f 42 2d 00 	mov.b	&0x002d,r15	
    8662:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    8666:	c2 4f 2d 00 	mov.b	r15,	&0x002d	
    866a:	5f 42 2c 00 	mov.b	&0x002c,r15	
    866e:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    8672:	c2 4f 2c 00 	mov.b	r15,	&0x002c	
    8676:	5f 42 2b 00 	mov.b	&0x002b,r15	
    867a:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    867e:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    8682:	5f 42 2f 00 	mov.b	&0x002f,r15	
    8686:	7f d0 c0 ff 	bis.b	#-64,	r15	;#0xffc0
    868a:	c2 4f 2f 00 	mov.b	r15,	&0x002f	
    868e:	34 41       	pop	r4		
    8690:	30 41       	ret			

00008692 <CC2500_SPI_TX>:
    8692:	04 12       	push	r4		
    8694:	04 41       	mov	r1,	r4	
    8696:	24 53       	incd	r4		
    8698:	21 83       	decd	r1		
    869a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    869e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    86a2:	b0 12 7a 96 	call	#0x967a	
    86a6:	4f 4f       	mov.b	r15,	r15	
    86a8:	c2 4f 3e 02 	mov.b	r15,	&0x023e	
    86ac:	21 53       	incd	r1		
    86ae:	34 41       	pop	r4		
    86b0:	30 41       	ret			

000086b2 <CC2500_SPI_STROBE>:
    86b2:	04 12       	push	r4		
    86b4:	04 41       	mov	r1,	r4	
    86b6:	24 53       	incd	r4		
    86b8:	21 83       	decd	r1		
    86ba:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    86be:	b0 12 5e 97 	call	#0x975e	
    86c2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    86c6:	b0 12 92 86 	call	#0x8692	
    86ca:	b0 12 74 97 	call	#0x9774	
    86ce:	21 53       	incd	r1		
    86d0:	34 41       	pop	r4		
    86d2:	30 41       	ret			

000086d4 <CC2500_SPI_WREG>:
    86d4:	04 12       	push	r4		
    86d6:	04 41       	mov	r1,	r4	
    86d8:	24 53       	incd	r4		
    86da:	21 82       	sub	#4,	r1	;r2 As==10
    86dc:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    86e0:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    86e4:	b0 12 5e 97 	call	#0x975e	
    86e8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    86ec:	b0 12 92 86 	call	#0x8692	
    86f0:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    86f4:	b0 12 92 86 	call	#0x8692	
    86f8:	b0 12 74 97 	call	#0x9774	
    86fc:	21 52       	add	#4,	r1	;r2 As==10
    86fe:	34 41       	pop	r4		
    8700:	30 41       	ret			

00008702 <CC2500_SPI_RREG>:
    8702:	04 12       	push	r4		
    8704:	04 41       	mov	r1,	r4	
    8706:	24 53       	incd	r4		
    8708:	21 82       	sub	#4,	r1	;r2 As==10
    870a:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    870e:	b0 12 5e 97 	call	#0x975e	
    8712:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8716:	3f d0 80 00 	bis	#128,	r15	;#0x0080
    871a:	b0 12 92 86 	call	#0x8692	
    871e:	3f 40 55 00 	mov	#85,	r15	;#0x0055
    8722:	b0 12 7a 96 	call	#0x967a	
    8726:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    872a:	b0 12 74 97 	call	#0x9774	
    872e:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    8732:	21 52       	add	#4,	r1	;r2 As==10
    8734:	34 41       	pop	r4		
    8736:	30 41       	ret			

00008738 <CC2500_SPI_ROREG>:
    8738:	04 12       	push	r4		
    873a:	04 41       	mov	r1,	r4	
    873c:	24 53       	incd	r4		
    873e:	21 82       	sub	#4,	r1	;r2 As==10
    8740:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8744:	b0 12 5e 97 	call	#0x975e	
    8748:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    874c:	3f d0 c0 00 	bis	#192,	r15	;#0x00c0
    8750:	b0 12 92 86 	call	#0x8692	
    8754:	3f 40 55 00 	mov	#85,	r15	;#0x0055
    8758:	b0 12 7a 96 	call	#0x967a	
    875c:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    8760:	b0 12 74 97 	call	#0x9774	
    8764:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    8768:	21 52       	add	#4,	r1	;r2 As==10
    876a:	34 41       	pop	r4		
    876c:	30 41       	ret			

0000876e <CC2500_SPI_TX_BYTE>:
    876e:	04 12       	push	r4		
    8770:	04 41       	mov	r1,	r4	
    8772:	24 53       	incd	r4		
    8774:	21 82       	sub	#4,	r1	;r2 As==10
    8776:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    877a:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    877e:	b0 12 5e 97 	call	#0x975e	
    8782:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    8786:	b0 12 92 86 	call	#0x8692	
    878a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    878e:	b0 12 92 86 	call	#0x8692	
    8792:	b0 12 74 97 	call	#0x9774	
    8796:	21 52       	add	#4,	r1	;r2 As==10
    8798:	34 41       	pop	r4		
    879a:	30 41       	ret			

0000879c <CC2500_SPI_RX_BYTE>:
    879c:	04 12       	push	r4		
    879e:	04 41       	mov	r1,	r4	
    87a0:	24 53       	incd	r4		
    87a2:	21 82       	sub	#4,	r1	;r2 As==10
    87a4:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    87a8:	b0 12 5e 97 	call	#0x975e	
    87ac:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    87b0:	3f d0 80 00 	bis	#128,	r15	;#0x0080
    87b4:	b0 12 92 86 	call	#0x8692	
    87b8:	3f 40 55 00 	mov	#85,	r15	;#0x0055
    87bc:	b0 12 7a 96 	call	#0x967a	
    87c0:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    87c4:	b0 12 74 97 	call	#0x9774	
    87c8:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    87cc:	21 52       	add	#4,	r1	;r2 As==10
    87ce:	34 41       	pop	r4		
    87d0:	30 41       	ret			

000087d2 <CC2500_SPI_TX_BURST>:
    87d2:	04 12       	push	r4		
    87d4:	04 41       	mov	r1,	r4	
    87d6:	24 53       	incd	r4		
    87d8:	31 82       	sub	#8,	r1	;r2 As==11
    87da:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    87de:	84 4e fa ff 	mov	r14,	-6(r4)	;0xfffa(r4)
    87e2:	84 4d fc ff 	mov	r13,	-4(r4)	;0xfffc(r4)
    87e6:	c4 43 f6 ff 	mov.b	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    87ea:	b0 12 5e 97 	call	#0x975e	
    87ee:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    87f2:	3f d0 40 00 	bis	#64,	r15	;#0x0040
    87f6:	b0 12 92 86 	call	#0x8692	
    87fa:	c4 43 f6 ff 	mov.b	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    87fe:	0a 3c       	jmp	$+22     	;abs 0x8814
    8800:	5f 44 f6 ff 	mov.b	-10(r4),r15	;0xfff6(r4)
    8804:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    8808:	6f 4f       	mov.b	@r15,	r15	
    880a:	8f 11       	sxt	r15		
    880c:	b0 12 92 86 	call	#0x8692	
    8810:	d4 53 f6 ff 	inc.b	-10(r4)	;0xfff6(r4)
    8814:	5f 44 f6 ff 	mov.b	-10(r4),r15	;0xfff6(r4)
    8818:	1f 94 fc ff 	cmp	-4(r4),	r15	;0xfffc(r4)
    881c:	f1 3b       	jl	$-28     	;abs 0x8800
    881e:	b0 12 74 97 	call	#0x9774	
    8822:	31 52       	add	#8,	r1	;r2 As==11
    8824:	34 41       	pop	r4		
    8826:	30 41       	ret			

00008828 <CC2500_SPI_RX_BURST>:
    8828:	0b 12       	push	r11		
    882a:	04 12       	push	r4		
    882c:	04 41       	mov	r1,	r4	
    882e:	24 52       	add	#4,	r4	;r2 As==10
    8830:	31 82       	sub	#8,	r1	;r2 As==11
    8832:	84 4f f6 ff 	mov	r15,	-10(r4)	;0xfff6(r4)
    8836:	84 4e f8 ff 	mov	r14,	-8(r4)	;0xfff8(r4)
    883a:	84 4d fa ff 	mov	r13,	-6(r4)	;0xfffa(r4)
    883e:	c4 43 f4 ff 	mov.b	#0,	-12(r4)	;r3 As==00, 0xfff4(r4)
    8842:	b0 12 5e 97 	call	#0x975e	
    8846:	1f 44 f6 ff 	mov	-10(r4),r15	;0xfff6(r4)
    884a:	3f d0 c0 00 	bis	#192,	r15	;#0x00c0
    884e:	b0 12 92 86 	call	#0x8692	
    8852:	c4 43 f4 ff 	mov.b	#0,	-12(r4)	;r3 As==00, 0xfff4(r4)
    8856:	0e 3c       	jmp	$+30     	;abs 0x8874
    8858:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    885c:	1b 44 f8 ff 	mov	-8(r4),	r11	;0xfff8(r4)
    8860:	0b 5f       	add	r15,	r11	
    8862:	3f 40 55 00 	mov	#85,	r15	;#0x0055
    8866:	b0 12 7a 96 	call	#0x967a	
    886a:	4f 4f       	mov.b	r15,	r15	
    886c:	cb 4f 00 00 	mov.b	r15,	0(r11)	;0x0000(r11)
    8870:	d4 53 f4 ff 	inc.b	-12(r4)	;0xfff4(r4)
    8874:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    8878:	1f 94 fa ff 	cmp	-6(r4),	r15	;0xfffa(r4)
    887c:	ed 3b       	jl	$-36     	;abs 0x8858
    887e:	b0 12 74 97 	call	#0x9774	
    8882:	31 52       	add	#8,	r1	;r2 As==11
    8884:	34 41       	pop	r4		
    8886:	3b 41       	pop	r11		
    8888:	30 41       	ret			

0000888a <CC2500_SPI_RX_FIFO_BYTE>:
    888a:	04 12       	push	r4		
    888c:	04 41       	mov	r1,	r4	
    888e:	24 53       	incd	r4		
    8890:	21 83       	decd	r1		
    8892:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    8896:	b0 12 9c 87 	call	#0x879c	
    889a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    889e:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    88a2:	21 53       	incd	r1		
    88a4:	34 41       	pop	r4		
    88a6:	30 41       	ret			

000088a8 <cc2500_wait_status>:
    88a8:	04 12       	push	r4		
    88aa:	04 41       	mov	r1,	r4	
    88ac:	24 53       	incd	r4		
    88ae:	21 82       	sub	#4,	r1	;r2 As==10
    88b0:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    88b4:	3f 40 3d 00 	mov	#61,	r15	;#0x003d
    88b8:	b0 12 b2 86 	call	#0x86b2	
    88bc:	5f 42 3e 02 	mov.b	&0x023e,r15	
    88c0:	4f 4f       	mov.b	r15,	r15	
    88c2:	4f 4f       	mov.b	r15,	r15	
    88c4:	12 c3       	clrc			
    88c6:	4f 10       	rrc.b	r15		
    88c8:	12 c3       	clrc			
    88ca:	4f 10       	rrc.b	r15		
    88cc:	12 c3       	clrc			
    88ce:	4f 10       	rrc.b	r15		
    88d0:	12 c3       	clrc			
    88d2:	4f 10       	rrc.b	r15		
    88d4:	4e 4f       	mov.b	r15,	r14	
    88d6:	7e f0 07 00 	and.b	#7,	r14	;#0x0007
    88da:	c4 4e fa ff 	mov.b	r14,	-6(r4)	;0xfffa(r4)
    88de:	d4 94 fa ff 	cmp.b	-6(r4),	-4(r4)	;0xfffa(r4), 0xfffc(r4)
    88e2:	fc ff 
    88e4:	e7 23       	jnz	$-48     	;abs 0x88b4
    88e6:	21 52       	add	#4,	r1	;r2 As==10
    88e8:	34 41       	pop	r4		
    88ea:	30 41       	ret			

000088ec <cc2500_gdo0_set_signal>:
    88ec:	04 12       	push	r4		
    88ee:	04 41       	mov	r1,	r4	
    88f0:	24 53       	incd	r4		
    88f2:	21 82       	sub	#4,	r1	;r2 As==10
    88f4:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    88f8:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    88fc:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    8900:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    8904:	d2 44 fa ff 	mov.b	-6(r4),	&0x023a	;0xfffa(r4)
    8908:	3a 02 
    890a:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    890e:	0e 4f       	mov	r15,	r14	
    8910:	2f 43       	mov	#2,	r15	;r3 As==10
    8912:	b0 12 d4 86 	call	#0x86d4	
    8916:	21 52       	add	#4,	r1	;r2 As==10
    8918:	34 41       	pop	r4		
    891a:	30 41       	ret			

0000891c <cc2500_gdo2_set_signal>:
    891c:	04 12       	push	r4		
    891e:	04 41       	mov	r1,	r4	
    8920:	24 53       	incd	r4		
    8922:	21 82       	sub	#4,	r1	;r2 As==10
    8924:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8928:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    892c:	7f f0 3f 00 	and.b	#63,	r15	;#0x003f
    8930:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    8934:	d2 44 fa ff 	mov.b	-6(r4),	&0x0236	;0xfffa(r4)
    8938:	36 02 
    893a:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    893e:	0e 4f       	mov	r15,	r14	
    8940:	0f 43       	clr	r15		
    8942:	b0 12 d4 86 	call	#0x86d4	
    8946:	21 52       	add	#4,	r1	;r2 As==10
    8948:	34 41       	pop	r4		
    894a:	30 41       	ret			

0000894c <cc2500_set_fifo_threshold>:
    894c:	04 12       	push	r4		
    894e:	04 41       	mov	r1,	r4	
    8950:	24 53       	incd	r4		
    8952:	21 82       	sub	#4,	r1	;r2 As==10
    8954:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8958:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    895c:	7f f0 0f 00 	and.b	#15,	r15	;#0x000f
    8960:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    8964:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    8968:	0e 4f       	mov	r15,	r14	
    896a:	3f 40 03 00 	mov	#3,	r15	;#0x0003
    896e:	b0 12 d4 86 	call	#0x86d4	
    8972:	21 52       	add	#4,	r1	;r2 As==10
    8974:	34 41       	pop	r4		
    8976:	30 41       	ret			

00008978 <cc2500_check_tx_underflow>:
    8978:	04 12       	push	r4		
    897a:	04 41       	mov	r1,	r4	
    897c:	24 53       	incd	r4		
    897e:	21 83       	decd	r1		
    8980:	3f 40 3d 00 	mov	#61,	r15	;#0x003d
    8984:	b0 12 b2 86 	call	#0x86b2	
    8988:	5f 42 3e 02 	mov.b	&0x023e,r15	
    898c:	4f 4f       	mov.b	r15,	r15	
    898e:	4f 4f       	mov.b	r15,	r15	
    8990:	12 c3       	clrc			
    8992:	4f 10       	rrc.b	r15		
    8994:	12 c3       	clrc			
    8996:	4f 10       	rrc.b	r15		
    8998:	12 c3       	clrc			
    899a:	4f 10       	rrc.b	r15		
    899c:	12 c3       	clrc			
    899e:	4f 10       	rrc.b	r15		
    89a0:	4f 4f       	mov.b	r15,	r15	
    89a2:	0e 4f       	mov	r15,	r14	
    89a4:	3e f0 07 00 	and	#7,	r14	;#0x0007
    89a8:	1f 43       	mov	#1,	r15	;r3 As==01
    89aa:	3e 90 07 00 	cmp	#7,	r14	;#0x0007
    89ae:	01 24       	jz	$+4      	;abs 0x89b2
    89b0:	0f 43       	clr	r15		
    89b2:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    89b6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    89ba:	21 53       	incd	r1		
    89bc:	34 41       	pop	r4		
    89be:	30 41       	ret			

000089c0 <cc2500_check_rx_overflow>:
    89c0:	04 12       	push	r4		
    89c2:	04 41       	mov	r1,	r4	
    89c4:	24 53       	incd	r4		
    89c6:	21 83       	decd	r1		
    89c8:	3f 40 3d 00 	mov	#61,	r15	;#0x003d
    89cc:	b0 12 b2 86 	call	#0x86b2	
    89d0:	5f 42 3e 02 	mov.b	&0x023e,r15	
    89d4:	4f 4f       	mov.b	r15,	r15	
    89d6:	4f 4f       	mov.b	r15,	r15	
    89d8:	12 c3       	clrc			
    89da:	4f 10       	rrc.b	r15		
    89dc:	12 c3       	clrc			
    89de:	4f 10       	rrc.b	r15		
    89e0:	12 c3       	clrc			
    89e2:	4f 10       	rrc.b	r15		
    89e4:	12 c3       	clrc			
    89e6:	4f 10       	rrc.b	r15		
    89e8:	4f 4f       	mov.b	r15,	r15	
    89ea:	0e 4f       	mov	r15,	r14	
    89ec:	3e f0 07 00 	and	#7,	r14	;#0x0007
    89f0:	5f 43       	mov.b	#1,	r15	;r3 As==01
    89f2:	3e 90 06 00 	cmp	#6,	r14	;#0x0006
    89f6:	01 24       	jz	$+4      	;abs 0x89fa
    89f8:	4f 43       	clr.b	r15		
    89fa:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    89fe:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8a02:	8f 11       	sxt	r15		
    8a04:	21 53       	incd	r1		
    8a06:	34 41       	pop	r4		
    8a08:	30 41       	ret			

00008a0a <cc2500_check_fifo_xflow_flush>:
    8a0a:	04 12       	push	r4		
    8a0c:	04 41       	mov	r1,	r4	
    8a0e:	24 53       	incd	r4		
    8a10:	b0 12 78 89 	call	#0x8978	
    8a14:	0f 93       	tst	r15		
    8a16:	04 24       	jz	$+10     	;abs 0x8a20
    8a18:	3f 40 3b 00 	mov	#59,	r15	;#0x003b
    8a1c:	b0 12 b2 86 	call	#0x86b2	
    8a20:	b0 12 c0 89 	call	#0x89c0	
    8a24:	0f 93       	tst	r15		
    8a26:	04 24       	jz	$+10     	;abs 0x8a30
    8a28:	3f 40 3a 00 	mov	#58,	r15	;#0x003a
    8a2c:	b0 12 b2 86 	call	#0x86b2	
    8a30:	34 41       	pop	r4		
    8a32:	30 41       	ret			

00008a34 <cc2500_configure>:
    8a34:	04 12       	push	r4		
    8a36:	04 41       	mov	r1,	r4	
    8a38:	24 53       	incd	r4		
    8a3a:	21 83       	decd	r1		
    8a3c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8a40:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8a44:	6f 4f       	mov.b	@r15,	r15	
    8a46:	4f 4f       	mov.b	r15,	r15	
    8a48:	0e 4f       	mov	r15,	r14	
    8a4a:	3f 40 0b 00 	mov	#11,	r15	;#0x000b
    8a4e:	b0 12 d4 86 	call	#0x86d4	
    8a52:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8a56:	5f 4f 01 00 	mov.b	1(r15),	r15	;0x0001(r15)
    8a5a:	4f 4f       	mov.b	r15,	r15	
    8a5c:	0e 4f       	mov	r15,	r14	
    8a5e:	3f 40 0c 00 	mov	#12,	r15	;#0x000c
    8a62:	b0 12 d4 86 	call	#0x86d4	
    8a66:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8a6a:	5f 4f 02 00 	mov.b	2(r15),	r15	;0x0002(r15)
    8a6e:	4f 4f       	mov.b	r15,	r15	
    8a70:	0e 4f       	mov	r15,	r14	
    8a72:	3f 40 0d 00 	mov	#13,	r15	;#0x000d
    8a76:	b0 12 d4 86 	call	#0x86d4	
    8a7a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8a7e:	5f 4f 03 00 	mov.b	3(r15),	r15	;0x0003(r15)
    8a82:	4f 4f       	mov.b	r15,	r15	
    8a84:	0e 4f       	mov	r15,	r14	
    8a86:	3f 40 0e 00 	mov	#14,	r15	;#0x000e
    8a8a:	b0 12 d4 86 	call	#0x86d4	
    8a8e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8a92:	5f 4f 04 00 	mov.b	4(r15),	r15	;0x0004(r15)
    8a96:	4f 4f       	mov.b	r15,	r15	
    8a98:	0e 4f       	mov	r15,	r14	
    8a9a:	3f 40 0f 00 	mov	#15,	r15	;#0x000f
    8a9e:	b0 12 d4 86 	call	#0x86d4	
    8aa2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8aa6:	5f 4f 05 00 	mov.b	5(r15),	r15	;0x0005(r15)
    8aaa:	4f 4f       	mov.b	r15,	r15	
    8aac:	0e 4f       	mov	r15,	r14	
    8aae:	3f 40 10 00 	mov	#16,	r15	;#0x0010
    8ab2:	b0 12 d4 86 	call	#0x86d4	
    8ab6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8aba:	5f 4f 06 00 	mov.b	6(r15),	r15	;0x0006(r15)
    8abe:	4f 4f       	mov.b	r15,	r15	
    8ac0:	0e 4f       	mov	r15,	r14	
    8ac2:	3f 40 11 00 	mov	#17,	r15	;#0x0011
    8ac6:	b0 12 d4 86 	call	#0x86d4	
    8aca:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8ace:	5f 4f 07 00 	mov.b	7(r15),	r15	;0x0007(r15)
    8ad2:	4f 4f       	mov.b	r15,	r15	
    8ad4:	0e 4f       	mov	r15,	r14	
    8ad6:	3f 40 12 00 	mov	#18,	r15	;#0x0012
    8ada:	b0 12 d4 86 	call	#0x86d4	
    8ade:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8ae2:	5f 4f 08 00 	mov.b	8(r15),	r15	;0x0008(r15)
    8ae6:	4f 4f       	mov.b	r15,	r15	
    8ae8:	0e 4f       	mov	r15,	r14	
    8aea:	3f 40 13 00 	mov	#19,	r15	;#0x0013
    8aee:	b0 12 d4 86 	call	#0x86d4	
    8af2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8af6:	5f 4f 09 00 	mov.b	9(r15),	r15	;0x0009(r15)
    8afa:	4f 4f       	mov.b	r15,	r15	
    8afc:	0e 4f       	mov	r15,	r14	
    8afe:	3f 40 14 00 	mov	#20,	r15	;#0x0014
    8b02:	b0 12 d4 86 	call	#0x86d4	
    8b06:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8b0a:	5f 4f 0a 00 	mov.b	10(r15),r15	;0x000a(r15)
    8b0e:	4f 4f       	mov.b	r15,	r15	
    8b10:	0e 4f       	mov	r15,	r14	
    8b12:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    8b16:	b0 12 d4 86 	call	#0x86d4	
    8b1a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8b1e:	5f 4f 0b 00 	mov.b	11(r15),r15	;0x000b(r15)
    8b22:	4f 4f       	mov.b	r15,	r15	
    8b24:	0e 4f       	mov	r15,	r14	
    8b26:	3f 40 15 00 	mov	#21,	r15	;#0x0015
    8b2a:	b0 12 d4 86 	call	#0x86d4	
    8b2e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8b32:	5f 4f 0c 00 	mov.b	12(r15),r15	;0x000c(r15)
    8b36:	4f 4f       	mov.b	r15,	r15	
    8b38:	0e 4f       	mov	r15,	r14	
    8b3a:	3f 40 21 00 	mov	#33,	r15	;#0x0021
    8b3e:	b0 12 d4 86 	call	#0x86d4	
    8b42:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8b46:	5f 4f 0d 00 	mov.b	13(r15),r15	;0x000d(r15)
    8b4a:	4f 4f       	mov.b	r15,	r15	
    8b4c:	0e 4f       	mov	r15,	r14	
    8b4e:	3f 40 22 00 	mov	#34,	r15	;#0x0022
    8b52:	b0 12 d4 86 	call	#0x86d4	
    8b56:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8b5a:	5f 4f 0e 00 	mov.b	14(r15),r15	;0x000e(r15)
    8b5e:	4f 4f       	mov.b	r15,	r15	
    8b60:	0e 4f       	mov	r15,	r14	
    8b62:	3f 40 18 00 	mov	#24,	r15	;#0x0018
    8b66:	b0 12 d4 86 	call	#0x86d4	
    8b6a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8b6e:	5f 4f 0f 00 	mov.b	15(r15),r15	;0x000f(r15)
    8b72:	4f 4f       	mov.b	r15,	r15	
    8b74:	0e 4f       	mov	r15,	r14	
    8b76:	3f 40 19 00 	mov	#25,	r15	;#0x0019
    8b7a:	b0 12 d4 86 	call	#0x86d4	
    8b7e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8b82:	5f 4f 10 00 	mov.b	16(r15),r15	;0x0010(r15)
    8b86:	4f 4f       	mov.b	r15,	r15	
    8b88:	0e 4f       	mov	r15,	r14	
    8b8a:	3f 40 1a 00 	mov	#26,	r15	;#0x001a
    8b8e:	b0 12 d4 86 	call	#0x86d4	
    8b92:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8b96:	5f 4f 11 00 	mov.b	17(r15),r15	;0x0011(r15)
    8b9a:	4f 4f       	mov.b	r15,	r15	
    8b9c:	0e 4f       	mov	r15,	r14	
    8b9e:	3f 40 1b 00 	mov	#27,	r15	;#0x001b
    8ba2:	b0 12 d4 86 	call	#0x86d4	
    8ba6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8baa:	5f 4f 12 00 	mov.b	18(r15),r15	;0x0012(r15)
    8bae:	4f 4f       	mov.b	r15,	r15	
    8bb0:	0e 4f       	mov	r15,	r14	
    8bb2:	3f 40 1c 00 	mov	#28,	r15	;#0x001c
    8bb6:	b0 12 d4 86 	call	#0x86d4	
    8bba:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8bbe:	5f 4f 13 00 	mov.b	19(r15),r15	;0x0013(r15)
    8bc2:	4f 4f       	mov.b	r15,	r15	
    8bc4:	0e 4f       	mov	r15,	r14	
    8bc6:	3f 40 1d 00 	mov	#29,	r15	;#0x001d
    8bca:	b0 12 d4 86 	call	#0x86d4	
    8bce:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8bd2:	5f 4f 14 00 	mov.b	20(r15),r15	;0x0014(r15)
    8bd6:	4f 4f       	mov.b	r15,	r15	
    8bd8:	0e 4f       	mov	r15,	r14	
    8bda:	3f 40 23 00 	mov	#35,	r15	;#0x0023
    8bde:	b0 12 d4 86 	call	#0x86d4	
    8be2:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8be6:	5f 4f 15 00 	mov.b	21(r15),r15	;0x0015(r15)
    8bea:	4f 4f       	mov.b	r15,	r15	
    8bec:	0e 4f       	mov	r15,	r14	
    8bee:	3f 40 24 00 	mov	#36,	r15	;#0x0024
    8bf2:	b0 12 d4 86 	call	#0x86d4	
    8bf6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8bfa:	5f 4f 16 00 	mov.b	22(r15),r15	;0x0016(r15)
    8bfe:	4f 4f       	mov.b	r15,	r15	
    8c00:	0e 4f       	mov	r15,	r14	
    8c02:	3f 40 25 00 	mov	#37,	r15	;#0x0025
    8c06:	b0 12 d4 86 	call	#0x86d4	
    8c0a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8c0e:	5f 4f 17 00 	mov.b	23(r15),r15	;0x0017(r15)
    8c12:	4f 4f       	mov.b	r15,	r15	
    8c14:	0e 4f       	mov	r15,	r14	
    8c16:	3f 40 26 00 	mov	#38,	r15	;#0x0026
    8c1a:	b0 12 d4 86 	call	#0x86d4	
    8c1e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8c22:	5f 4f 18 00 	mov.b	24(r15),r15	;0x0018(r15)
    8c26:	4f 4f       	mov.b	r15,	r15	
    8c28:	0e 4f       	mov	r15,	r14	
    8c2a:	3f 40 29 00 	mov	#41,	r15	;#0x0029
    8c2e:	b0 12 d4 86 	call	#0x86d4	
    8c32:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8c36:	5f 4f 19 00 	mov.b	25(r15),r15	;0x0019(r15)
    8c3a:	4f 4f       	mov.b	r15,	r15	
    8c3c:	0e 4f       	mov	r15,	r14	
    8c3e:	3f 40 2c 00 	mov	#44,	r15	;#0x002c
    8c42:	b0 12 d4 86 	call	#0x86d4	
    8c46:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8c4a:	5f 4f 1a 00 	mov.b	26(r15),r15	;0x001a(r15)
    8c4e:	4f 4f       	mov.b	r15,	r15	
    8c50:	0e 4f       	mov	r15,	r14	
    8c52:	3f 40 2d 00 	mov	#45,	r15	;#0x002d
    8c56:	b0 12 d4 86 	call	#0x86d4	
    8c5a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8c5e:	5f 4f 1b 00 	mov.b	27(r15),r15	;0x001b(r15)
    8c62:	4f 4f       	mov.b	r15,	r15	
    8c64:	0e 4f       	mov	r15,	r14	
    8c66:	3f 40 2e 00 	mov	#46,	r15	;#0x002e
    8c6a:	b0 12 d4 86 	call	#0x86d4	
    8c6e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8c72:	5f 4f 1c 00 	mov.b	28(r15),r15	;0x001c(r15)
    8c76:	4f 4f       	mov.b	r15,	r15	
    8c78:	0e 4f       	mov	r15,	r14	
    8c7a:	3f 40 03 00 	mov	#3,	r15	;#0x0003
    8c7e:	b0 12 d4 86 	call	#0x86d4	
    8c82:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8c86:	5f 4f 1d 00 	mov.b	29(r15),r15	;0x001d(r15)
    8c8a:	4f 4f       	mov.b	r15,	r15	
    8c8c:	0e 4f       	mov	r15,	r14	
    8c8e:	0f 43       	clr	r15		
    8c90:	b0 12 d4 86 	call	#0x86d4	
    8c94:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8c98:	5f 4f 1e 00 	mov.b	30(r15),r15	;0x001e(r15)
    8c9c:	4f 4f       	mov.b	r15,	r15	
    8c9e:	0e 4f       	mov	r15,	r14	
    8ca0:	2f 43       	mov	#2,	r15	;r3 As==10
    8ca2:	b0 12 d4 86 	call	#0x86d4	
    8ca6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8caa:	5f 4f 1f 00 	mov.b	31(r15),r15	;0x001f(r15)
    8cae:	4f 4f       	mov.b	r15,	r15	
    8cb0:	0e 4f       	mov	r15,	r14	
    8cb2:	3f 40 07 00 	mov	#7,	r15	;#0x0007
    8cb6:	b0 12 d4 86 	call	#0x86d4	
    8cba:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8cbe:	5f 4f 20 00 	mov.b	32(r15),r15	;0x0020(r15)
    8cc2:	4f 4f       	mov.b	r15,	r15	
    8cc4:	0e 4f       	mov	r15,	r14	
    8cc6:	3f 42       	mov	#8,	r15	;r2 As==11
    8cc8:	b0 12 d4 86 	call	#0x86d4	
    8ccc:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8cd0:	5f 4f 21 00 	mov.b	33(r15),r15	;0x0021(r15)
    8cd4:	4f 4f       	mov.b	r15,	r15	
    8cd6:	0e 4f       	mov	r15,	r14	
    8cd8:	3f 40 09 00 	mov	#9,	r15	;#0x0009
    8cdc:	b0 12 d4 86 	call	#0x86d4	
    8ce0:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    8ce4:	5f 4f 22 00 	mov.b	34(r15),r15	;0x0022(r15)
    8ce8:	4f 4f       	mov.b	r15,	r15	
    8cea:	0e 4f       	mov	r15,	r14	
    8cec:	3f 40 06 00 	mov	#6,	r15	;#0x0006
    8cf0:	b0 12 d4 86 	call	#0x86d4	
    8cf4:	3e 40 fe 00 	mov	#254,	r14	;#0x00fe
    8cf8:	3f 40 3e 00 	mov	#62,	r15	;#0x003e
    8cfc:	b0 12 d4 86 	call	#0x86d4	
    8d00:	7f 40 0f 00 	mov.b	#15,	r15	;#0x000f
    8d04:	b0 12 4c 89 	call	#0x894c	
    8d08:	5f 43       	mov.b	#1,	r15	;r3 As==01
    8d0a:	b0 12 ec 88 	call	#0x88ec	
    8d0e:	b0 12 90 85 	call	#0x8590	
    8d12:	b0 12 bc 85 	call	#0x85bc	
    8d16:	7f 40 06 00 	mov.b	#6,	r15	;#0x0006
    8d1a:	b0 12 1c 89 	call	#0x891c	
    8d1e:	b0 12 a6 85 	call	#0x85a6	
    8d22:	b0 12 d2 85 	call	#0x85d2	
    8d26:	21 53       	incd	r1		
    8d28:	34 41       	pop	r4		
    8d2a:	30 41       	ret			

00008d2c <cc2500_set_channel>:
    8d2c:	04 12       	push	r4		
    8d2e:	04 41       	mov	r1,	r4	
    8d30:	24 53       	incd	r4		
    8d32:	21 83       	decd	r1		
    8d34:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8d38:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8d3c:	0e 4f       	mov	r15,	r14	
    8d3e:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    8d42:	b0 12 d4 86 	call	#0x86d4	
    8d46:	21 53       	incd	r1		
    8d48:	34 41       	pop	r4		
    8d4a:	30 41       	ret			

00008d4c <cc2500_calibrate>:
    8d4c:	04 12       	push	r4		
    8d4e:	04 41       	mov	r1,	r4	
    8d50:	24 53       	incd	r4		
    8d52:	b0 12 ec 8f 	call	#0x8fec	
    8d56:	3f 40 33 00 	mov	#51,	r15	;#0x0033
    8d5a:	b0 12 b2 86 	call	#0x86b2	
    8d5e:	4f 43       	clr.b	r15		
    8d60:	b0 12 a8 88 	call	#0x88a8	
    8d64:	34 41       	pop	r4		
    8d66:	30 41       	ret			

00008d68 <cc2500_utx>:
    8d68:	04 12       	push	r4		
    8d6a:	04 41       	mov	r1,	r4	
    8d6c:	24 53       	incd	r4		
    8d6e:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    8d72:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    8d76:	c4 4e fc ff 	mov.b	r14,	-4(r4)	;0xfffc(r4)
    8d7a:	b0 12 ec 8f 	call	#0x8fec	
    8d7e:	b0 12 d2 85 	call	#0x85d2	
    8d82:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8d86:	0e 4f       	mov	r15,	r14	
    8d88:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    8d8c:	b0 12 6e 87 	call	#0x876e	
    8d90:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8d94:	0d 4f       	mov	r15,	r13	
    8d96:	1e 44 fa ff 	mov	-6(r4),	r14	;0xfffa(r4)
    8d9a:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    8d9e:	b0 12 d2 87 	call	#0x87d2	
    8da2:	3f 40 35 00 	mov	#53,	r15	;#0x0035
    8da6:	b0 12 b2 86 	call	#0x86b2	
    8daa:	3f 40 3a 00 	mov	#58,	r15	;#0x003a
    8dae:	b0 12 38 87 	call	#0x8738	
    8db2:	c4 4f f8 ff 	mov.b	r15,	-8(r4)	;0xfff8(r4)
    8db6:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    8dba:	3f f0 7f 00 	and	#127,	r15	;#0x007f
    8dbe:	1f 93       	cmp	#1,	r15	;r3 As==01
    8dc0:	f4 37       	jge	$-22     	;abs 0x8daa
    8dc2:	b0 12 fe 85 	call	#0x85fe	
    8dc6:	b0 12 14 86 	call	#0x8614	
    8dca:	31 50 06 00 	add	#6,	r1	;#0x0006
    8dce:	34 41       	pop	r4		
    8dd0:	30 41       	ret			

00008dd2 <cc2500_rx_register_buffer>:
    8dd2:	04 12       	push	r4		
    8dd4:	04 41       	mov	r1,	r4	
    8dd6:	24 53       	incd	r4		
    8dd8:	21 82       	sub	#4,	r1	;r2 As==10
    8dda:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    8dde:	c4 4e fc ff 	mov.b	r14,	-4(r4)	;0xfffc(r4)
    8de2:	92 44 fa ff 	mov	-6(r4),	&0x023c	;0xfffa(r4)
    8de6:	3c 02 
    8de8:	c2 43 24 02 	mov.b	#0,	&0x0224	;r3 As==00
    8dec:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8df0:	0e 4f       	mov	r15,	r14	
    8df2:	3f 40 06 00 	mov	#6,	r15	;#0x0006
    8df6:	b0 12 d4 86 	call	#0x86d4	
    8dfa:	21 52       	add	#4,	r1	;r2 As==10
    8dfc:	34 41       	pop	r4		
    8dfe:	30 41       	ret			

00008e00 <cc2500_rx_enter>:
    8e00:	04 12       	push	r4		
    8e02:	04 41       	mov	r1,	r4	
    8e04:	24 53       	incd	r4		
    8e06:	b0 12 ec 8f 	call	#0x8fec	
    8e0a:	c2 43 24 02 	mov.b	#0,	&0x0224	;r3 As==00
    8e0e:	b0 12 fe 85 	call	#0x85fe	
    8e12:	b0 12 14 86 	call	#0x8614	
    8e16:	b0 12 e8 85 	call	#0x85e8	
    8e1a:	b0 12 d2 85 	call	#0x85d2	
    8e1e:	3f 40 34 00 	mov	#52,	r15	;#0x0034
    8e22:	b0 12 b2 86 	call	#0x86b2	
    8e26:	5f 43       	mov.b	#1,	r15	;r3 As==01
    8e28:	b0 12 a8 88 	call	#0x88a8	
    8e2c:	34 41       	pop	r4		
    8e2e:	30 41       	ret			

00008e30 <cc2500_rx_pkt_eop>:
    8e30:	0b 12       	push	r11		
    8e32:	04 12       	push	r4		
    8e34:	04 41       	mov	r1,	r4	
    8e36:	24 52       	add	#4,	r4	;r2 As==10
    8e38:	31 50 f6 ff 	add	#-10,	r1	;#0xfff6
    8e3c:	3f 40 3b 00 	mov	#59,	r15	;#0x003b
    8e40:	b0 12 38 87 	call	#0x8738	
    8e44:	c4 4f f2 ff 	mov.b	r15,	-14(r4)	;0xfff2(r4)
    8e48:	d4 44 f2 ff 	mov.b	-14(r4),-10(r4)	;0xfff2(r4), 0xfff6(r4)
    8e4c:	f6 ff 
    8e4e:	c4 43 f7 ff 	mov.b	#0,	-9(r4)	;r3 As==00, 0xfff7(r4)
    8e52:	3f 40 3b 00 	mov	#59,	r15	;#0x003b
    8e56:	b0 12 38 87 	call	#0x8738	
    8e5a:	c4 4f f2 ff 	mov.b	r15,	-14(r4)	;0xfff2(r4)
    8e5e:	e4 93 f2 ff 	cmp.b	#2,	-14(r4)	;r3 As==10, 0xfff2(r4)
    8e62:	05 2c       	jc	$+12     	;abs 0x8e6e
    8e64:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    8e68:	1f 94 f6 ff 	cmp	-10(r4),r15	;0xfff6(r4)
    8e6c:	ed 23       	jnz	$-36     	;abs 0x8e48
    8e6e:	c4 93 f2 ff 	tst.b	-14(r4)	;0xfff2(r4)
    8e72:	68 24       	jz	$+210    	;abs 0x8f44
    8e74:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    8e78:	4f 93       	tst.b	r15		
    8e7a:	59 38       	jl	$+180    	;abs 0x8f2e
    8e7c:	b0 12 8a 88 	call	#0x888a	
    8e80:	c4 4f f8 ff 	mov.b	r15,	-8(r4)	;0xfff8(r4)
    8e84:	5f 44 f2 ff 	mov.b	-14(r4),r15	;0xfff2(r4)
    8e88:	0e 4f       	mov	r15,	r14	
    8e8a:	3e 53       	add	#-1,	r14	;r3 As==11
    8e8c:	1f 42 3c 02 	mov	&0x023c,r15	
    8e90:	0d 4e       	mov	r14,	r13	
    8e92:	0e 4f       	mov	r15,	r14	
    8e94:	3f 40 3f 00 	mov	#63,	r15	;#0x003f
    8e98:	b0 12 28 88 	call	#0x8828	
    8e9c:	1e 42 3c 02 	mov	&0x023c,r14	
    8ea0:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    8ea4:	0f 5e       	add	r14,	r15	
    8ea6:	6f 4f       	mov.b	@r15,	r15	
    8ea8:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    8eac:	c4 43 fb ff 	mov.b	#0,	-5(r4)	;r3 As==00, 0xfffb(r4)
    8eb0:	b4 90 80 00 	cmp	#128,	-6(r4)	;#0x0080, 0xfffa(r4)
    8eb4:	fa ff 
    8eb6:	0e 38       	jl	$+30     	;abs 0x8ed4
    8eb8:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    8ebc:	3f 50 00 ff 	add	#-256,	r15	;#0xff00
    8ec0:	0f 93       	tst	r15		
    8ec2:	01 34       	jge	$+4      	;abs 0x8ec6
    8ec4:	1f 53       	inc	r15		
    8ec6:	0f 11       	rra	r15		
    8ec8:	0e 4f       	mov	r15,	r14	
    8eca:	3e 50 b8 ff 	add	#-72,	r14	;#0xffb8
    8ece:	84 4e f4 ff 	mov	r14,	-12(r4)	;0xfff4(r4)
    8ed2:	0b 3c       	jmp	$+24     	;abs 0x8eea
    8ed4:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    8ed8:	0f 93       	tst	r15		
    8eda:	01 34       	jge	$+4      	;abs 0x8ede
    8edc:	1f 53       	inc	r15		
    8ede:	0f 11       	rra	r15		
    8ee0:	0e 4f       	mov	r15,	r14	
    8ee2:	3e 50 b8 ff 	add	#-72,	r14	;#0xffb8
    8ee6:	84 4e f4 ff 	mov	r14,	-12(r4)	;0xfff4(r4)
    8eea:	1e 42 3c 02 	mov	&0x023c,r14	
    8eee:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    8ef2:	1f 53       	inc	r15		
    8ef4:	0f 5e       	add	r14,	r15	
    8ef6:	6f 4f       	mov.b	@r15,	r15	
    8ef8:	4f 93       	tst.b	r15		
    8efa:	0e 34       	jge	$+30     	;abs 0x8f18
    8efc:	1c 42 38 02 	mov	&0x0238,r12	
    8f00:	1f 44 f4 ff 	mov	-12(r4),r15	;0xfff4(r4)
    8f04:	4e 4f       	mov.b	r15,	r14	
    8f06:	5f 44 f8 ff 	mov.b	-8(r4),	r15	;0xfff8(r4)
    8f0a:	1b 42 3c 02 	mov	&0x023c,r11	
    8f0e:	4d 4e       	mov.b	r14,	r13	
    8f10:	0e 4f       	mov	r15,	r14	
    8f12:	0f 4b       	mov	r11,	r15	
    8f14:	8c 12       	call	r12		
    8f16:	1f 3c       	jmp	$+64     	;abs 0x8f56
    8f18:	b0 12 0a 8a 	call	#0x8a0a	
    8f1c:	1c 42 38 02 	mov	&0x0238,r12	
    8f20:	1f 42 3c 02 	mov	&0x023c,r15	
    8f24:	4d 43       	clr.b	r13		
    8f26:	3e 40 fd ff 	mov	#-3,	r14	;#0xfffd
    8f2a:	8c 12       	call	r12		
    8f2c:	14 3c       	jmp	$+42     	;abs 0x8f56
    8f2e:	b0 12 0a 8a 	call	#0x8a0a	
    8f32:	1c 42 38 02 	mov	&0x0238,r12	
    8f36:	1f 42 3c 02 	mov	&0x023c,r15	
    8f3a:	4d 43       	clr.b	r13		
    8f3c:	3e 40 fe ff 	mov	#-2,	r14	;#0xfffe
    8f40:	8c 12       	call	r12		
    8f42:	09 3c       	jmp	$+20     	;abs 0x8f56
    8f44:	b0 12 0a 8a 	call	#0x8a0a	
    8f48:	1c 42 38 02 	mov	&0x0238,r12	
    8f4c:	1f 42 3c 02 	mov	&0x023c,r15	
    8f50:	4d 43       	clr.b	r13		
    8f52:	3e 43       	mov	#-1,	r14	;r3 As==11
    8f54:	8c 12       	call	r12		
    8f56:	b0 12 fe 85 	call	#0x85fe	
    8f5a:	b0 12 14 86 	call	#0x8614	
    8f5e:	31 50 0a 00 	add	#10,	r1	;#0x000a
    8f62:	34 41       	pop	r4		
    8f64:	3b 41       	pop	r11		
    8f66:	30 41       	ret			

00008f68 <cc2500_rx_register_cb>:
    8f68:	04 12       	push	r4		
    8f6a:	04 41       	mov	r1,	r4	
    8f6c:	24 53       	incd	r4		
    8f6e:	21 83       	decd	r1		
    8f70:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    8f74:	92 44 fc ff 	mov	-4(r4),	&0x0238	;0xfffc(r4)
    8f78:	38 02 
    8f7a:	21 53       	incd	r1		
    8f7c:	34 41       	pop	r4		
    8f7e:	30 41       	ret			

00008f80 <cc2500_packet_status>:
    8f80:	04 12       	push	r4		
    8f82:	04 41       	mov	r1,	r4	
    8f84:	24 53       	incd	r4		
    8f86:	21 83       	decd	r1		
    8f88:	3f 40 38 00 	mov	#56,	r15	;#0x0038
    8f8c:	b0 12 38 87 	call	#0x8738	
    8f90:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8f94:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8f98:	21 53       	incd	r1		
    8f9a:	34 41       	pop	r4		
    8f9c:	30 41       	ret			

00008f9e <cc2500_cca>:
    8f9e:	04 12       	push	r4		
    8fa0:	04 41       	mov	r1,	r4	
    8fa2:	24 53       	incd	r4		
    8fa4:	21 83       	decd	r1		
    8fa6:	b0 12 80 8f 	call	#0x8f80	
    8faa:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8fae:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8fb2:	4f 4f       	mov.b	r15,	r15	
    8fb4:	12 c3       	clrc			
    8fb6:	4f 10       	rrc.b	r15		
    8fb8:	12 c3       	clrc			
    8fba:	4f 10       	rrc.b	r15		
    8fbc:	12 c3       	clrc			
    8fbe:	4f 10       	rrc.b	r15		
    8fc0:	12 c3       	clrc			
    8fc2:	4f 10       	rrc.b	r15		
    8fc4:	4f 4f       	mov.b	r15,	r15	
    8fc6:	1f f3       	and	#1,	r15	;r3 As==01
    8fc8:	21 53       	incd	r1		
    8fca:	34 41       	pop	r4		
    8fcc:	30 41       	ret			

00008fce <cc2500_get_rssi>:
    8fce:	04 12       	push	r4		
    8fd0:	04 41       	mov	r1,	r4	
    8fd2:	24 53       	incd	r4		
    8fd4:	21 83       	decd	r1		
    8fd6:	3f 40 34 00 	mov	#52,	r15	;#0x0034
    8fda:	b0 12 38 87 	call	#0x8738	
    8fde:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    8fe2:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    8fe6:	21 53       	incd	r1		
    8fe8:	34 41       	pop	r4		
    8fea:	30 41       	ret			

00008fec <cc2500_idle>:
    8fec:	04 12       	push	r4		
    8fee:	04 41       	mov	r1,	r4	
    8ff0:	24 53       	incd	r4		
    8ff2:	b0 12 bc 85 	call	#0x85bc	
    8ff6:	b0 12 d2 85 	call	#0x85d2	
    8ffa:	b0 12 0a 8a 	call	#0x8a0a	
    8ffe:	3f 40 36 00 	mov	#54,	r15	;#0x0036
    9002:	b0 12 b2 86 	call	#0x86b2	
    9006:	4f 43       	clr.b	r15		
    9008:	b0 12 a8 88 	call	#0x88a8	
    900c:	34 41       	pop	r4		
    900e:	30 41       	ret			

00009010 <cc2500_sleep>:
    9010:	04 12       	push	r4		
    9012:	04 41       	mov	r1,	r4	
    9014:	24 53       	incd	r4		
    9016:	3f 40 39 00 	mov	#57,	r15	;#0x0039
    901a:	b0 12 b2 86 	call	#0x86b2	
    901e:	34 41       	pop	r4		
    9020:	30 41       	ret			

00009022 <cc2500_reset>:
    9022:	04 12       	push	r4		
    9024:	04 41       	mov	r1,	r4	
    9026:	24 53       	incd	r4		
    9028:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    902c:	b0 12 b2 86 	call	#0x86b2	
    9030:	4f 43       	clr.b	r15		
    9032:	b0 12 a8 88 	call	#0x88a8	
    9036:	34 41       	pop	r4		
    9038:	30 41       	ret			

0000903a <cc2500_wakeup>:
    903a:	04 12       	push	r4		
    903c:	04 41       	mov	r1,	r4	
    903e:	24 53       	incd	r4		
    9040:	b0 12 5e 97 	call	#0x975e	
    9044:	03 43       	nop			
    9046:	b0 12 b4 96 	call	#0x96b4	
    904a:	0f 93       	tst	r15		
    904c:	fc 23       	jnz	$-6      	;abs 0x9046
    904e:	b0 12 74 97 	call	#0x9774	
    9052:	b0 12 ec 8f 	call	#0x8fec	
    9056:	4f 43       	clr.b	r15		
    9058:	b0 12 a8 88 	call	#0x88a8	
    905c:	34 41       	pop	r4		
    905e:	30 41       	ret			

00009060 <cc2500_variables_bootstrap>:
    9060:	04 12       	push	r4		
    9062:	04 41       	mov	r1,	r4	
    9064:	24 53       	incd	r4		
    9066:	c2 43 3e 02 	mov.b	#0,	&0x023e	;r3 As==00
    906a:	82 43 3c 02 	mov	#0,	&0x023c	;r3 As==00
    906e:	c2 43 24 02 	mov.b	#0,	&0x0224	;r3 As==00
    9072:	c2 43 26 02 	mov.b	#0,	&0x0226	;r3 As==00
    9076:	34 41       	pop	r4		
    9078:	30 41       	ret			

0000907a <CC_ASSERT>:
    907a:	04 12       	push	r4		
    907c:	04 41       	mov	r1,	r4	
    907e:	24 53       	incd	r4		
    9080:	21 83       	decd	r1		
    9082:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    9086:	21 53       	incd	r1		
    9088:	34 41       	pop	r4		
    908a:	30 41       	ret			

0000908c <cc2500_init>:
    908c:	04 12       	push	r4		
    908e:	04 41       	mov	r1,	r4	
    9090:	24 53       	incd	r4		
    9092:	21 83       	decd	r1		
    9094:	b0 12 60 90 	call	#0x9060	
    9098:	b0 12 40 86 	call	#0x8640	
    909c:	b0 12 2a 86 	call	#0x862a	
    90a0:	b0 12 5e 97 	call	#0x975e	
    90a4:	3f 40 0a 00 	mov	#10,	r15	;#0x000a
    90a8:	b0 12 fc 93 	call	#0x93fc	
    90ac:	b0 12 74 97 	call	#0x9774	
    90b0:	3f 40 28 00 	mov	#40,	r15	;#0x0028
    90b4:	b0 12 fc 93 	call	#0x93fc	
    90b8:	b0 12 5e 97 	call	#0x975e	
    90bc:	03 43       	nop			
    90be:	b0 12 b4 96 	call	#0x96b4	
    90c2:	0f 93       	tst	r15		
    90c4:	fc 23       	jnz	$-6      	;abs 0x90be
    90c6:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    90ca:	b0 12 7a 96 	call	#0x967a	
    90ce:	03 43       	nop			
    90d0:	b0 12 b4 96 	call	#0x96b4	
    90d4:	0f 93       	tst	r15		
    90d6:	fc 23       	jnz	$-6      	;abs 0x90d0
    90d8:	b0 12 74 97 	call	#0x9774	
    90dc:	3e 40 a5 00 	mov	#165,	r14	;#0x00a5
    90e0:	3f 40 06 00 	mov	#6,	r15	;#0x0006
    90e4:	b0 12 d4 86 	call	#0x86d4	
    90e8:	3f 40 06 00 	mov	#6,	r15	;#0x0006
    90ec:	b0 12 02 87 	call	#0x8702	
    90f0:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    90f4:	94 11 fc ff 	sxt	-4(r4)		;0xfffc(r4)
    90f8:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    90fc:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    9100:	1f 43       	mov	#1,	r15	;r3 As==01
    9102:	3e 90 a5 00 	cmp	#165,	r14	;#0x00a5
    9106:	01 24       	jz	$+4      	;abs 0x910a
    9108:	0f 43       	clr	r15		
    910a:	b0 12 7a 90 	call	#0x907a	
    910e:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    9112:	b0 12 38 87 	call	#0x8738	
    9116:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    911a:	94 11 fc ff 	sxt	-4(r4)		;0xfffc(r4)
    911e:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    9122:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    9126:	1f 43       	mov	#1,	r15	;r3 As==01
    9128:	3e 90 80 00 	cmp	#128,	r14	;#0x0080
    912c:	01 24       	jz	$+4      	;abs 0x9130
    912e:	0f 43       	clr	r15		
    9130:	b0 12 7a 90 	call	#0x907a	
    9134:	3f 40 31 00 	mov	#49,	r15	;#0x0031
    9138:	b0 12 38 87 	call	#0x8738	
    913c:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    9140:	94 11 fc ff 	sxt	-4(r4)		;0xfffc(r4)
    9144:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    9148:	3e f0 ff 00 	and	#255,	r14	;#0x00ff
    914c:	1f 43       	mov	#1,	r15	;r3 As==01
    914e:	3e 90 03 00 	cmp	#3,	r14	;#0x0003
    9152:	01 2c       	jc	$+4      	;abs 0x9156
    9154:	0f 43       	clr	r15		
    9156:	b0 12 7a 90 	call	#0x907a	
    915a:	3f 40 74 a5 	mov	#-23180,r15	;#0xa574
    915e:	b0 12 34 8a 	call	#0x8a34	
    9162:	21 53       	incd	r1		
    9164:	34 41       	pop	r4		
    9166:	30 41       	ret			

00009168 <cc2500_gdox_signal_handler>:
    9168:	04 12       	push	r4		
    916a:	04 41       	mov	r1,	r4	
    916c:	24 53       	incd	r4		
    916e:	21 83       	decd	r1		
    9170:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    9174:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    9178:	1f f3       	and	#1,	r15	;r3 As==01
    917a:	4f 4f       	mov.b	r15,	r15	
    917c:	4f 93       	tst.b	r15		
    917e:	02 24       	jz	$+6      	;abs 0x9184
    9180:	b0 12 30 8e 	call	#0x8e30	
    9184:	21 53       	incd	r1		
    9186:	34 41       	pop	r4		
    9188:	30 41       	ret			

0000918a <port2_irq_handler>:
    918a:	0f 12       	push	r15		
    918c:	0e 12       	push	r14		
    918e:	0d 12       	push	r13		
    9190:	0c 12       	push	r12		
    9192:	04 12       	push	r4		
    9194:	04 41       	mov	r1,	r4	
    9196:	34 50 0a 00 	add	#10,	r4	;#0x000a
    919a:	21 83       	decd	r1		
    919c:	c4 43 f4 ff 	mov.b	#0,	-12(r4)	;r3 As==00, 0xfff4(r4)
    91a0:	c4 43 f5 ff 	mov.b	#0,	-11(r4)	;r3 As==00, 0xfff5(r4)
    91a4:	5f 42 2b 00 	mov.b	&0x002b,r15	
    91a8:	4f 4f       	mov.b	r15,	r15	
    91aa:	5e 42 2d 00 	mov.b	&0x002d,r14	
    91ae:	4e 4e       	mov.b	r14,	r14	
    91b0:	3e f0 40 00 	and	#64,	r14	;#0x0040
    91b4:	0f fe       	and	r14,	r15	
    91b6:	0f 93       	tst	r15		
    91b8:	0a 24       	jz	$+22     	;abs 0x91ce
    91ba:	d4 d3 f4 ff 	bis.b	#1,	-12(r4)	;r3 As==01, 0xfff4(r4)
    91be:	d4 d3 f5 ff 	bis.b	#1,	-11(r4)	;r3 As==01, 0xfff5(r4)
    91c2:	5f 42 2b 00 	mov.b	&0x002b,r15	
    91c6:	7f f0 40 00 	and.b	#64,	r15	;#0x0040
    91ca:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    91ce:	5f 42 2b 00 	mov.b	&0x002b,r15	
    91d2:	4f 4f       	mov.b	r15,	r15	
    91d4:	5e 42 2d 00 	mov.b	&0x002d,r14	
    91d8:	4e 4e       	mov.b	r14,	r14	
    91da:	3e f0 80 00 	and	#128,	r14	;#0x0080
    91de:	0f fe       	and	r14,	r15	
    91e0:	0f 93       	tst	r15		
    91e2:	0a 24       	jz	$+22     	;abs 0x91f8
    91e4:	e4 d3 f4 ff 	bis.b	#2,	-12(r4)	;r3 As==10, 0xfff4(r4)
    91e8:	d4 d3 f5 ff 	bis.b	#1,	-11(r4)	;r3 As==01, 0xfff5(r4)
    91ec:	5f 42 2b 00 	mov.b	&0x002b,r15	
    91f0:	7f f0 80 ff 	and.b	#-128,	r15	;#0xff80
    91f4:	c2 4f 2b 00 	mov.b	r15,	&0x002b	
    91f8:	c4 93 f4 ff 	tst.b	-12(r4)	;0xfff4(r4)
    91fc:	04 24       	jz	$+10     	;abs 0x9206
    91fe:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    9202:	b0 12 68 91 	call	#0x9168	
    9206:	c4 93 f5 ff 	tst.b	-11(r4)	;0xfff5(r4)
    920a:	03 24       	jz	$+8      	;abs 0x9212
    920c:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    9210:	00 00 
    9212:	c2 43 2b 00 	mov.b	#0,	&0x002b	;r3 As==00
    9216:	21 53       	incd	r1		
    9218:	34 41       	pop	r4		
    921a:	3c 41       	pop	r12		
    921c:	3d 41       	pop	r13		
    921e:	3e 41       	pop	r14		
    9220:	3f 41       	pop	r15		
    9222:	00 13       	reti			

00009224 <get_mclk_freq_mhz>:
    9224:	04 12       	push	r4		
    9226:	04 41       	mov	r1,	r4	
    9228:	24 53       	incd	r4		
    922a:	1f 42 28 02 	mov	&0x0228,r15	
    922e:	34 41       	pop	r4		
    9230:	30 41       	ret			

00009232 <set_mcu_speed>:
    9232:	04 12       	push	r4		
    9234:	04 41       	mov	r1,	r4	
    9236:	24 53       	incd	r4		
    9238:	21 83       	decd	r1		
    923a:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    923e:	c4 4e fd ff 	mov.b	r14,	-3(r4)	;0xfffd(r4)
    9242:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    9246:	3f 92       	cmp	#8,	r15	;r2 As==11
    9248:	16 24       	jz	$+46     	;abs 0x9276
    924a:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    924e:	03 34       	jge	$+8      	;abs 0x9256
    9250:	1f 93       	cmp	#1,	r15	;r3 As==01
    9252:	08 24       	jz	$+18     	;abs 0x9264
    9254:	2b 3c       	jmp	$+88     	;abs 0x92ac
    9256:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    925a:	16 24       	jz	$+46     	;abs 0x9288
    925c:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    9260:	1c 24       	jz	$+58     	;abs 0x929a
    9262:	24 3c       	jmp	$+74     	;abs 0x92ac
    9264:	5f 42 ff 10 	mov.b	&0x10ff,r15	
    9268:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    926c:	5f 42 fe 10 	mov.b	&0x10fe,r15	
    9270:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    9274:	1b 3c       	jmp	$+56     	;abs 0x92ac
    9276:	5f 42 fd 10 	mov.b	&0x10fd,r15	
    927a:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    927e:	5f 42 fc 10 	mov.b	&0x10fc,r15	
    9282:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    9286:	12 3c       	jmp	$+38     	;abs 0x92ac
    9288:	5f 42 fb 10 	mov.b	&0x10fb,r15	
    928c:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    9290:	5f 42 fa 10 	mov.b	&0x10fa,r15	
    9294:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    9298:	09 3c       	jmp	$+20     	;abs 0x92ac
    929a:	5f 42 f9 10 	mov.b	&0x10f9,r15	
    929e:	c2 4f 57 00 	mov.b	r15,	&0x0057	
    92a2:	5f 42 f8 10 	mov.b	&0x10f8,r15	
    92a6:	c2 4f 56 00 	mov.b	r15,	&0x0056	
    92aa:	03 43       	nop			
    92ac:	5f 44 fd ff 	mov.b	-3(r4),	r15	;0xfffd(r4)
    92b0:	2f 93       	cmp	#2,	r15	;r3 As==10
    92b2:	0e 24       	jz	$+30     	;abs 0x92d0
    92b4:	3f 90 03 00 	cmp	#3,	r15	;#0x0003
    92b8:	03 34       	jge	$+8      	;abs 0x92c0
    92ba:	1f 93       	cmp	#1,	r15	;r3 As==01
    92bc:	06 24       	jz	$+14     	;abs 0x92ca
    92be:	12 3c       	jmp	$+38     	;abs 0x92e4
    92c0:	2f 92       	cmp	#4,	r15	;r2 As==10
    92c2:	09 24       	jz	$+20     	;abs 0x92d6
    92c4:	3f 92       	cmp	#8,	r15	;r2 As==11
    92c6:	0a 24       	jz	$+22     	;abs 0x92dc
    92c8:	0d 3c       	jmp	$+28     	;abs 0x92e4
    92ca:	c2 43 58 00 	mov.b	#0,	&0x0058	;r3 As==00
    92ce:	0a 3c       	jmp	$+22     	;abs 0x92e4
    92d0:	e2 43 58 00 	mov.b	#2,	&0x0058	;r3 As==10
    92d4:	07 3c       	jmp	$+16     	;abs 0x92e4
    92d6:	e2 42 58 00 	mov.b	#4,	&0x0058	;r2 As==10
    92da:	04 3c       	jmp	$+10     	;abs 0x92e4
    92dc:	f2 40 06 00 	mov.b	#6,	&0x0058	;#0x0006
    92e0:	58 00 
    92e2:	03 43       	nop			
    92e4:	5f 44 fc ff 	mov.b	-4(r4),	r15	;0xfffc(r4)
    92e8:	82 4f 28 02 	mov	r15,	&0x0228	
    92ec:	21 53       	incd	r1		
    92ee:	34 41       	pop	r4		
    92f0:	30 41       	ret			

000092f2 <set_mcu_speed_dco_mclk_1MHz_smclk_1MHz>:
    92f2:	04 12       	push	r4		
    92f4:	04 41       	mov	r1,	r4	
    92f6:	24 53       	incd	r4		
    92f8:	5e 43       	mov.b	#1,	r14	;r3 As==01
    92fa:	5f 43       	mov.b	#1,	r15	;r3 As==01
    92fc:	b0 12 32 92 	call	#0x9232	
    9300:	34 41       	pop	r4		
    9302:	30 41       	ret			

00009304 <set_mcu_speed_dco_mclk_8MHz_smclk_8MHz>:
    9304:	04 12       	push	r4		
    9306:	04 41       	mov	r1,	r4	
    9308:	24 53       	incd	r4		
    930a:	5e 43       	mov.b	#1,	r14	;r3 As==01
    930c:	7f 42       	mov.b	#8,	r15	;r2 As==11
    930e:	b0 12 32 92 	call	#0x9232	
    9312:	34 41       	pop	r4		
    9314:	30 41       	ret			

00009316 <set_mcu_speed_dco_mclk_8MHz_smclk_4MHz>:
    9316:	04 12       	push	r4		
    9318:	04 41       	mov	r1,	r4	
    931a:	24 53       	incd	r4		
    931c:	6e 43       	mov.b	#2,	r14	;r3 As==10
    931e:	7f 42       	mov.b	#8,	r15	;r2 As==11
    9320:	b0 12 32 92 	call	#0x9232	
    9324:	34 41       	pop	r4		
    9326:	30 41       	ret			

00009328 <set_mcu_speed_dco_mclk_8MHz_smclk_2MHz>:
    9328:	04 12       	push	r4		
    932a:	04 41       	mov	r1,	r4	
    932c:	24 53       	incd	r4		
    932e:	6e 42       	mov.b	#4,	r14	;r2 As==10
    9330:	7f 42       	mov.b	#8,	r15	;r2 As==11
    9332:	b0 12 32 92 	call	#0x9232	
    9336:	34 41       	pop	r4		
    9338:	30 41       	ret			

0000933a <set_mcu_speed_dco_mclk_8MHz_smclk_1MHz>:
    933a:	04 12       	push	r4		
    933c:	04 41       	mov	r1,	r4	
    933e:	24 53       	incd	r4		
    9340:	7e 42       	mov.b	#8,	r14	;r2 As==11
    9342:	7f 42       	mov.b	#8,	r15	;r2 As==11
    9344:	b0 12 32 92 	call	#0x9232	
    9348:	34 41       	pop	r4		
    934a:	30 41       	ret			

0000934c <set_mcu_speed_dco_mclk_12MHz_smclk_12MHz>:
    934c:	04 12       	push	r4		
    934e:	04 41       	mov	r1,	r4	
    9350:	24 53       	incd	r4		
    9352:	5e 43       	mov.b	#1,	r14	;r3 As==01
    9354:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    9358:	b0 12 32 92 	call	#0x9232	
    935c:	34 41       	pop	r4		
    935e:	30 41       	ret			

00009360 <set_mcu_speed_dco_mclk_12MHz_smclk_6MHz>:
    9360:	04 12       	push	r4		
    9362:	04 41       	mov	r1,	r4	
    9364:	24 53       	incd	r4		
    9366:	6e 43       	mov.b	#2,	r14	;r3 As==10
    9368:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    936c:	b0 12 32 92 	call	#0x9232	
    9370:	34 41       	pop	r4		
    9372:	30 41       	ret			

00009374 <set_mcu_speed_dco_mclk_12MHz_smclk_3MHz>:
    9374:	04 12       	push	r4		
    9376:	04 41       	mov	r1,	r4	
    9378:	24 53       	incd	r4		
    937a:	6e 42       	mov.b	#4,	r14	;r2 As==10
    937c:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    9380:	b0 12 32 92 	call	#0x9232	
    9384:	34 41       	pop	r4		
    9386:	30 41       	ret			

00009388 <set_mcu_speed_dco_mclk_12MHz_smclk_1_5MHz>:
    9388:	04 12       	push	r4		
    938a:	04 41       	mov	r1,	r4	
    938c:	24 53       	incd	r4		
    938e:	7e 42       	mov.b	#8,	r14	;r2 As==11
    9390:	7f 40 0c 00 	mov.b	#12,	r15	;#0x000c
    9394:	b0 12 32 92 	call	#0x9232	
    9398:	34 41       	pop	r4		
    939a:	30 41       	ret			

0000939c <set_mcu_speed_dco_mclk_16MHz_smclk_16MHz>:
    939c:	04 12       	push	r4		
    939e:	04 41       	mov	r1,	r4	
    93a0:	24 53       	incd	r4		
    93a2:	5e 43       	mov.b	#1,	r14	;r3 As==01
    93a4:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    93a8:	b0 12 32 92 	call	#0x9232	
    93ac:	34 41       	pop	r4		
    93ae:	30 41       	ret			

000093b0 <set_mcu_speed_dco_mclk_16MHz_smclk_8MHz>:
    93b0:	04 12       	push	r4		
    93b2:	04 41       	mov	r1,	r4	
    93b4:	24 53       	incd	r4		
    93b6:	6e 43       	mov.b	#2,	r14	;r3 As==10
    93b8:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    93bc:	b0 12 32 92 	call	#0x9232	
    93c0:	34 41       	pop	r4		
    93c2:	30 41       	ret			

000093c4 <set_mcu_speed_dco_mclk_16MHz_smclk_4MHz>:
    93c4:	04 12       	push	r4		
    93c6:	04 41       	mov	r1,	r4	
    93c8:	24 53       	incd	r4		
    93ca:	6e 42       	mov.b	#4,	r14	;r2 As==10
    93cc:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    93d0:	b0 12 32 92 	call	#0x9232	
    93d4:	34 41       	pop	r4		
    93d6:	30 41       	ret			

000093d8 <set_mcu_speed_dco_mclk_16MHz_smclk_2MHz>:
    93d8:	04 12       	push	r4		
    93da:	04 41       	mov	r1,	r4	
    93dc:	24 53       	incd	r4		
    93de:	7e 42       	mov.b	#8,	r14	;r2 As==11
    93e0:	7f 40 10 00 	mov.b	#16,	r15	;#0x0010
    93e4:	b0 12 32 92 	call	#0x9232	
    93e8:	34 41       	pop	r4		
    93ea:	30 41       	ret			

000093ec <loop_4_cycles>:
    93ec:	04 12       	push	r4		
    93ee:	04 41       	mov	r1,	r4	
    93f0:	24 53       	incd	r4		
    93f2:	3e 53       	add	#-1,	r14	;r3 As==11
    93f4:	3f 63       	addc	#-1,	r15	;r3 As==11
    93f6:	fd 2f       	jc	$-4      	;abs 0x93f2
    93f8:	34 41       	pop	r4		
    93fa:	30 41       	ret			

000093fc <delay_usec>:
    93fc:	04 12       	push	r4		
    93fe:	04 41       	mov	r1,	r4	
    9400:	24 53       	incd	r4		
    9402:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    9406:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    940a:	1f 42 28 02 	mov	&0x0228,r15	
    940e:	3f 92       	cmp	#8,	r15	;r2 As==11
    9410:	18 24       	jz	$+50     	;abs 0x9442
    9412:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    9416:	03 2c       	jc	$+8      	;abs 0x941e
    9418:	1f 93       	cmp	#1,	r15	;r3 As==01
    941a:	08 24       	jz	$+18     	;abs 0x942c
    941c:	2d 3c       	jmp	$+92     	;abs 0x9478
    941e:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    9422:	17 24       	jz	$+48     	;abs 0x9452
    9424:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    9428:	1e 24       	jz	$+62     	;abs 0x9466
    942a:	26 3c       	jmp	$+78     	;abs 0x9478
    942c:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    9430:	12 c3       	clrc			
    9432:	0f 10       	rrc	r15		
    9434:	12 c3       	clrc			
    9436:	0f 10       	rrc	r15		
    9438:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    943c:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    9440:	26 3c       	jmp	$+78     	;abs 0x948e
    9442:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    9446:	0f 5f       	rla	r15		
    9448:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    944c:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    9450:	1e 3c       	jmp	$+62     	;abs 0x948e
    9452:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    9456:	0f 4e       	mov	r14,	r15	
    9458:	0f 5f       	rla	r15		
    945a:	0f 5e       	add	r14,	r15	
    945c:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    9460:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    9464:	14 3c       	jmp	$+42     	;abs 0x948e
    9466:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    946a:	0f 5f       	rla	r15		
    946c:	0f 5f       	rla	r15		
    946e:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    9472:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    9476:	0b 3c       	jmp	$+24     	;abs 0x948e
    9478:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    947c:	12 c3       	clrc			
    947e:	0f 10       	rrc	r15		
    9480:	12 c3       	clrc			
    9482:	0f 10       	rrc	r15		
    9484:	84 4f f8 ff 	mov	r15,	-8(r4)	;0xfff8(r4)
    9488:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    948c:	03 43       	nop			
    948e:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    9492:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    9496:	b0 12 ec 93 	call	#0x93ec	
    949a:	31 50 06 00 	add	#6,	r1	;#0x0006
    949e:	34 41       	pop	r4		
    94a0:	30 41       	ret			

000094a2 <delay_ms>:
    94a2:	04 12       	push	r4		
    94a4:	04 41       	mov	r1,	r4	
    94a6:	24 53       	incd	r4		
    94a8:	31 82       	sub	#8,	r1	;r2 As==11
    94aa:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    94ae:	1f 42 28 02 	mov	&0x0228,r15	
    94b2:	3f 92       	cmp	#8,	r15	;r2 As==11
    94b4:	13 24       	jz	$+40     	;abs 0x94dc
    94b6:	3f 90 09 00 	cmp	#9,	r15	;#0x0009
    94ba:	03 2c       	jc	$+8      	;abs 0x94c2
    94bc:	1f 93       	cmp	#1,	r15	;r3 As==01
    94be:	08 24       	jz	$+18     	;abs 0x94d0
    94c0:	1f 3c       	jmp	$+64     	;abs 0x9500
    94c2:	3f 90 0c 00 	cmp	#12,	r15	;#0x000c
    94c6:	10 24       	jz	$+34     	;abs 0x94e8
    94c8:	3f 90 10 00 	cmp	#16,	r15	;#0x0010
    94cc:	13 24       	jz	$+40     	;abs 0x94f4
    94ce:	18 3c       	jmp	$+50     	;abs 0x9500
    94d0:	b4 40 fa 00 	mov	#250,	-8(r4)	;#0x00fa, 0xfff8(r4)
    94d4:	f8 ff 
    94d6:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    94da:	18 3c       	jmp	$+50     	;abs 0x950c
    94dc:	b4 40 d0 07 	mov	#2000,	-8(r4)	;#0x07d0, 0xfff8(r4)
    94e0:	f8 ff 
    94e2:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    94e6:	12 3c       	jmp	$+38     	;abs 0x950c
    94e8:	b4 40 b8 0b 	mov	#3000,	-8(r4)	;#0x0bb8, 0xfff8(r4)
    94ec:	f8 ff 
    94ee:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    94f2:	0c 3c       	jmp	$+26     	;abs 0x950c
    94f4:	b4 40 a0 0f 	mov	#4000,	-8(r4)	;#0x0fa0, 0xfff8(r4)
    94f8:	f8 ff 
    94fa:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    94fe:	06 3c       	jmp	$+14     	;abs 0x950c
    9500:	b4 40 fa 00 	mov	#250,	-8(r4)	;#0x00fa, 0xfff8(r4)
    9504:	f8 ff 
    9506:	84 43 fa ff 	mov	#0,	-6(r4)	;r3 As==00, 0xfffa(r4)
    950a:	03 43       	nop			
    950c:	84 43 f6 ff 	mov	#0,	-10(r4)	;r3 As==00, 0xfff6(r4)
    9510:	08 3c       	jmp	$+18     	;abs 0x9522
    9512:	1e 44 f8 ff 	mov	-8(r4),	r14	;0xfff8(r4)
    9516:	1f 44 fa ff 	mov	-6(r4),	r15	;0xfffa(r4)
    951a:	b0 12 ec 93 	call	#0x93ec	
    951e:	94 53 f6 ff 	inc	-10(r4)	;0xfff6(r4)
    9522:	94 94 fc ff 	cmp	-4(r4),	-10(r4)	;0xfffc(r4), 0xfff6(r4)
    9526:	f6 ff 
    9528:	f4 2b       	jnc	$-22     	;abs 0x9512
    952a:	31 52       	add	#8,	r1	;r2 As==11
    952c:	34 41       	pop	r4		
    952e:	30 41       	ret			

00009530 <led_green_off>:
    9530:	04 12       	push	r4		
    9532:	04 41       	mov	r1,	r4	
    9534:	24 53       	incd	r4		
    9536:	5f 42 21 00 	mov.b	&0x0021,r15	
    953a:	7f f0 fd ff 	and.b	#-3,	r15	;#0xfffd
    953e:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    9542:	34 41       	pop	r4		
    9544:	30 41       	ret			

00009546 <led_green_on>:
    9546:	04 12       	push	r4		
    9548:	04 41       	mov	r1,	r4	
    954a:	24 53       	incd	r4		
    954c:	5f 42 21 00 	mov.b	&0x0021,r15	
    9550:	6f d3       	bis.b	#2,	r15	;r3 As==10
    9552:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    9556:	34 41       	pop	r4		
    9558:	30 41       	ret			

0000955a <led_green_switch>:
    955a:	04 12       	push	r4		
    955c:	04 41       	mov	r1,	r4	
    955e:	24 53       	incd	r4		
    9560:	5f 42 21 00 	mov.b	&0x0021,r15	
    9564:	6f e3       	xor.b	#2,	r15	;r3 As==10
    9566:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    956a:	34 41       	pop	r4		
    956c:	30 41       	ret			

0000956e <led_red_off>:
    956e:	04 12       	push	r4		
    9570:	04 41       	mov	r1,	r4	
    9572:	24 53       	incd	r4		
    9574:	5f 42 21 00 	mov.b	&0x0021,r15	
    9578:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    957c:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    9580:	34 41       	pop	r4		
    9582:	30 41       	ret			

00009584 <led_red_on>:
    9584:	04 12       	push	r4		
    9586:	04 41       	mov	r1,	r4	
    9588:	24 53       	incd	r4		
    958a:	5f 42 21 00 	mov.b	&0x0021,r15	
    958e:	5f d3       	bis.b	#1,	r15	;r3 As==01
    9590:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    9594:	34 41       	pop	r4		
    9596:	30 41       	ret			

00009598 <led_red_switch>:
    9598:	04 12       	push	r4		
    959a:	04 41       	mov	r1,	r4	
    959c:	24 53       	incd	r4		
    959e:	5f 42 21 00 	mov.b	&0x0021,r15	
    95a2:	5f e3       	xor.b	#1,	r15	;r3 As==01
    95a4:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    95a8:	34 41       	pop	r4		
    95aa:	30 41       	ret			

000095ac <leds_off>:
    95ac:	04 12       	push	r4		
    95ae:	04 41       	mov	r1,	r4	
    95b0:	24 53       	incd	r4		
    95b2:	5f 42 21 00 	mov.b	&0x0021,r15	
    95b6:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    95ba:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    95be:	34 41       	pop	r4		
    95c0:	30 41       	ret			

000095c2 <leds_on>:
    95c2:	04 12       	push	r4		
    95c4:	04 41       	mov	r1,	r4	
    95c6:	24 53       	incd	r4		
    95c8:	5f 42 21 00 	mov.b	&0x0021,r15	
    95cc:	7f d0 03 00 	bis.b	#3,	r15	;#0x0003
    95d0:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    95d4:	34 41       	pop	r4		
    95d6:	30 41       	ret			

000095d8 <leds_init>:
    95d8:	04 12       	push	r4		
    95da:	04 41       	mov	r1,	r4	
    95dc:	24 53       	incd	r4		
    95de:	5f 42 21 00 	mov.b	&0x0021,r15	
    95e2:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    95e6:	c2 4f 21 00 	mov.b	r15,	&0x0021	
    95ea:	5f 42 22 00 	mov.b	&0x0022,r15	
    95ee:	7f d0 03 00 	bis.b	#3,	r15	;#0x0003
    95f2:	c2 4f 22 00 	mov.b	r15,	&0x0022	
    95f6:	5f 42 26 00 	mov.b	&0x0026,r15	
    95fa:	7f f0 fc ff 	and.b	#-4,	r15	;#0xfffc
    95fe:	c2 4f 26 00 	mov.b	r15,	&0x0026	
    9602:	b0 12 ac 95 	call	#0x95ac	
    9606:	34 41       	pop	r4		
    9608:	30 41       	ret			

0000960a <spi_init>:
    960a:	04 12       	push	r4		
    960c:	04 41       	mov	r1,	r4	
    960e:	24 53       	incd	r4		
    9610:	5f 42 1a 00 	mov.b	&0x001a,r15	
    9614:	5f d3       	bis.b	#1,	r15	;r3 As==01
    9616:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    961a:	5f 42 1a 00 	mov.b	&0x001a,r15	
    961e:	7f d2       	bis.b	#8,	r15	;r2 As==11
    9620:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    9624:	5f 42 1a 00 	mov.b	&0x001a,r15	
    9628:	6f d3       	bis.b	#2,	r15	;r3 As==10
    962a:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    962e:	5f 42 19 00 	mov.b	&0x0019,r15	
    9632:	5f d3       	bis.b	#1,	r15	;r3 As==01
    9634:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    9638:	d2 43 69 00 	mov.b	#1,	&0x0069	;r3 As==01
    963c:	f2 40 81 ff 	mov.b	#-127,	&0x0069	;#0xff81
    9640:	69 00 
    9642:	f2 40 a9 ff 	mov.b	#-87,	&0x0068	;#0xffa9
    9646:	68 00 
    9648:	e2 43 6a 00 	mov.b	#2,	&0x006a	;r3 As==10
    964c:	c2 43 6b 00 	mov.b	#0,	&0x006b	;r3 As==00
    9650:	5f 42 1b 00 	mov.b	&0x001b,r15	
    9654:	7f d0 0e 00 	bis.b	#14,	r15	;#0x000e
    9658:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    965c:	5f 42 69 00 	mov.b	&0x0069,r15	
    9660:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    9664:	c2 4f 69 00 	mov.b	r15,	&0x0069	
    9668:	34 41       	pop	r4		
    966a:	30 41       	ret			

0000966c <spi_clear_rx_IFG>:
    966c:	04 12       	push	r4		
    966e:	04 41       	mov	r1,	r4	
    9670:	24 53       	incd	r4		
    9672:	e2 c2 03 00 	bic.b	#4,	&0x0003	;r2 As==10
    9676:	34 41       	pop	r4		
    9678:	30 41       	ret			

0000967a <spi_tx_rx>:
    967a:	04 12       	push	r4		
    967c:	04 41       	mov	r1,	r4	
    967e:	24 53       	incd	r4		
    9680:	21 82       	sub	#4,	r1	;r2 As==10
    9682:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    9686:	b0 12 6c 96 	call	#0x966c	
    968a:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    968e:	4f 4f       	mov.b	r15,	r15	
    9690:	c2 4f 6f 00 	mov.b	r15,	&0x006f	
    9694:	5f 42 03 00 	mov.b	&0x0003,r15	
    9698:	4f 4f       	mov.b	r15,	r15	
    969a:	2f f2       	and	#4,	r15	;r2 As==10
    969c:	0f 93       	tst	r15		
    969e:	fa 27       	jz	$-10     	;abs 0x9694
    96a0:	5f 42 6e 00 	mov.b	&0x006e,r15	
    96a4:	c4 4f fa ff 	mov.b	r15,	-6(r4)	;0xfffa(r4)
    96a8:	5f 44 fa ff 	mov.b	-6(r4),	r15	;0xfffa(r4)
    96ac:	8f 11       	sxt	r15		
    96ae:	21 52       	add	#4,	r1	;r2 As==10
    96b0:	34 41       	pop	r4		
    96b2:	30 41       	ret			

000096b4 <spi_check_miso_high>:
    96b4:	04 12       	push	r4		
    96b6:	04 41       	mov	r1,	r4	
    96b8:	24 53       	incd	r4		
    96ba:	5f 42 18 00 	mov.b	&0x0018,r15	
    96be:	4f 4f       	mov.b	r15,	r15	
    96c0:	2f f2       	and	#4,	r15	;r2 As==10
    96c2:	34 41       	pop	r4		
    96c4:	30 41       	ret			

000096c6 <spi_tx_burst>:
    96c6:	04 12       	push	r4		
    96c8:	04 41       	mov	r1,	r4	
    96ca:	24 53       	incd	r4		
    96cc:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    96d0:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    96d4:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    96d8:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
    96dc:	11 3c       	jmp	$+36     	;abs 0x9700
    96de:	b0 12 6c 96 	call	#0x966c	
    96e2:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    96e6:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    96ea:	6f 4f       	mov.b	@r15,	r15	
    96ec:	c2 4f 6f 00 	mov.b	r15,	&0x006f	
    96f0:	5f 42 03 00 	mov.b	&0x0003,r15	
    96f4:	4f 4f       	mov.b	r15,	r15	
    96f6:	2f f2       	and	#4,	r15	;r2 As==10
    96f8:	0f 93       	tst	r15		
    96fa:	fa 27       	jz	$-10     	;abs 0x96f0
    96fc:	94 53 f8 ff 	inc	-8(r4)		;0xfff8(r4)
    9700:	94 94 fc ff 	cmp	-4(r4),	-8(r4)	;0xfffc(r4), 0xfff8(r4)
    9704:	f8 ff 
    9706:	eb 3b       	jl	$-40     	;abs 0x96de
    9708:	31 50 06 00 	add	#6,	r1	;#0x0006
    970c:	34 41       	pop	r4		
    970e:	30 41       	ret			

00009710 <spi_rx_burst>:
    9710:	04 12       	push	r4		
    9712:	04 41       	mov	r1,	r4	
    9714:	24 53       	incd	r4		
    9716:	31 50 fa ff 	add	#-6,	r1	;#0xfffa
    971a:	84 4f fa ff 	mov	r15,	-6(r4)	;0xfffa(r4)
    971e:	84 4e fc ff 	mov	r14,	-4(r4)	;0xfffc(r4)
    9722:	84 43 f8 ff 	mov	#0,	-8(r4)	;r3 As==00, 0xfff8(r4)
    9726:	13 3c       	jmp	$+40     	;abs 0x974e
    9728:	f2 40 55 00 	mov.b	#85,	&0x006f	;#0x0055
    972c:	6f 00 
    972e:	5f 42 03 00 	mov.b	&0x0003,r15	
    9732:	4f 4f       	mov.b	r15,	r15	
    9734:	2f f2       	and	#4,	r15	;r2 As==10
    9736:	0f 93       	tst	r15		
    9738:	fa 27       	jz	$-10     	;abs 0x972e
    973a:	1f 44 f8 ff 	mov	-8(r4),	r15	;0xfff8(r4)
    973e:	1f 54 fa ff 	add	-6(r4),	r15	;0xfffa(r4)
    9742:	5e 42 6e 00 	mov.b	&0x006e,r14	
    9746:	cf 4e 00 00 	mov.b	r14,	0(r15)	;0x0000(r15)
    974a:	94 53 f8 ff 	inc	-8(r4)		;0xfff8(r4)
    974e:	94 94 fc ff 	cmp	-4(r4),	-8(r4)	;0xfffc(r4), 0xfff8(r4)
    9752:	f8 ff 
    9754:	e9 3b       	jl	$-44     	;abs 0x9728
    9756:	31 50 06 00 	add	#6,	r1	;#0x0006
    975a:	34 41       	pop	r4		
    975c:	30 41       	ret			

0000975e <spi_select_radio>:
    975e:	04 12       	push	r4		
    9760:	04 41       	mov	r1,	r4	
    9762:	24 53       	incd	r4		
    9764:	5f 42 19 00 	mov.b	&0x0019,r15	
    9768:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    976c:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    9770:	34 41       	pop	r4		
    9772:	30 41       	ret			

00009774 <spi_deselect_radio>:
    9774:	04 12       	push	r4		
    9776:	04 41       	mov	r1,	r4	
    9778:	24 53       	incd	r4		
    977a:	5f 42 19 00 	mov.b	&0x0019,r15	
    977e:	5f d3       	bis.b	#1,	r15	;r3 As==01
    9780:	c2 4f 19 00 	mov.b	r15,	&0x0019	
    9784:	34 41       	pop	r4		
    9786:	30 41       	ret			

00009788 <Timer_A>:
    9788:	0f 12       	push	r15		
    978a:	0e 12       	push	r14		
    978c:	0d 12       	push	r13		
    978e:	0c 12       	push	r12		
    9790:	04 12       	push	r4		
    9792:	04 41       	mov	r1,	r4	
    9794:	34 50 0a 00 	add	#10,	r4	;#0x000a
    9798:	1f 42 2a 02 	mov	&0x022a,r15	
    979c:	0f 93       	tst	r15		
    979e:	03 24       	jz	$+8      	;abs 0x97a6
    97a0:	1f 42 2a 02 	mov	&0x022a,r15	
    97a4:	8f 12       	call	r15		
    97a6:	1f 42 2c 02 	mov	&0x022c,r15	
    97aa:	1f 93       	cmp	#1,	r15	;r3 As==01
    97ac:	03 20       	jnz	$+8      	;abs 0x97b4
    97ae:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    97b2:	00 00 
    97b4:	34 41       	pop	r4		
    97b6:	3c 41       	pop	r12		
    97b8:	3d 41       	pop	r13		
    97ba:	3e 41       	pop	r14		
    97bc:	3f 41       	pop	r15		
    97be:	00 13       	reti			

000097c0 <timerA_init>:
    97c0:	04 12       	push	r4		
    97c2:	04 41       	mov	r1,	r4	
    97c4:	24 53       	incd	r4		
    97c6:	82 43 2a 02 	mov	#0,	&0x022a	;r3 As==00
    97ca:	82 43 2c 02 	mov	#0,	&0x022c	;r3 As==00
    97ce:	b0 12 5e 98 	call	#0x985e	
    97d2:	34 41       	pop	r4		
    97d4:	30 41       	ret			

000097d6 <timerA_register_cb>:
    97d6:	04 12       	push	r4		
    97d8:	04 41       	mov	r1,	r4	
    97da:	24 53       	incd	r4		
    97dc:	21 83       	decd	r1		
    97de:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    97e2:	92 44 fc ff 	mov	-4(r4),	&0x022a	;0xfffc(r4)
    97e6:	2a 02 
    97e8:	21 53       	incd	r1		
    97ea:	34 41       	pop	r4		
    97ec:	30 41       	ret			

000097ee <timerA_set_wakeup>:
    97ee:	04 12       	push	r4		
    97f0:	04 41       	mov	r1,	r4	
    97f2:	24 53       	incd	r4		
    97f4:	21 83       	decd	r1		
    97f6:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    97fa:	92 44 fc ff 	mov	-4(r4),	&0x022c	;0xfffc(r4)
    97fe:	2c 02 
    9800:	21 53       	incd	r1		
    9802:	34 41       	pop	r4		
    9804:	30 41       	ret			

00009806 <timerA_start_ticks>:
    9806:	04 12       	push	r4		
    9808:	04 41       	mov	r1,	r4	
    980a:	24 53       	incd	r4		
    980c:	21 83       	decd	r1		
    980e:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    9812:	5f 42 53 00 	mov.b	&0x0053,r15	
    9816:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    981a:	c2 4f 53 00 	mov.b	r15,	&0x0053	
    981e:	b2 40 10 00 	mov	#16,	&0x0162	;#0x0010
    9822:	62 01 
    9824:	82 43 70 01 	mov	#0,	&0x0170	;r3 As==00
    9828:	92 44 fc ff 	mov	-4(r4),	&0x0172	;0xfffc(r4)
    982c:	72 01 
    982e:	b2 40 10 01 	mov	#272,	&0x0160	;#0x0110
    9832:	60 01 
    9834:	21 53       	incd	r1		
    9836:	34 41       	pop	r4		
    9838:	30 41       	ret			

0000983a <timerA_start_milliseconds>:
    983a:	04 12       	push	r4		
    983c:	04 41       	mov	r1,	r4	
    983e:	24 53       	incd	r4		
    9840:	21 83       	decd	r1		
    9842:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    9846:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    984a:	0f 4e       	mov	r14,	r15	
    984c:	0f 5f       	rla	r15		
    984e:	0f 5e       	add	r14,	r15	
    9850:	0f 5f       	rla	r15		
    9852:	0f 5f       	rla	r15		
    9854:	b0 12 06 98 	call	#0x9806	
    9858:	21 53       	incd	r1		
    985a:	34 41       	pop	r4		
    985c:	30 41       	ret			

0000985e <timerA_stop>:
    985e:	04 12       	push	r4		
    9860:	04 41       	mov	r1,	r4	
    9862:	24 53       	incd	r4		
    9864:	82 43 60 01 	mov	#0,	&0x0160	;r3 As==00
    9868:	34 41       	pop	r4		
    986a:	30 41       	ret			

0000986c <Timer_B>:
    986c:	0f 12       	push	r15		
    986e:	0e 12       	push	r14		
    9870:	0d 12       	push	r13		
    9872:	0c 12       	push	r12		
    9874:	04 12       	push	r4		
    9876:	04 41       	mov	r1,	r4	
    9878:	34 50 0a 00 	add	#10,	r4	;#0x000a
    987c:	1f 42 2e 02 	mov	&0x022e,r15	
    9880:	0f 93       	tst	r15		
    9882:	03 24       	jz	$+8      	;abs 0x988a
    9884:	1f 42 2e 02 	mov	&0x022e,r15	
    9888:	8f 12       	call	r15		
    988a:	1f 42 30 02 	mov	&0x0230,r15	
    988e:	1f 93       	cmp	#1,	r15	;r3 As==01
    9890:	03 20       	jnz	$+8      	;abs 0x9898
    9892:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    9896:	00 00 
    9898:	34 41       	pop	r4		
    989a:	3c 41       	pop	r12		
    989c:	3d 41       	pop	r13		
    989e:	3e 41       	pop	r14		
    98a0:	3f 41       	pop	r15		
    98a2:	00 13       	reti			

000098a4 <timerB_init>:
    98a4:	04 12       	push	r4		
    98a6:	04 41       	mov	r1,	r4	
    98a8:	24 53       	incd	r4		
    98aa:	82 43 2e 02 	mov	#0,	&0x022e	;r3 As==00
    98ae:	82 43 30 02 	mov	#0,	&0x0230	;r3 As==00
    98b2:	b0 12 42 99 	call	#0x9942	
    98b6:	34 41       	pop	r4		
    98b8:	30 41       	ret			

000098ba <timerB_register_cb>:
    98ba:	04 12       	push	r4		
    98bc:	04 41       	mov	r1,	r4	
    98be:	24 53       	incd	r4		
    98c0:	21 83       	decd	r1		
    98c2:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    98c6:	92 44 fc ff 	mov	-4(r4),	&0x022e	;0xfffc(r4)
    98ca:	2e 02 
    98cc:	21 53       	incd	r1		
    98ce:	34 41       	pop	r4		
    98d0:	30 41       	ret			

000098d2 <timerB_set_wakeup>:
    98d2:	04 12       	push	r4		
    98d4:	04 41       	mov	r1,	r4	
    98d6:	24 53       	incd	r4		
    98d8:	21 83       	decd	r1		
    98da:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    98de:	92 44 fc ff 	mov	-4(r4),	&0x0230	;0xfffc(r4)
    98e2:	30 02 
    98e4:	21 53       	incd	r1		
    98e6:	34 41       	pop	r4		
    98e8:	30 41       	ret			

000098ea <timerB_start_ticks>:
    98ea:	04 12       	push	r4		
    98ec:	04 41       	mov	r1,	r4	
    98ee:	24 53       	incd	r4		
    98f0:	21 83       	decd	r1		
    98f2:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    98f6:	5f 42 53 00 	mov.b	&0x0053,r15	
    98fa:	7f d0 20 00 	bis.b	#32,	r15	;#0x0020
    98fe:	c2 4f 53 00 	mov.b	r15,	&0x0053	
    9902:	b2 40 10 00 	mov	#16,	&0x0182	;#0x0010
    9906:	82 01 
    9908:	82 43 90 01 	mov	#0,	&0x0190	;r3 As==00
    990c:	92 44 fc ff 	mov	-4(r4),	&0x0192	;0xfffc(r4)
    9910:	92 01 
    9912:	b2 40 10 01 	mov	#272,	&0x0180	;#0x0110
    9916:	80 01 
    9918:	21 53       	incd	r1		
    991a:	34 41       	pop	r4		
    991c:	30 41       	ret			

0000991e <timerB_start_milliseconds>:
    991e:	04 12       	push	r4		
    9920:	04 41       	mov	r1,	r4	
    9922:	24 53       	incd	r4		
    9924:	21 83       	decd	r1		
    9926:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    992a:	1e 44 fc ff 	mov	-4(r4),	r14	;0xfffc(r4)
    992e:	0f 4e       	mov	r14,	r15	
    9930:	0f 5f       	rla	r15		
    9932:	0f 5e       	add	r14,	r15	
    9934:	0f 5f       	rla	r15		
    9936:	0f 5f       	rla	r15		
    9938:	b0 12 ea 98 	call	#0x98ea	
    993c:	21 53       	incd	r1		
    993e:	34 41       	pop	r4		
    9940:	30 41       	ret			

00009942 <timerB_stop>:
    9942:	04 12       	push	r4		
    9944:	04 41       	mov	r1,	r4	
    9946:	24 53       	incd	r4		
    9948:	82 43 80 01 	mov	#0,	&0x0180	;r3 As==00
    994c:	34 41       	pop	r4		
    994e:	30 41       	ret			

00009950 <uart_init>:
    9950:	04 12       	push	r4		
    9952:	04 41       	mov	r1,	r4	
    9954:	24 53       	incd	r4		
    9956:	21 83       	decd	r1		
    9958:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    995c:	5f 42 1b 00 	mov.b	&0x001b,r15	
    9960:	7f d0 30 00 	bis.b	#48,	r15	;#0x0030
    9964:	c2 4f 1b 00 	mov.b	r15,	&0x001b	
    9968:	5f 42 1a 00 	mov.b	&0x001a,r15	
    996c:	7f d0 10 00 	bis.b	#16,	r15	;#0x0010
    9970:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    9974:	5f 42 1a 00 	mov.b	&0x001a,r15	
    9978:	7f f0 df ff 	and.b	#-33,	r15	;#0xffdf
    997c:	c2 4f 1a 00 	mov.b	r15,	&0x001a	
    9980:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    9984:	1f 93       	cmp	#1,	r15	;r3 As==01
    9986:	03 24       	jz	$+8      	;abs 0x998e
    9988:	3f 92       	cmp	#8,	r15	;r2 As==11
    998a:	12 24       	jz	$+38     	;abs 0x99b0
    998c:	23 3c       	jmp	$+72     	;abs 0x99d4
    998e:	f2 40 80 ff 	mov.b	#-128,	&0x0061	;#0xff80
    9992:	61 00 
    9994:	f2 40 68 00 	mov.b	#104,	&0x0062	;#0x0068
    9998:	62 00 
    999a:	c2 43 63 00 	mov.b	#0,	&0x0063	;r3 As==00
    999e:	e2 42 64 00 	mov.b	#4,	&0x0064	;r2 As==10
    99a2:	5f 42 61 00 	mov.b	&0x0061,r15	
    99a6:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    99aa:	c2 4f 61 00 	mov.b	r15,	&0x0061	
    99ae:	13 3c       	jmp	$+40     	;abs 0x99d6
    99b0:	f2 40 80 ff 	mov.b	#-128,	&0x0061	;#0xff80
    99b4:	61 00 
    99b6:	f2 40 41 00 	mov.b	#65,	&0x0062	;#0x0041
    99ba:	62 00 
    99bc:	f2 40 03 00 	mov.b	#3,	&0x0063	;#0x0003
    99c0:	63 00 
    99c2:	e2 42 64 00 	mov.b	#4,	&0x0064	;r2 As==10
    99c6:	5f 42 61 00 	mov.b	&0x0061,r15	
    99ca:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    99ce:	c2 4f 61 00 	mov.b	r15,	&0x0061	
    99d2:	01 3c       	jmp	$+4      	;abs 0x99d6
    99d4:	03 43       	nop			
    99d6:	82 43 32 02 	mov	#0,	&0x0232	;r3 As==00
    99da:	21 53       	incd	r1		
    99dc:	34 41       	pop	r4		
    99de:	30 41       	ret			

000099e0 <uart_stop>:
    99e0:	04 12       	push	r4		
    99e2:	04 41       	mov	r1,	r4	
    99e4:	24 53       	incd	r4		
    99e6:	34 41       	pop	r4		
    99e8:	30 41       	ret			

000099ea <putchar>:
    99ea:	04 12       	push	r4		
    99ec:	04 41       	mov	r1,	r4	
    99ee:	24 53       	incd	r4		
    99f0:	21 83       	decd	r1		
    99f2:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    99f6:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    99fa:	4f 4f       	mov.b	r15,	r15	
    99fc:	c2 4f 67 00 	mov.b	r15,	&0x0067	
    9a00:	03 43       	nop			
    9a02:	5f 42 03 00 	mov.b	&0x0003,r15	
    9a06:	4f 4f       	mov.b	r15,	r15	
    9a08:	2f f3       	and	#2,	r15	;r3 As==10
    9a0a:	0f 93       	tst	r15		
    9a0c:	fa 27       	jz	$-10     	;abs 0x9a02
    9a0e:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    9a12:	4f 4f       	mov.b	r15,	r15	
    9a14:	4f 4f       	mov.b	r15,	r15	
    9a16:	21 53       	incd	r1		
    9a18:	34 41       	pop	r4		
    9a1a:	30 41       	ret			

00009a1c <uart_getchar>:
    9a1c:	04 12       	push	r4		
    9a1e:	04 41       	mov	r1,	r4	
    9a20:	24 53       	incd	r4		
    9a22:	21 83       	decd	r1		
    9a24:	5f 42 66 00 	mov.b	&0x0066,r15	
    9a28:	c4 4f fc ff 	mov.b	r15,	-4(r4)	;0xfffc(r4)
    9a2c:	c4 43 fd ff 	mov.b	#0,	-3(r4)	;r3 As==00, 0xfffd(r4)
    9a30:	1f 44 fc ff 	mov	-4(r4),	r15	;0xfffc(r4)
    9a34:	21 53       	incd	r1		
    9a36:	34 41       	pop	r4		
    9a38:	30 41       	ret			

00009a3a <uart_eint>:
    9a3a:	04 12       	push	r4		
    9a3c:	04 41       	mov	r1,	r4	
    9a3e:	24 53       	incd	r4		
    9a40:	5f 42 01 00 	mov.b	&0x0001,r15	
    9a44:	5f d3       	bis.b	#1,	r15	;r3 As==01
    9a46:	c2 4f 01 00 	mov.b	r15,	&0x0001	
    9a4a:	34 41       	pop	r4		
    9a4c:	30 41       	ret			

00009a4e <uart_dint>:
    9a4e:	04 12       	push	r4		
    9a50:	04 41       	mov	r1,	r4	
    9a52:	24 53       	incd	r4		
    9a54:	5f 42 01 00 	mov.b	&0x0001,r15	
    9a58:	7f f0 fe ff 	and.b	#-2,	r15	;#0xfffe
    9a5c:	c2 4f 01 00 	mov.b	r15,	&0x0001	
    9a60:	34 41       	pop	r4		
    9a62:	30 41       	ret			

00009a64 <uart_register_cb>:
    9a64:	04 12       	push	r4		
    9a66:	04 41       	mov	r1,	r4	
    9a68:	24 53       	incd	r4		
    9a6a:	21 83       	decd	r1		
    9a6c:	84 4f fc ff 	mov	r15,	-4(r4)	;0xfffc(r4)
    9a70:	92 44 fc ff 	mov	-4(r4),	&0x0232	;0xfffc(r4)
    9a74:	32 02 
    9a76:	84 93 fc ff 	tst	-4(r4)		;0xfffc(r4)
    9a7a:	03 20       	jnz	$+8      	;abs 0x9a82
    9a7c:	b0 12 4e 9a 	call	#0x9a4e	
    9a80:	02 3c       	jmp	$+6      	;abs 0x9a86
    9a82:	b0 12 3a 9a 	call	#0x9a3a	
    9a86:	21 53       	incd	r1		
    9a88:	34 41       	pop	r4		
    9a8a:	30 41       	ret			

00009a8c <usart0irq>:
    9a8c:	0f 12       	push	r15		
    9a8e:	0e 12       	push	r14		
    9a90:	0d 12       	push	r13		
    9a92:	0c 12       	push	r12		
    9a94:	04 12       	push	r4		
    9a96:	04 41       	mov	r1,	r4	
    9a98:	34 50 0a 00 	add	#10,	r4	;#0x000a
    9a9c:	21 83       	decd	r1		
    9a9e:	5f 42 65 00 	mov.b	&0x0065,r15	
    9aa2:	4f 4f       	mov.b	r15,	r15	
    9aa4:	2f f2       	and	#4,	r15	;r2 As==10
    9aa6:	0f 93       	tst	r15		
    9aa8:	0a 24       	jz	$+22     	;abs 0x9abe
    9aaa:	5f 42 66 00 	mov.b	&0x0066,r15	
    9aae:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    9ab2:	5f 44 f4 ff 	mov.b	-12(r4),r15	;0xfff4(r4)
    9ab6:	5f 53       	inc.b	r15		
    9ab8:	c4 4f f4 ff 	mov.b	r15,	-12(r4)	;0xfff4(r4)
    9abc:	0a 3c       	jmp	$+22     	;abs 0x9ad2
    9abe:	1e 42 32 02 	mov	&0x0232,r14	
    9ac2:	5f 42 66 00 	mov.b	&0x0066,r15	
    9ac6:	8e 12       	call	r14		
    9ac8:	0f 93       	tst	r15		
    9aca:	03 24       	jz	$+8      	;abs 0x9ad2
    9acc:	b4 c0 f0 00 	bic	#240,	0(r4)	;#0x00f0, 0x0000(r4)
    9ad0:	00 00 
    9ad2:	21 53       	incd	r1		
    9ad4:	34 41       	pop	r4		
    9ad6:	3c 41       	pop	r12		
    9ad8:	3d 41       	pop	r13		
    9ada:	3e 41       	pop	r14		
    9adc:	3f 41       	pop	r15		
    9ade:	00 13       	reti			

00009ae0 <watchdog_stop>:
    9ae0:	04 12       	push	r4		
    9ae2:	04 41       	mov	r1,	r4	
    9ae4:	24 53       	incd	r4		
    9ae6:	1f 42 20 01 	mov	&0x0120,r15	
    9aea:	3f f0 ff 00 	and	#255,	r15	;#0x00ff
    9aee:	82 4f 34 02 	mov	r15,	&0x0234	
    9af2:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
    9af6:	20 01 
    9af8:	34 41       	pop	r4		
    9afa:	30 41       	ret			

00009afc <watchdog_restore>:
    9afc:	04 12       	push	r4		
    9afe:	04 41       	mov	r1,	r4	
    9b00:	24 53       	incd	r4		
    9b02:	1f 42 34 02 	mov	&0x0234,r15	
    9b06:	3f d0 00 5a 	bis	#23040,	r15	;#0x5a00
    9b0a:	82 4f 20 01 	mov	r15,	&0x0120	
    9b0e:	34 41       	pop	r4		
    9b10:	30 41       	ret			

00009b12 <__mulsi3>:
    9b12:	0b 12       	push	r11		
    9b14:	0a 12       	push	r10		
    9b16:	0b 43       	clr	r11		
    9b18:	0a 43       	clr	r10		
    9b1a:	08 3c       	jmp	$+18     	;abs 0x9b2c
    9b1c:	12 c3       	clrc			
    9b1e:	0d 10       	rrc	r13		
    9b20:	0c 10       	rrc	r12		
    9b22:	02 28       	jnc	$+6      	;abs 0x9b28
    9b24:	0a 5e       	add	r14,	r10	
    9b26:	0b 6f       	addc	r15,	r11	
    9b28:	0e 5e       	rla	r14		
    9b2a:	0f 6f       	rlc	r15		
    9b2c:	0c 93       	tst	r12		
    9b2e:	f6 23       	jnz	$-18     	;abs 0x9b1c
    9b30:	0d 93       	tst	r13		
    9b32:	f4 23       	jnz	$-22     	;abs 0x9b1c
    9b34:	0e 4a       	mov	r10,	r14	
    9b36:	0f 4b       	mov	r11,	r15	
    9b38:	3a 41       	pop	r10		
    9b3a:	3b 41       	pop	r11		
    9b3c:	30 41       	ret			

00009b3e <__divhi3>:
    9b3e:	0d 43       	clr	r13		
    9b40:	0f 93       	tst	r15		
    9b42:	04 34       	jge	$+10     	;abs 0x9b4c
    9b44:	3d 40 03 00 	mov	#3,	r13	;#0x0003
    9b48:	3f e3       	inv	r15		
    9b4a:	1f 53       	inc	r15		
    9b4c:	0e 93       	tst	r14		
    9b4e:	03 34       	jge	$+8      	;abs 0x9b56
    9b50:	5d e3       	xor.b	#1,	r13	;r3 As==01
    9b52:	3e e3       	inv	r14		
    9b54:	1e 53       	inc	r14		
    9b56:	0d 12       	push	r13		
    9b58:	b0 12 78 9b 	call	#0x9b78	
    9b5c:	3d 41       	pop	r13		
    9b5e:	6d b3       	bit.b	#2,	r13	;r3 As==10
    9b60:	02 24       	jz	$+6      	;abs 0x9b66
    9b62:	3e e3       	inv	r14		
    9b64:	1e 53       	inc	r14		
    9b66:	5d b3       	bit.b	#1,	r13	;r3 As==01
    9b68:	02 24       	jz	$+6      	;abs 0x9b6e
    9b6a:	3f e3       	inv	r15		
    9b6c:	1f 53       	inc	r15		
    9b6e:	30 41       	ret			

00009b70 <__modhi3>:
    9b70:	b0 12 3e 9b 	call	#0x9b3e	
    9b74:	0f 4e       	mov	r14,	r15	
    9b76:	30 41       	ret			

00009b78 <__udivhi3>:
    9b78:	7c 40 10 00 	mov.b	#16,	r12	;#0x0010
    9b7c:	0d 4e       	mov	r14,	r13	
    9b7e:	0e 43       	clr	r14		
    9b80:	0f 5f       	rla	r15		
    9b82:	0e 6e       	rlc	r14		
    9b84:	0e 9d       	cmp	r13,	r14	
    9b86:	02 28       	jnc	$+6      	;abs 0x9b8c
    9b88:	0e 8d       	sub	r13,	r14	
    9b8a:	1f d3       	bis	#1,	r15	;r3 As==01
    9b8c:	1c 83       	dec	r12		
    9b8e:	f8 23       	jnz	$-14     	;abs 0x9b80
    9b90:	30 41       	ret			

00009b92 <__umodhi3>:
    9b92:	b0 12 78 9b 	call	#0x9b78	
    9b96:	0f 4e       	mov	r14,	r15	
    9b98:	30 41       	ret			

00009b9a <printf>:
    9b9a:	0d 41       	mov	r1,	r13	
    9b9c:	2d 53       	incd	r13		
    9b9e:	3e 4d       	mov	@r13+,	r14	
    9ba0:	3f 40 ea 99 	mov	#-26134,r15	;#0x99ea
    9ba4:	b0 12 50 9d 	call	#0x9d50	
    9ba8:	30 41       	ret			

00009baa <vprintf>:
    9baa:	0d 4e       	mov	r14,	r13	
    9bac:	0e 4f       	mov	r15,	r14	
    9bae:	3f 40 ea 99 	mov	#-26134,r15	;#0x99ea
    9bb2:	b0 12 50 9d 	call	#0x9d50	
    9bb6:	30 41       	ret			

00009bb8 <print_field>:
    9bb8:	0b 12       	push	r11		
    9bba:	0a 12       	push	r10		
    9bbc:	09 12       	push	r9		
    9bbe:	08 12       	push	r8		
    9bc0:	07 12       	push	r7		
    9bc2:	06 12       	push	r6		
    9bc4:	05 12       	push	r5		
    9bc6:	04 12       	push	r4		
    9bc8:	31 82       	sub	#8,	r1	;r2 As==11
    9bca:	08 4f       	mov	r15,	r8	
    9bcc:	81 4e 04 00 	mov	r14,	4(r1)	;0x0004(r1)
    9bd0:	09 4d       	mov	r13,	r9	
    9bd2:	1f 41 1a 00 	mov	26(r1),	r15	;0x001a(r1)
    9bd6:	1d 41 1c 00 	mov	28(r1),	r13	;0x001c(r1)
    9bda:	4c 4d       	mov.b	r13,	r12	
    9bdc:	04 4d       	mov	r13,	r4	
    9bde:	84 10       	swpb	r4		
    9be0:	45 44       	mov.b	r4,	r5	
    9be2:	4e 4f       	mov.b	r15,	r14	
    9be4:	7e b0 40 00 	bit.b	#64,	r14	;#0x0040
    9be8:	11 24       	jz	$+36     	;abs 0x9c0c
    9bea:	f1 40 30 00 	mov.b	#48,	0(r1)	;#0x0030, 0x0000(r1)
    9bee:	00 00 
    9bf0:	0e 4f       	mov	r15,	r14	
    9bf2:	8e 10       	swpb	r14		
    9bf4:	5e f3       	and.b	#1,	r14	;r3 As==01
    9bf6:	03 24       	jz	$+8      	;abs 0x9bfe
    9bf8:	7e 40 58 00 	mov.b	#88,	r14	;#0x0058
    9bfc:	02 3c       	jmp	$+6      	;abs 0x9c02
    9bfe:	7e 40 78 00 	mov.b	#120,	r14	;#0x0078
    9c02:	c1 4e 01 00 	mov.b	r14,	1(r1)	;0x0001(r1)
    9c06:	0c 41       	mov	r1,	r12	
    9c08:	2c 53       	incd	r12		
    9c0a:	0f 3c       	jmp	$+32     	;abs 0x9c2a
    9c0c:	7e f0 20 00 	and.b	#32,	r14	;#0x0020
    9c10:	04 24       	jz	$+10     	;abs 0x9c1a
    9c12:	f1 40 30 00 	mov.b	#48,	0(r1)	;#0x0030, 0x0000(r1)
    9c16:	00 00 
    9c18:	04 3c       	jmp	$+10     	;abs 0x9c22
    9c1a:	4c 93       	tst.b	r12		
    9c1c:	05 24       	jz	$+12     	;abs 0x9c28
    9c1e:	c1 4d 00 00 	mov.b	r13,	0(r1)	;0x0000(r1)
    9c22:	0c 41       	mov	r1,	r12	
    9c24:	1c 53       	inc	r12		
    9c26:	01 3c       	jmp	$+4      	;abs 0x9c2a
    9c28:	0c 41       	mov	r1,	r12	
    9c2a:	0a 4c       	mov	r12,	r10	
    9c2c:	8c 10       	swpb	r12		
    9c2e:	8c 11       	sxt	r12		
    9c30:	8c 10       	swpb	r12		
    9c32:	8c 11       	sxt	r12		
    9c34:	0b 4c       	mov	r12,	r11	
    9c36:	06 41       	mov	r1,	r6	
    9c38:	0c 41       	mov	r1,	r12	
    9c3a:	8c 10       	swpb	r12		
    9c3c:	8c 11       	sxt	r12		
    9c3e:	8c 10       	swpb	r12		
    9c40:	8c 11       	sxt	r12		
    9c42:	07 4c       	mov	r12,	r7	
    9c44:	0a 86       	sub	r6,	r10	
    9c46:	0b 77       	subc	r7,	r11	
    9c48:	0e 4f       	mov	r15,	r14	
    9c4a:	8e 10       	swpb	r14		
    9c4c:	c1 4e 02 00 	mov.b	r14,	2(r1)	;0x0002(r1)
    9c50:	6e f2       	and.b	#4,	r14	;r2 As==10
    9c52:	02 24       	jz	$+6      	;abs 0x9c58
    9c54:	07 45       	mov	r5,	r7	
    9c56:	01 3c       	jmp	$+4      	;abs 0x9c5a
    9c58:	37 43       	mov	#-1,	r7	;r3 As==11
    9c5a:	4f 4f       	mov.b	r15,	r15	
    9c5c:	7f b0 10 00 	bit.b	#16,	r15	;#0x0010
    9c60:	3c 20       	jnz	$+122    	;abs 0x9cda
    9c62:	1d 41 04 00 	mov	4(r1),	r13	;0x0004(r1)
    9c66:	3d 53       	add	#-1,	r13	;r3 As==11
    9c68:	1d 53       	inc	r13		
    9c6a:	cd 93 00 00 	tst.b	0(r13)		;0x0000(r13)
    9c6e:	fc 23       	jnz	$-6      	;abs 0x9c68
    9c70:	1d 81 04 00 	sub	4(r1),	r13	;0x0004(r1)
    9c74:	09 9a       	cmp	r10,	r9	
    9c76:	02 28       	jnc	$+6      	;abs 0x9c7c
    9c78:	09 8a       	sub	r10,	r9	
    9c7a:	01 3c       	jmp	$+4      	;abs 0x9c7e
    9c7c:	09 43       	clr	r9		
    9c7e:	e1 b3 02 00 	bit.b	#2,	2(r1)	;r3 As==10, 0x0002(r1)
    9c82:	05 24       	jz	$+12     	;abs 0x9c8e
    9c84:	09 95       	cmp	r5,	r9	
    9c86:	02 28       	jnc	$+6      	;abs 0x9c8c
    9c88:	09 85       	sub	r5,	r9	
    9c8a:	01 3c       	jmp	$+4      	;abs 0x9c8e
    9c8c:	09 43       	clr	r9		
    9c8e:	05 4d       	mov	r13,	r5	
    9c90:	07 9d       	cmp	r13,	r7	
    9c92:	01 2c       	jc	$+4      	;abs 0x9c96
    9c94:	05 47       	mov	r7,	r5	
    9c96:	4f 93       	tst.b	r15		
    9c98:	0d 38       	jl	$+28     	;abs 0x9cb4
    9c9a:	f1 40 20 00 	mov.b	#32,	6(r1)	;#0x0020, 0x0006(r1)
    9c9e:	06 00 
    9ca0:	06 43       	clr	r6		
    9ca2:	0b 43       	clr	r11		
    9ca4:	0e 3c       	jmp	$+30     	;abs 0x9cc2
    9ca6:	0f 41       	mov	r1,	r15	
    9ca8:	0f 56       	add	r6,	r15	
    9caa:	6f 4f       	mov.b	@r15,	r15	
    9cac:	8f 11       	sxt	r15		
    9cae:	16 53       	inc	r6		
    9cb0:	88 12       	call	r8		
    9cb2:	01 3c       	jmp	$+4      	;abs 0x9cb6
    9cb4:	06 43       	clr	r6		
    9cb6:	06 9a       	cmp	r10,	r6	
    9cb8:	f6 3b       	jl	$-18     	;abs 0x9ca6
    9cba:	0b 4a       	mov	r10,	r11	
    9cbc:	f1 40 30 00 	mov.b	#48,	6(r1)	;#0x0030, 0x0006(r1)
    9cc0:	06 00 
    9cc2:	05 8b       	sub	r11,	r5	
    9cc4:	05 3c       	jmp	$+12     	;abs 0x9cd0
    9cc6:	5f 41 06 00 	mov.b	6(r1),	r15	;0x0006(r1)
    9cca:	8f 11       	sxt	r15		
    9ccc:	88 12       	call	r8		
    9cce:	1b 53       	inc	r11		
    9cd0:	0f 45       	mov	r5,	r15	
    9cd2:	0f 5b       	add	r11,	r15	
    9cd4:	0f 99       	cmp	r9,	r15	
    9cd6:	f7 2b       	jnc	$-16     	;abs 0x9cc6
    9cd8:	0a 3c       	jmp	$+22     	;abs 0x9cee
    9cda:	06 43       	clr	r6		
    9cdc:	0b 43       	clr	r11		
    9cde:	07 3c       	jmp	$+16     	;abs 0x9cee
    9ce0:	1b 53       	inc	r11		
    9ce2:	0f 41       	mov	r1,	r15	
    9ce4:	0f 56       	add	r6,	r15	
    9ce6:	6f 4f       	mov.b	@r15,	r15	
    9ce8:	8f 11       	sxt	r15		
    9cea:	16 53       	inc	r6		
    9cec:	88 12       	call	r8		
    9cee:	06 9a       	cmp	r10,	r6	
    9cf0:	f7 3b       	jl	$-16     	;abs 0x9ce0
    9cf2:	e1 b3 02 00 	bit.b	#2,	2(r1)	;r3 As==10, 0x0002(r1)
    9cf6:	02 24       	jz	$+6      	;abs 0x9cfc
    9cf8:	4a 44       	mov.b	r4,	r10	
    9cfa:	08 3c       	jmp	$+18     	;abs 0x9d0c
    9cfc:	1a 41 04 00 	mov	4(r1),	r10	;0x0004(r1)
    9d00:	0a 8b       	sub	r11,	r10	
    9d02:	0d 3c       	jmp	$+28     	;abs 0x9d1e
    9d04:	3f 40 30 00 	mov	#48,	r15	;#0x0030
    9d08:	88 12       	call	r8		
    9d0a:	7a 53       	add.b	#-1,	r10	;r3 As==11
    9d0c:	4a 93       	tst.b	r10		
    9d0e:	fa 23       	jnz	$-10     	;abs 0x9d04
    9d10:	44 44       	mov.b	r4,	r4	
    9d12:	0b 54       	add	r4,	r11	
    9d14:	f3 3f       	jmp	$-24     	;abs 0x9cfc
    9d16:	37 53       	add	#-1,	r7	;r3 As==11
    9d18:	8f 11       	sxt	r15		
    9d1a:	88 12       	call	r8		
    9d1c:	1b 53       	inc	r11		
    9d1e:	0f 4a       	mov	r10,	r15	
    9d20:	0f 5b       	add	r11,	r15	
    9d22:	6f 4f       	mov.b	@r15,	r15	
    9d24:	4f 93       	tst.b	r15		
    9d26:	07 24       	jz	$+16     	;abs 0x9d36
    9d28:	07 93       	tst	r7		
    9d2a:	f5 23       	jnz	$-20     	;abs 0x9d16
    9d2c:	04 3c       	jmp	$+10     	;abs 0x9d36
    9d2e:	3f 40 20 00 	mov	#32,	r15	;#0x0020
    9d32:	88 12       	call	r8		
    9d34:	1b 53       	inc	r11		
    9d36:	0b 99       	cmp	r9,	r11	
    9d38:	fa 2b       	jnc	$-10     	;abs 0x9d2e
    9d3a:	0f 4b       	mov	r11,	r15	
    9d3c:	31 52       	add	#8,	r1	;r2 As==11
    9d3e:	34 41       	pop	r4		
    9d40:	35 41       	pop	r5		
    9d42:	36 41       	pop	r6		
    9d44:	37 41       	pop	r7		
    9d46:	38 41       	pop	r8		
    9d48:	39 41       	pop	r9		
    9d4a:	3a 41       	pop	r10		
    9d4c:	3b 41       	pop	r11		
    9d4e:	30 41       	ret			

00009d50 <vuprintf>:
    9d50:	0b 12       	push	r11		
    9d52:	0a 12       	push	r10		
    9d54:	09 12       	push	r9		
    9d56:	08 12       	push	r8		
    9d58:	07 12       	push	r7		
    9d5a:	06 12       	push	r6		
    9d5c:	05 12       	push	r5		
    9d5e:	04 12       	push	r4		
    9d60:	31 50 b6 ff 	add	#-74,	r1	;#0xffb6
    9d64:	81 4f 3a 00 	mov	r15,	58(r1)	;0x003a(r1)
    9d68:	06 4e       	mov	r14,	r6	
    9d6a:	05 4d       	mov	r13,	r5	
    9d6c:	81 4e 3e 00 	mov	r14,	62(r1)	;0x003e(r1)
    9d70:	c1 43 2f 00 	mov.b	#0,	47(r1)	;r3 As==00, 0x002f(r1)
    9d74:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    9d78:	c1 43 2e 00 	mov.b	#0,	46(r1)	;r3 As==00, 0x002e(r1)
    9d7c:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    9d80:	81 43 30 00 	mov	#0,	48(r1)	;r3 As==00, 0x0030(r1)
    9d84:	81 43 26 00 	mov	#0,	38(r1)	;r3 As==00, 0x0026(r1)
    9d88:	07 43       	clr	r7		
    9d8a:	81 43 2c 00 	mov	#0,	44(r1)	;r3 As==00, 0x002c(r1)
    9d8e:	0e 41       	mov	r1,	r14	
    9d90:	3e 50 1c 00 	add	#28,	r14	;#0x001c
    9d94:	81 4e 1c 00 	mov	r14,	28(r1)	;0x001c(r1)
    9d98:	30 40 ca a3 	br	#0xa3ca	
    9d9c:	0f 46       	mov	r6,	r15	
    9d9e:	1f 53       	inc	r15		
    9da0:	81 4f 40 00 	mov	r15,	64(r1)	;0x0040(r1)
    9da4:	07 93       	tst	r7		
    9da6:	1e 20       	jnz	$+62     	;abs 0x9de4
    9da8:	7e 90 25 00 	cmp.b	#37,	r14	;#0x0025
    9dac:	13 20       	jnz	$+40     	;abs 0x9dd4
    9dae:	81 43 00 00 	mov	#0,	0(r1)	;r3 As==00, 0x0000(r1)
    9db2:	81 43 02 00 	mov	#0,	2(r1)	;r3 As==00, 0x0002(r1)
    9db6:	81 46 3e 00 	mov	r6,	62(r1)	;0x003e(r1)
    9dba:	c1 43 2f 00 	mov.b	#0,	47(r1)	;r3 As==00, 0x002f(r1)
    9dbe:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    9dc2:	c1 43 2e 00 	mov.b	#0,	46(r1)	;r3 As==00, 0x002e(r1)
    9dc6:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    9dca:	81 43 30 00 	mov	#0,	48(r1)	;r3 As==00, 0x0030(r1)
    9dce:	30 40 c0 a3 	br	#0xa3c0	
    9dd2:	05 47       	mov	r7,	r5	
    9dd4:	8e 11       	sxt	r14		
    9dd6:	0f 4e       	mov	r14,	r15	
    9dd8:	91 12 3c 00 	call	60(r1)		;0x003c(r1)
    9ddc:	91 53 2c 00 	inc	44(r1)		;0x002c(r1)
    9de0:	30 40 a6 a3 	br	#0xa3a6	
    9de4:	7e 90 63 00 	cmp.b	#99,	r14	;#0x0063
    9de8:	c5 24       	jz	$+396    	;abs 0x9f74
    9dea:	7e 90 64 00 	cmp.b	#100,	r14	;#0x0064
    9dee:	27 34       	jge	$+80     	;abs 0x9e3e
    9df0:	7e 90 30 00 	cmp.b	#48,	r14	;#0x0030
    9df4:	94 24       	jz	$+298    	;abs 0x9f1e
    9df6:	7e 90 31 00 	cmp.b	#49,	r14	;#0x0031
    9dfa:	1a 34       	jge	$+54     	;abs 0x9e30
    9dfc:	7e 90 2a 00 	cmp.b	#42,	r14	;#0x002a
    9e00:	77 24       	jz	$+240    	;abs 0x9ef0
    9e02:	7e 90 2b 00 	cmp.b	#43,	r14	;#0x002b
    9e06:	0a 34       	jge	$+22     	;abs 0x9e1c
    9e08:	7e 90 23 00 	cmp.b	#35,	r14	;#0x0023
    9e0c:	42 24       	jz	$+134    	;abs 0x9e92
    9e0e:	7e 90 25 00 	cmp.b	#37,	r14	;#0x0025
    9e12:	e0 27       	jz	$-62     	;abs 0x9dd4
    9e14:	7e 90 20 00 	cmp.b	#32,	r14	;#0x0020
    9e18:	32 20       	jnz	$+102    	;abs 0x9e7e
    9e1a:	56 3c       	jmp	$+174    	;abs 0x9ec8
    9e1c:	7e 90 2d 00 	cmp.b	#45,	r14	;#0x002d
    9e20:	49 24       	jz	$+148    	;abs 0x9eb4
    9e22:	7e 90 2e 00 	cmp.b	#46,	r14	;#0x002e
    9e26:	5b 24       	jz	$+184    	;abs 0x9ede
    9e28:	7e 90 2b 00 	cmp.b	#43,	r14	;#0x002b
    9e2c:	28 20       	jnz	$+82     	;abs 0x9e7e
    9e2e:	47 3c       	jmp	$+144    	;abs 0x9ebe
    9e30:	7e 90 3a 00 	cmp.b	#58,	r14	;#0x003a
    9e34:	8c 38       	jl	$+282    	;abs 0x9f4e
    9e36:	7e 90 58 00 	cmp.b	#88,	r14	;#0x0058
    9e3a:	21 20       	jnz	$+68     	;abs 0x9e7e
    9e3c:	e9 3c       	jmp	$+468    	;abs 0xa010
    9e3e:	7e 90 6f 00 	cmp.b	#111,	r14	;#0x006f
    9e42:	24 24       	jz	$+74     	;abs 0x9e8c
    9e44:	7e 90 70 00 	cmp.b	#112,	r14	;#0x0070
    9e48:	0a 34       	jge	$+22     	;abs 0x9e5e
    9e4a:	7e 90 69 00 	cmp.b	#105,	r14	;#0x0069
    9e4e:	e3 24       	jz	$+456    	;abs 0xa016
    9e50:	7e 90 6c 00 	cmp.b	#108,	r14	;#0x006c
    9e54:	22 24       	jz	$+70     	;abs 0x9e9a
    9e56:	7e 90 64 00 	cmp.b	#100,	r14	;#0x0064
    9e5a:	11 20       	jnz	$+36     	;abs 0x9e7e
    9e5c:	dc 3c       	jmp	$+442    	;abs 0xa016
    9e5e:	7e 90 73 00 	cmp.b	#115,	r14	;#0x0073
    9e62:	98 24       	jz	$+306    	;abs 0x9f94
    9e64:	7e 90 74 00 	cmp.b	#116,	r14	;#0x0074
    9e68:	04 34       	jge	$+10     	;abs 0x9e72
    9e6a:	7e 90 70 00 	cmp.b	#112,	r14	;#0x0070
    9e6e:	07 20       	jnz	$+16     	;abs 0x9e7e
    9e70:	b8 3c       	jmp	$+370    	;abs 0x9fe2
    9e72:	7e 90 75 00 	cmp.b	#117,	r14	;#0x0075
    9e76:	d1 24       	jz	$+420    	;abs 0xa01a
    9e78:	7e 90 78 00 	cmp.b	#120,	r14	;#0x0078
    9e7c:	d2 24       	jz	$+422    	;abs 0xa022
    9e7e:	19 41 3e 00 	mov	62(r1),	r9	;0x003e(r1)
    9e82:	18 41 2c 00 	mov	44(r1),	r8	;0x002c(r1)
    9e86:	08 89       	sub	r9,	r8	
    9e88:	30 40 94 a3 	br	#0xa394	
    9e8c:	b1 42 28 00 	mov	#8,	40(r1)	;r2 As==11, 0x0028(r1)
    9e90:	cb 3c       	jmp	$+408    	;abs 0xa028
    9e92:	f1 d2 00 00 	bis.b	#8,	0(r1)	;r2 As==11, 0x0000(r1)
    9e96:	30 40 c4 a3 	br	#0xa3c4	
    9e9a:	69 41       	mov.b	@r1,	r9	
    9e9c:	59 f3       	and.b	#1,	r9	;r3 As==01
    9e9e:	6e 41       	mov.b	@r1,	r14	
    9ea0:	04 24       	jz	$+10     	;abs 0x9eaa
    9ea2:	7e f0 fe ff 	and.b	#-2,	r14	;#0xfffe
    9ea6:	6e d3       	bis.b	#2,	r14	;r3 As==10
    9ea8:	01 3c       	jmp	$+4      	;abs 0x9eac
    9eaa:	5e d3       	bis.b	#1,	r14	;r3 As==01
    9eac:	c1 4e 00 00 	mov.b	r14,	0(r1)	;0x0000(r1)
    9eb0:	30 40 c4 a3 	br	#0xa3c4	
    9eb4:	f1 d0 10 00 	bis.b	#16,	0(r1)	;#0x0010, 0x0000(r1)
    9eb8:	00 00 
    9eba:	30 40 c4 a3 	br	#0xa3c4	
    9ebe:	f1 40 2b 00 	mov.b	#43,	2(r1)	;#0x002b, 0x0002(r1)
    9ec2:	02 00 
    9ec4:	30 40 c4 a3 	br	#0xa3c4	
    9ec8:	f1 90 2b 00 	cmp.b	#43,	2(r1)	;#0x002b, 0x0002(r1)
    9ecc:	02 00 
    9ece:	02 20       	jnz	$+6      	;abs 0x9ed4
    9ed0:	30 40 c4 a3 	br	#0xa3c4	
    9ed4:	f1 40 20 00 	mov.b	#32,	2(r1)	;#0x0020, 0x0002(r1)
    9ed8:	02 00 
    9eda:	30 40 c4 a3 	br	#0xa3c4	
    9ede:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    9ee2:	02 24       	jz	$+6      	;abs 0x9ee8
    9ee4:	30 40 aa a3 	br	#0xa3aa	
    9ee8:	d1 43 2e 00 	mov.b	#1,	46(r1)	;r3 As==01, 0x002e(r1)
    9eec:	30 40 c4 a3 	br	#0xa3c4	
    9ef0:	0e 45       	mov	r5,	r14	
    9ef2:	2e 53       	incd	r14		
    9ef4:	2a 45       	mov	@r5,	r10	
    9ef6:	0a 93       	tst	r10		
    9ef8:	03 38       	jl	$+8      	;abs 0x9f00
    9efa:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    9efe:	0d 3c       	jmp	$+28     	;abs 0x9f1a
    9f00:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9f04:	02 24       	jz	$+6      	;abs 0x9f0a
    9f06:	30 40 ba a3 	br	#0xa3ba	
    9f0a:	f1 d0 10 00 	bis.b	#16,	0(r1)	;#0x0010, 0x0000(r1)
    9f0e:	00 00 
    9f10:	3a e3       	inv	r10		
    9f12:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    9f16:	91 53 26 00 	inc	38(r1)		;0x0026(r1)
    9f1a:	05 4e       	mov	r14,	r5	
    9f1c:	27 3c       	jmp	$+80     	;abs 0x9f6c
    9f1e:	81 93 26 00 	tst	38(r1)		;0x0026(r1)
    9f22:	15 20       	jnz	$+44     	;abs 0x9f4e
    9f24:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9f28:	12 20       	jnz	$+38     	;abs 0x9f4e
    9f2a:	69 41       	mov.b	@r1,	r9	
    9f2c:	79 f0 10 00 	and.b	#16,	r9	;#0x0010
    9f30:	5e 43       	mov.b	#1,	r14	;r3 As==01
    9f32:	01 24       	jz	$+4      	;abs 0x9f36
    9f34:	4e 43       	clr.b	r14		
    9f36:	4e 4e       	mov.b	r14,	r14	
    9f38:	0e 11       	rra	r14		
    9f3a:	0e 43       	clr	r14		
    9f3c:	4e 10       	rrc.b	r14		
    9f3e:	6a 41       	mov.b	@r1,	r10	
    9f40:	7a f0 7f 00 	and.b	#127,	r10	;#0x007f
    9f44:	4a de       	bis.b	r14,	r10	
    9f46:	c1 4a 00 00 	mov.b	r10,	0(r1)	;0x0000(r1)
    9f4a:	30 40 c4 a3 	br	#0xa3c4	
    9f4e:	1a 41 26 00 	mov	38(r1),	r10	;0x0026(r1)
    9f52:	0a 5a       	rla	r10		
    9f54:	0c 4a       	mov	r10,	r12	
    9f56:	0c 5c       	rla	r12		
    9f58:	0c 5c       	rla	r12		
    9f5a:	0a 5c       	add	r12,	r10	
    9f5c:	81 4a 26 00 	mov	r10,	38(r1)	;0x0026(r1)
    9f60:	b1 50 d0 ff 	add	#-48,	38(r1)	;#0xffd0, 0x0026(r1)
    9f64:	26 00 
    9f66:	8e 11       	sxt	r14		
    9f68:	81 5e 26 00 	add	r14,	38(r1)	;0x0026(r1)
    9f6c:	d1 43 2a 00 	mov.b	#1,	42(r1)	;r3 As==01, 0x002a(r1)
    9f70:	30 40 c4 a3 	br	#0xa3c4	
    9f74:	07 45       	mov	r5,	r7	
    9f76:	27 53       	incd	r7		
    9f78:	6e 45       	mov.b	@r5,	r14	
    9f7a:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9f7e:	03 20       	jnz	$+8      	;abs 0x9f86
    9f80:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    9f84:	26 27       	jz	$-434    	;abs 0x9dd2
    9f86:	c1 4e 04 00 	mov.b	r14,	4(r1)	;0x0004(r1)
    9f8a:	c1 43 05 00 	mov.b	#0,	5(r1)	;r3 As==00, 0x0005(r1)
    9f8e:	0e 41       	mov	r1,	r14	
    9f90:	2e 52       	add	#4,	r14	;r2 As==10
    9f92:	03 3c       	jmp	$+8      	;abs 0x9f9a
    9f94:	07 45       	mov	r5,	r7	
    9f96:	27 53       	incd	r7		
    9f98:	2e 45       	mov	@r5,	r14	
    9f9a:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    9f9e:	07 24       	jz	$+16     	;abs 0x9fae
    9fa0:	e1 d2 01 00 	bis.b	#4,	1(r1)	;r2 As==10, 0x0001(r1)
    9fa4:	1f 41 26 00 	mov	38(r1),	r15	;0x0026(r1)
    9fa8:	c1 4f 03 00 	mov.b	r15,	3(r1)	;0x0003(r1)
    9fac:	06 3c       	jmp	$+14     	;abs 0x9fba
    9fae:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    9fb2:	03 24       	jz	$+8      	;abs 0x9fba
    9fb4:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    9fb8:	30 00 
    9fba:	0e 93       	tst	r14		
    9fbc:	02 20       	jnz	$+6      	;abs 0x9fc2
    9fbe:	3e 40 98 a5 	mov	#-23144,r14	;#0xa598
    9fc2:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9fc6:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    9fca:	1d 41 34 00 	mov	52(r1),	r13	;0x0034(r1)
    9fce:	1f 41 3e 00 	mov	62(r1),	r15	;0x003e(r1)
    9fd2:	b0 12 b8 9b 	call	#0x9bb8	
    9fd6:	21 52       	add	#4,	r1	;r2 As==10
    9fd8:	81 5f 2c 00 	add	r15,	44(r1)	;0x002c(r1)
    9fdc:	05 47       	mov	r7,	r5	
    9fde:	30 40 a6 a3 	br	#0xa3a6	
    9fe2:	07 45       	mov	r5,	r7	
    9fe4:	27 53       	incd	r7		
    9fe6:	29 45       	mov	@r5,	r9	
    9fe8:	81 49 1e 00 	mov	r9,	30(r1)	;0x001e(r1)
    9fec:	5e 43       	mov.b	#1,	r14	;r3 As==01
    9fee:	09 93       	tst	r9		
    9ff0:	01 20       	jnz	$+4      	;abs 0x9ff4
    9ff2:	4e 43       	clr.b	r14		
    9ff4:	4e 5e       	rla.b	r14		
    9ff6:	4e 5e       	rla.b	r14		
    9ff8:	4e 5e       	rla.b	r14		
    9ffa:	6a 41       	mov.b	@r1,	r10	
    9ffc:	7a f0 f7 ff 	and.b	#-9,	r10	;#0xfff7
    a000:	4a de       	bis.b	r14,	r10	
    a002:	c1 4a 00 00 	mov.b	r10,	0(r1)	;0x0000(r1)
    a006:	05 47       	mov	r7,	r5	
    a008:	b1 40 10 00 	mov	#16,	40(r1)	;#0x0010, 0x0028(r1)
    a00c:	28 00 
    a00e:	53 3c       	jmp	$+168    	;abs 0xa0b6
    a010:	d1 d3 01 00 	bis.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    a014:	06 3c       	jmp	$+14     	;abs 0xa022
    a016:	e1 d2 00 00 	bis.b	#4,	0(r1)	;r2 As==10, 0x0000(r1)
    a01a:	b1 40 0a 00 	mov	#10,	40(r1)	;#0x000a, 0x0028(r1)
    a01e:	28 00 
    a020:	03 3c       	jmp	$+8      	;abs 0xa028
    a022:	b1 40 10 00 	mov	#16,	40(r1)	;#0x0010, 0x0028(r1)
    a026:	28 00 
    a028:	6b 41       	mov.b	@r1,	r11	
    a02a:	6b b3       	bit.b	#2,	r11	;r3 As==10
    a02c:	24 24       	jz	$+74     	;abs 0xa076
    a02e:	0c 45       	mov	r5,	r12	
    a030:	3c 52       	add	#8,	r12	;r2 As==11
    a032:	28 45       	mov	@r5,	r8	
    a034:	17 45 02 00 	mov	2(r5),	r7	;0x0002(r5)
    a038:	16 45 04 00 	mov	4(r5),	r6	;0x0004(r5)
    a03c:	1b 45 06 00 	mov	6(r5),	r11	;0x0006(r5)
    a040:	81 48 1e 00 	mov	r8,	30(r1)	;0x001e(r1)
    a044:	81 47 20 00 	mov	r7,	32(r1)	;0x0020(r1)
    a048:	81 46 22 00 	mov	r6,	34(r1)	;0x0022(r1)
    a04c:	81 4b 24 00 	mov	r11,	36(r1)	;0x0024(r1)
    a050:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    a054:	08 93       	tst	r8		
    a056:	06 20       	jnz	$+14     	;abs 0xa064
    a058:	07 93       	tst	r7		
    a05a:	04 20       	jnz	$+10     	;abs 0xa064
    a05c:	06 93       	tst	r6		
    a05e:	02 20       	jnz	$+6      	;abs 0xa064
    a060:	0b 93       	tst	r11		
    a062:	02 24       	jz	$+6      	;abs 0xa068
    a064:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    a068:	0b 5b       	rla	r11		
    a06a:	0b 43       	clr	r11		
    a06c:	0b 6b       	rlc	r11		
    a06e:	c1 4b 2f 00 	mov.b	r11,	47(r1)	;0x002f(r1)
    a072:	05 4c       	mov	r12,	r5	
    a074:	20 3c       	jmp	$+66     	;abs 0xa0b6
    a076:	5b f3       	and.b	#1,	r11	;r3 As==01
    a078:	07 45       	mov	r5,	r7	
    a07a:	0d 24       	jz	$+28     	;abs 0xa096
    a07c:	27 52       	add	#4,	r7	;r2 As==10
    a07e:	28 45       	mov	@r5,	r8	
    a080:	1b 45 02 00 	mov	2(r5),	r11	;0x0002(r5)
    a084:	81 48 1e 00 	mov	r8,	30(r1)	;0x001e(r1)
    a088:	81 4b 20 00 	mov	r11,	32(r1)	;0x0020(r1)
    a08c:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    a090:	08 93       	tst	r8		
    a092:	09 20       	jnz	$+20     	;abs 0xa0a6
    a094:	06 3c       	jmp	$+14     	;abs 0xa0a2
    a096:	27 53       	incd	r7		
    a098:	2b 45       	mov	@r5,	r11	
    a09a:	81 4b 1e 00 	mov	r11,	30(r1)	;0x001e(r1)
    a09e:	d1 43 2b 00 	mov.b	#1,	43(r1)	;r3 As==01, 0x002b(r1)
    a0a2:	0b 93       	tst	r11		
    a0a4:	02 24       	jz	$+6      	;abs 0xa0aa
    a0a6:	c1 43 2b 00 	mov.b	#0,	43(r1)	;r3 As==00, 0x002b(r1)
    a0aa:	0b 5b       	rla	r11		
    a0ac:	0b 43       	clr	r11		
    a0ae:	0b 6b       	rlc	r11		
    a0b0:	c1 4b 2f 00 	mov.b	r11,	47(r1)	;0x002f(r1)
    a0b4:	05 47       	mov	r7,	r5	
    a0b6:	f1 b2 00 00 	bit.b	#8,	0(r1)	;r2 As==11, 0x0000(r1)
    a0ba:	12 24       	jz	$+38     	;abs 0xa0e0
    a0bc:	c1 93 2b 00 	tst.b	43(r1)		;0x002b(r1)
    a0c0:	0f 20       	jnz	$+32     	;abs 0xa0e0
    a0c2:	68 41       	mov.b	@r1,	r8	
    a0c4:	b1 90 10 00 	cmp	#16,	40(r1)	;#0x0010, 0x0028(r1)
    a0c8:	28 00 
    a0ca:	03 20       	jnz	$+8      	;abs 0xa0d2
    a0cc:	78 d0 40 00 	bis.b	#64,	r8	;#0x0040
    a0d0:	05 3c       	jmp	$+12     	;abs 0xa0dc
    a0d2:	b1 92 28 00 	cmp	#8,	40(r1)	;r2 As==11, 0x0028(r1)
    a0d6:	04 20       	jnz	$+10     	;abs 0xa0e0
    a0d8:	78 d0 20 00 	bis.b	#32,	r8	;#0x0020
    a0dc:	c1 48 00 00 	mov.b	r8,	0(r1)	;0x0000(r1)
    a0e0:	68 41       	mov.b	@r1,	r8	
    a0e2:	68 b2       	bit.b	#4,	r8	;r2 As==10
    a0e4:	30 24       	jz	$+98     	;abs 0xa146
    a0e6:	c1 93 2f 00 	tst.b	47(r1)		;0x002f(r1)
    a0ea:	2d 24       	jz	$+92     	;abs 0xa146
    a0ec:	f1 40 2d 00 	mov.b	#45,	2(r1)	;#0x002d, 0x0002(r1)
    a0f0:	02 00 
    a0f2:	68 b3       	bit.b	#2,	r8	;r3 As==10
    a0f4:	11 24       	jz	$+36     	;abs 0xa118
    a0f6:	b1 e3 1e 00 	xor	#-1,	30(r1)	;r3 As==11, 0x001e(r1)
    a0fa:	b1 e3 20 00 	xor	#-1,	32(r1)	;r3 As==11, 0x0020(r1)
    a0fe:	b1 e3 22 00 	xor	#-1,	34(r1)	;r3 As==11, 0x0022(r1)
    a102:	b1 e3 24 00 	xor	#-1,	36(r1)	;r3 As==11, 0x0024(r1)
    a106:	91 53 1e 00 	inc	30(r1)		;0x001e(r1)
    a10a:	81 63 20 00 	adc	32(r1)		;0x0020(r1)
    a10e:	81 63 22 00 	adc	34(r1)		;0x0022(r1)
    a112:	81 63 24 00 	adc	36(r1)		;0x0024(r1)
    a116:	17 3c       	jmp	$+48     	;abs 0xa146
    a118:	58 b3       	bit.b	#1,	r8	;r3 As==01
    a11a:	0f 24       	jz	$+32     	;abs 0xa13a
    a11c:	1a 41 1e 00 	mov	30(r1),	r10	;0x001e(r1)
    a120:	1b 41 20 00 	mov	32(r1),	r11	;0x0020(r1)
    a124:	3a e3       	inv	r10		
    a126:	3b e3       	inv	r11		
    a128:	0e 4a       	mov	r10,	r14	
    a12a:	0f 4b       	mov	r11,	r15	
    a12c:	1e 53       	inc	r14		
    a12e:	0f 63       	adc	r15		
    a130:	81 4e 1e 00 	mov	r14,	30(r1)	;0x001e(r1)
    a134:	81 4f 20 00 	mov	r15,	32(r1)	;0x0020(r1)
    a138:	06 3c       	jmp	$+14     	;abs 0xa146
    a13a:	1a 41 1e 00 	mov	30(r1),	r10	;0x001e(r1)
    a13e:	3a e3       	inv	r10		
    a140:	1a 53       	inc	r10		
    a142:	81 4a 1e 00 	mov	r10,	30(r1)	;0x001e(r1)
    a146:	c1 43 1b 00 	mov.b	#0,	27(r1)	;r3 As==00, 0x001b(r1)
    a14a:	68 b3       	bit.b	#2,	r8	;r3 As==10
    a14c:	6a 24       	jz	$+214    	;abs 0xa222
    a14e:	16 41 1e 00 	mov	30(r1),	r6	;0x001e(r1)
    a152:	91 41 20 00 	mov	32(r1),	60(r1)	;0x0020(r1), 0x003c(r1)
    a156:	3c 00 
    a158:	18 41 22 00 	mov	34(r1),	r8	;0x0022(r1)
    a15c:	14 41 24 00 	mov	36(r1),	r4	;0x0024(r1)
    a160:	07 41       	mov	r1,	r7	
    a162:	37 50 1a 00 	add	#26,	r7	;#0x001a
    a166:	09 46       	mov	r6,	r9	
    a168:	91 41 28 00 	mov	40(r1),	50(r1)	;0x0028(r1), 0x0032(r1)
    a16c:	32 00 
    a16e:	1b 41 28 00 	mov	40(r1),	r11	;0x0028(r1)
    a172:	8b 10       	swpb	r11		
    a174:	8b 11       	sxt	r11		
    a176:	8b 10       	swpb	r11		
    a178:	8b 11       	sxt	r11		
    a17a:	81 4b 34 00 	mov	r11,	52(r1)	;0x0034(r1)
    a17e:	81 4b 36 00 	mov	r11,	54(r1)	;0x0036(r1)
    a182:	81 4b 38 00 	mov	r11,	56(r1)	;0x0038(r1)
    a186:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    a18a:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    a18e:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    a192:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    a196:	0c 49       	mov	r9,	r12	
    a198:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    a19c:	0e 48       	mov	r8,	r14	
    a19e:	0f 44       	mov	r4,	r15	
    a1a0:	b0 12 b2 a4 	call	#0xa4b2	
    a1a4:	31 52       	add	#8,	r1	;r2 As==11
    a1a6:	0b 4c       	mov	r12,	r11	
    a1a8:	3c 90 0a 00 	cmp	#10,	r12	;#0x000a
    a1ac:	05 34       	jge	$+12     	;abs 0xa1b8
    a1ae:	7b 50 30 00 	add.b	#48,	r11	;#0x0030
    a1b2:	c7 4b 00 00 	mov.b	r11,	0(r7)	;0x0000(r7)
    a1b6:	0c 3c       	jmp	$+26     	;abs 0xa1d0
    a1b8:	4b 4c       	mov.b	r12,	r11	
    a1ba:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    a1be:	03 24       	jz	$+8      	;abs 0xa1c6
    a1c0:	7a 40 37 00 	mov.b	#55,	r10	;#0x0037
    a1c4:	02 3c       	jmp	$+6      	;abs 0xa1ca
    a1c6:	7a 40 57 00 	mov.b	#87,	r10	;#0x0057
    a1ca:	4a 5b       	add.b	r11,	r10	
    a1cc:	c7 4a 00 00 	mov.b	r10,	0(r7)	;0x0000(r7)
    a1d0:	06 47       	mov	r7,	r6	
    a1d2:	36 53       	add	#-1,	r6	;r3 As==11
    a1d4:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    a1d8:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    a1dc:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    a1e0:	11 12 3a 00 	push	58(r1)		;0x003a(r1)
    a1e4:	0c 49       	mov	r9,	r12	
    a1e6:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    a1ea:	0e 48       	mov	r8,	r14	
    a1ec:	0f 44       	mov	r4,	r15	
    a1ee:	b0 12 8c a4 	call	#0xa48c	
    a1f2:	31 52       	add	#8,	r1	;r2 As==11
    a1f4:	09 4c       	mov	r12,	r9	
    a1f6:	81 4d 3c 00 	mov	r13,	60(r1)	;0x003c(r1)
    a1fa:	08 4e       	mov	r14,	r8	
    a1fc:	04 4f       	mov	r15,	r4	
    a1fe:	37 53       	add	#-1,	r7	;r3 As==11
    a200:	0c 93       	tst	r12		
    a202:	b2 23       	jnz	$-154    	;abs 0xa168
    a204:	0d 93       	tst	r13		
    a206:	b0 23       	jnz	$-158    	;abs 0xa168
    a208:	0e 93       	tst	r14		
    a20a:	ae 23       	jnz	$-162    	;abs 0xa168
    a20c:	0f 93       	tst	r15		
    a20e:	ac 23       	jnz	$-166    	;abs 0xa168
    a210:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    a214:	81 43 20 00 	mov	#0,	32(r1)	;r3 As==00, 0x0020(r1)
    a218:	81 43 22 00 	mov	#0,	34(r1)	;r3 As==00, 0x0022(r1)
    a21c:	81 43 24 00 	mov	#0,	36(r1)	;r3 As==00, 0x0024(r1)
    a220:	6c 3c       	jmp	$+218    	;abs 0xa2fa
    a222:	58 b3       	bit.b	#1,	r8	;r3 As==01
    a224:	3e 24       	jz	$+126    	;abs 0xa2a2
    a226:	14 41 1e 00 	mov	30(r1),	r4	;0x001e(r1)
    a22a:	17 41 20 00 	mov	32(r1),	r7	;0x0020(r1)
    a22e:	08 41       	mov	r1,	r8	
    a230:	38 50 1a 00 	add	#26,	r8	;#0x001a
    a234:	19 41 28 00 	mov	40(r1),	r9	;0x0028(r1)
    a238:	89 10       	swpb	r9		
    a23a:	89 11       	sxt	r9		
    a23c:	89 10       	swpb	r9		
    a23e:	89 11       	sxt	r9		
    a240:	1c 41 28 00 	mov	40(r1),	r12	;0x0028(r1)
    a244:	0d 49       	mov	r9,	r13	
    a246:	0e 44       	mov	r4,	r14	
    a248:	0f 47       	mov	r7,	r15	
    a24a:	b0 12 24 a4 	call	#0xa424	
    a24e:	0b 4e       	mov	r14,	r11	
    a250:	3e 90 0a 00 	cmp	#10,	r14	;#0x000a
    a254:	05 34       	jge	$+12     	;abs 0xa260
    a256:	7b 50 30 00 	add.b	#48,	r11	;#0x0030
    a25a:	c8 4b 00 00 	mov.b	r11,	0(r8)	;0x0000(r8)
    a25e:	0c 3c       	jmp	$+26     	;abs 0xa278
    a260:	4b 4e       	mov.b	r14,	r11	
    a262:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    a266:	03 24       	jz	$+8      	;abs 0xa26e
    a268:	7a 40 37 00 	mov.b	#55,	r10	;#0x0037
    a26c:	02 3c       	jmp	$+6      	;abs 0xa272
    a26e:	7a 40 57 00 	mov.b	#87,	r10	;#0x0057
    a272:	4a 5b       	add.b	r11,	r10	
    a274:	c8 4a 00 00 	mov.b	r10,	0(r8)	;0x0000(r8)
    a278:	06 48       	mov	r8,	r6	
    a27a:	36 53       	add	#-1,	r6	;r3 As==11
    a27c:	1c 41 28 00 	mov	40(r1),	r12	;0x0028(r1)
    a280:	0d 49       	mov	r9,	r13	
    a282:	0e 44       	mov	r4,	r14	
    a284:	0f 47       	mov	r7,	r15	
    a286:	b0 12 ee a3 	call	#0xa3ee	
    a28a:	04 4e       	mov	r14,	r4	
    a28c:	07 4f       	mov	r15,	r7	
    a28e:	38 53       	add	#-1,	r8	;r3 As==11
    a290:	0e 93       	tst	r14		
    a292:	d0 23       	jnz	$-94     	;abs 0xa234
    a294:	0f 93       	tst	r15		
    a296:	ce 23       	jnz	$-98     	;abs 0xa234
    a298:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    a29c:	81 43 20 00 	mov	#0,	32(r1)	;r3 As==00, 0x0020(r1)
    a2a0:	2c 3c       	jmp	$+90     	;abs 0xa2fa
    a2a2:	17 41 1e 00 	mov	30(r1),	r7	;0x001e(r1)
    a2a6:	08 41       	mov	r1,	r8	
    a2a8:	38 50 1a 00 	add	#26,	r8	;#0x001a
    a2ac:	1e 41 28 00 	mov	40(r1),	r14	;0x0028(r1)
    a2b0:	0f 47       	mov	r7,	r15	
    a2b2:	b0 12 92 9b 	call	#0x9b92	
    a2b6:	0d 4f       	mov	r15,	r13	
    a2b8:	3f 90 0a 00 	cmp	#10,	r15	;#0x000a
    a2bc:	05 34       	jge	$+12     	;abs 0xa2c8
    a2be:	7d 50 30 00 	add.b	#48,	r13	;#0x0030
    a2c2:	c8 4d 00 00 	mov.b	r13,	0(r8)	;0x0000(r8)
    a2c6:	0c 3c       	jmp	$+26     	;abs 0xa2e0
    a2c8:	4d 4f       	mov.b	r15,	r13	
    a2ca:	d1 b3 01 00 	bit.b	#1,	1(r1)	;r3 As==01, 0x0001(r1)
    a2ce:	03 24       	jz	$+8      	;abs 0xa2d6
    a2d0:	7c 40 37 00 	mov.b	#55,	r12	;#0x0037
    a2d4:	02 3c       	jmp	$+6      	;abs 0xa2da
    a2d6:	7c 40 57 00 	mov.b	#87,	r12	;#0x0057
    a2da:	4c 5d       	add.b	r13,	r12	
    a2dc:	c8 4c 00 00 	mov.b	r12,	0(r8)	;0x0000(r8)
    a2e0:	06 48       	mov	r8,	r6	
    a2e2:	36 53       	add	#-1,	r6	;r3 As==11
    a2e4:	1e 41 28 00 	mov	40(r1),	r14	;0x0028(r1)
    a2e8:	0f 47       	mov	r7,	r15	
    a2ea:	b0 12 78 9b 	call	#0x9b78	
    a2ee:	07 4f       	mov	r15,	r7	
    a2f0:	38 53       	add	#-1,	r8	;r3 As==11
    a2f2:	0f 93       	tst	r15		
    a2f4:	db 23       	jnz	$-72     	;abs 0xa2ac
    a2f6:	81 43 1e 00 	mov	#0,	30(r1)	;r3 As==00, 0x001e(r1)
    a2fa:	b1 90 0a 00 	cmp	#10,	40(r1)	;#0x000a, 0x0028(r1)
    a2fe:	28 00 
    a300:	02 24       	jz	$+6      	;abs 0xa306
    a302:	c1 43 02 00 	mov.b	#0,	2(r1)	;r3 As==00, 0x0002(r1)
    a306:	c1 93 2e 00 	tst.b	46(r1)		;0x002e(r1)
    a30a:	2a 24       	jz	$+86     	;abs 0xa360
    a30c:	0f 41       	mov	r1,	r15	
    a30e:	3f 50 1c 00 	add	#28,	r15	;#0x001c
    a312:	81 4f 42 00 	mov	r15,	66(r1)	;0x0042(r1)
    a316:	1a 41 1c 00 	mov	28(r1),	r10	;0x001c(r1)
    a31a:	8a 10       	swpb	r10		
    a31c:	8a 11       	sxt	r10		
    a31e:	8a 10       	swpb	r10		
    a320:	8a 11       	sxt	r10		
    a322:	81 4a 44 00 	mov	r10,	68(r1)	;0x0044(r1)
    a326:	81 46 46 00 	mov	r6,	70(r1)	;0x0046(r1)
    a32a:	0a 46       	mov	r6,	r10	
    a32c:	8a 10       	swpb	r10		
    a32e:	8a 11       	sxt	r10		
    a330:	8a 10       	swpb	r10		
    a332:	8a 11       	sxt	r10		
    a334:	81 4a 48 00 	mov	r10,	72(r1)	;0x0048(r1)
    a338:	1c 41 42 00 	mov	66(r1),	r12	;0x0042(r1)
    a33c:	1d 41 44 00 	mov	68(r1),	r13	;0x0044(r1)
    a340:	1c 81 46 00 	sub	70(r1),	r12	;0x0046(r1)
    a344:	1d 71 48 00 	subc	72(r1),	r13	;0x0048(r1)
    a348:	2c 83       	decd	r12		
    a34a:	1c 91 26 00 	cmp	38(r1),	r12	;0x0026(r1)
    a34e:	0e 2c       	jc	$+30     	;abs 0xa36c
    a350:	e1 d3 01 00 	bis.b	#2,	1(r1)	;r3 As==10, 0x0001(r1)
    a354:	5e 41 26 00 	mov.b	38(r1),	r14	;0x0026(r1)
    a358:	4e 8c       	sub.b	r12,	r14	
    a35a:	c1 4e 03 00 	mov.b	r14,	3(r1)	;0x0003(r1)
    a35e:	06 3c       	jmp	$+14     	;abs 0xa36c
    a360:	c1 93 2a 00 	tst.b	42(r1)		;0x002a(r1)
    a364:	03 24       	jz	$+8      	;abs 0xa36c
    a366:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    a36a:	30 00 
    a36c:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    a370:	11 12 04 00 	push	4(r1)		;0x0004(r1)
    a374:	1d 41 34 00 	mov	52(r1),	r13	;0x0034(r1)
    a378:	0e 46       	mov	r6,	r14	
    a37a:	1e 53       	inc	r14		
    a37c:	1f 41 3e 00 	mov	62(r1),	r15	;0x003e(r1)
    a380:	b0 12 b8 9b 	call	#0x9bb8	
    a384:	21 52       	add	#4,	r1	;r2 As==10
    a386:	81 5f 2c 00 	add	r15,	44(r1)	;0x002c(r1)
    a38a:	0d 3c       	jmp	$+28     	;abs 0xa3a6
    a38c:	7f 49       	mov.b	@r9+,	r15	
    a38e:	8f 11       	sxt	r15		
    a390:	91 12 3c 00 	call	60(r1)		;0x003c(r1)
    a394:	0e 49       	mov	r9,	r14	
    a396:	0e 58       	add	r8,	r14	
    a398:	19 91 40 00 	cmp	64(r1),	r9	;0x0040(r1)
    a39c:	f7 2b       	jnc	$-16     	;abs 0xa38c
    a39e:	81 49 3e 00 	mov	r9,	62(r1)	;0x003e(r1)
    a3a2:	81 4e 2c 00 	mov	r14,	44(r1)	;0x002c(r1)
    a3a6:	07 43       	clr	r7		
    a3a8:	0e 3c       	jmp	$+30     	;abs 0xa3c6
    a3aa:	91 41 26 00 	mov	38(r1),	48(r1)	;0x0026(r1), 0x0030(r1)
    a3ae:	30 00 
    a3b0:	d1 43 2e 00 	mov.b	#1,	46(r1)	;r3 As==01, 0x002e(r1)
    a3b4:	c1 43 2a 00 	mov.b	#0,	42(r1)	;r3 As==00, 0x002a(r1)
    a3b8:	03 3c       	jmp	$+8      	;abs 0xa3c0
    a3ba:	05 4e       	mov	r14,	r5	
    a3bc:	d1 43 2a 00 	mov.b	#1,	42(r1)	;r3 As==01, 0x002a(r1)
    a3c0:	81 43 26 00 	mov	#0,	38(r1)	;r3 As==00, 0x0026(r1)
    a3c4:	17 43       	mov	#1,	r7	;r3 As==01
    a3c6:	16 41 40 00 	mov	64(r1),	r6	;0x0040(r1)
    a3ca:	6e 46       	mov.b	@r6,	r14	
    a3cc:	4e 93       	tst.b	r14		
    a3ce:	02 24       	jz	$+6      	;abs 0xa3d4
    a3d0:	30 40 9c 9d 	br	#0x9d9c	
    a3d4:	1f 41 2c 00 	mov	44(r1),	r15	;0x002c(r1)
    a3d8:	31 50 4a 00 	add	#74,	r1	;#0x004a
    a3dc:	34 41       	pop	r4		
    a3de:	35 41       	pop	r5		
    a3e0:	36 41       	pop	r6		
    a3e2:	37 41       	pop	r7		
    a3e4:	38 41       	pop	r8		
    a3e6:	39 41       	pop	r9		
    a3e8:	3a 41       	pop	r10		
    a3ea:	3b 41       	pop	r11		
    a3ec:	30 41       	ret			

0000a3ee <__udivsi3>:
    a3ee:	0b 12       	push	r11		
    a3f0:	0a 12       	push	r10		
    a3f2:	09 12       	push	r9		
    a3f4:	79 40 20 00 	mov.b	#32,	r9	;#0x0020
    a3f8:	0a 4c       	mov	r12,	r10	
    a3fa:	0b 4d       	mov	r13,	r11	
    a3fc:	0c 43       	clr	r12		
    a3fe:	0d 43       	clr	r13		
    a400:	0e 5e       	rla	r14		
    a402:	0f 6f       	rlc	r15		
    a404:	0c 6c       	rlc	r12		
    a406:	0d 6d       	rlc	r13		
    a408:	0d 9b       	cmp	r11,	r13	
    a40a:	06 28       	jnc	$+14     	;abs 0xa418
    a40c:	02 20       	jnz	$+6      	;abs 0xa412
    a40e:	0c 9a       	cmp	r10,	r12	
    a410:	03 28       	jnc	$+8      	;abs 0xa418
    a412:	0c 8a       	sub	r10,	r12	
    a414:	0d 7b       	subc	r11,	r13	
    a416:	1e d3       	bis	#1,	r14	;r3 As==01
    a418:	19 83       	dec	r9		
    a41a:	f2 23       	jnz	$-26     	;abs 0xa400
    a41c:	39 41       	pop	r9		
    a41e:	3a 41       	pop	r10		
    a420:	3b 41       	pop	r11		
    a422:	30 41       	ret			

0000a424 <__umodsi3>:
    a424:	b0 12 ee a3 	call	#0xa3ee	
    a428:	0e 4c       	mov	r12,	r14	
    a42a:	0f 4d       	mov	r13,	r15	
    a42c:	30 41       	ret			

0000a42e <__xabi_udivmod64>:
    a42e:	07 12       	push	r7		
    a430:	06 12       	push	r6		
    a432:	05 12       	push	r5		
    a434:	04 12       	push	r4		
    a436:	30 12 40 00 	push	#64		;#0x0040
    a43a:	04 48       	mov	r8,	r4	
    a43c:	05 49       	mov	r9,	r5	
    a43e:	06 4a       	mov	r10,	r6	
    a440:	07 4b       	mov	r11,	r7	
    a442:	08 43       	clr	r8		
    a444:	09 43       	clr	r9		
    a446:	0a 43       	clr	r10		
    a448:	0b 43       	clr	r11		
    a44a:	0c 5c       	rla	r12		
    a44c:	0d 6d       	rlc	r13		
    a44e:	0e 6e       	rlc	r14		
    a450:	0f 6f       	rlc	r15		
    a452:	08 68       	rlc	r8		
    a454:	09 69       	rlc	r9		
    a456:	0a 6a       	rlc	r10		
    a458:	0b 6b       	rlc	r11		
    a45a:	0b 97       	cmp	r7,	r11	
    a45c:	0e 28       	jnc	$+30     	;abs 0xa47a
    a45e:	08 20       	jnz	$+18     	;abs 0xa470
    a460:	0a 96       	cmp	r6,	r10	
    a462:	0b 28       	jnc	$+24     	;abs 0xa47a
    a464:	05 20       	jnz	$+12     	;abs 0xa470
    a466:	09 95       	cmp	r5,	r9	
    a468:	08 28       	jnc	$+18     	;abs 0xa47a
    a46a:	02 20       	jnz	$+6      	;abs 0xa470
    a46c:	08 94       	cmp	r4,	r8	
    a46e:	05 28       	jnc	$+12     	;abs 0xa47a
    a470:	08 84       	sub	r4,	r8	
    a472:	09 75       	subc	r5,	r9	
    a474:	0a 76       	subc	r6,	r10	
    a476:	0b 77       	subc	r7,	r11	
    a478:	1c d3       	bis	#1,	r12	;r3 As==01
    a47a:	91 83 00 00 	dec	0(r1)		;0x0000(r1)
    a47e:	e5 23       	jnz	$-52     	;abs 0xa44a
    a480:	21 53       	incd	r1		
    a482:	34 41       	pop	r4		
    a484:	35 41       	pop	r5		
    a486:	36 41       	pop	r6		
    a488:	37 41       	pop	r7		
    a48a:	30 41       	ret			

0000a48c <__udivdi3>:
    a48c:	0b 12       	push	r11		
    a48e:	0a 12       	push	r10		
    a490:	09 12       	push	r9		
    a492:	08 12       	push	r8		
    a494:	18 41 0a 00 	mov	10(r1),	r8	;0x000a(r1)
    a498:	19 41 0c 00 	mov	12(r1),	r9	;0x000c(r1)
    a49c:	1a 41 0e 00 	mov	14(r1),	r10	;0x000e(r1)
    a4a0:	1b 41 10 00 	mov	16(r1),	r11	;0x0010(r1)
    a4a4:	b0 12 2e a4 	call	#0xa42e	
    a4a8:	38 41       	pop	r8		
    a4aa:	39 41       	pop	r9		
    a4ac:	3a 41       	pop	r10		
    a4ae:	3b 41       	pop	r11		
    a4b0:	30 41       	ret			

0000a4b2 <__umoddi3>:
    a4b2:	0b 12       	push	r11		
    a4b4:	0a 12       	push	r10		
    a4b6:	09 12       	push	r9		
    a4b8:	08 12       	push	r8		
    a4ba:	18 41 0a 00 	mov	10(r1),	r8	;0x000a(r1)
    a4be:	19 41 0c 00 	mov	12(r1),	r9	;0x000c(r1)
    a4c2:	1a 41 0e 00 	mov	14(r1),	r10	;0x000e(r1)
    a4c6:	1b 41 10 00 	mov	16(r1),	r11	;0x0010(r1)
    a4ca:	b0 12 2e a4 	call	#0xa42e	
    a4ce:	0c 48       	mov	r8,	r12	
    a4d0:	0d 49       	mov	r9,	r13	
    a4d2:	0e 4a       	mov	r10,	r14	
    a4d4:	0f 4b       	mov	r11,	r15	
    a4d6:	38 41       	pop	r8		
    a4d8:	39 41       	pop	r9		
    a4da:	3a 41       	pop	r10		
    a4dc:	3b 41       	pop	r11		
    a4de:	30 41       	ret			

0000a4e0 <__udivmoddi4>:
    a4e0:	0b 12       	push	r11		
    a4e2:	0a 12       	push	r10		
    a4e4:	09 12       	push	r9		
    a4e6:	08 12       	push	r8		
    a4e8:	07 12       	push	r7		
    a4ea:	18 41 0c 00 	mov	12(r1),	r8	;0x000c(r1)
    a4ee:	19 41 0e 00 	mov	14(r1),	r9	;0x000e(r1)
    a4f2:	1a 41 10 00 	mov	16(r1),	r10	;0x0010(r1)
    a4f6:	1b 41 12 00 	mov	18(r1),	r11	;0x0012(r1)
    a4fa:	b0 12 2e a4 	call	#0xa42e	
    a4fe:	17 41 14 00 	mov	20(r1),	r7	;0x0014(r1)
    a502:	87 48 00 00 	mov	r8,	0(r7)	;0x0000(r7)
    a506:	87 49 02 00 	mov	r9,	2(r7)	;0x0002(r7)
    a50a:	87 4a 04 00 	mov	r10,	4(r7)	;0x0004(r7)
    a50e:	87 4b 06 00 	mov	r11,	6(r7)	;0x0006(r7)
    a512:	37 41       	pop	r7		
    a514:	38 41       	pop	r8		
    a516:	39 41       	pop	r9		
    a518:	3a 41       	pop	r10		
    a51a:	3b 41       	pop	r11		
    a51c:	30 41       	ret			

0000a51e <_unexpected_>:
    a51e:	00 13       	reti			

Disassembly of section .vectors:

0000ffe0 <__ivtbl_16>:
    ffe0:	dc 80 dc 80 dc 80 8a 91 dc 80 f0 83 dc 80 8c 9a     ................
    fff0:	dc 80 88 97 dc 80 dc 80 dc 80 6c 98 dc 80 00 80     ..........l.....
